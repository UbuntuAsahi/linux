linux-asahi-arm (6.12.0-1005.5) UNRELEASED; urgency=medium

  CHANGELOG: Do not edit directly. Autogenerated at release.
  CHANGELOG: Use the printchanges target to see the curent changes.
  CHANGELOG: Use the insertchanges target to create the final log.

 -- Vinicius Peixoto <vinicius.peixoto@canonical.com>  Sat, 08 Mar 2025 15:27:37 -0300

linux-asahi-arm (6.12.0-1004.4) plucky; urgency=medium

  * Miscellaneous Ubuntu changes
    - [Packaging]: Fix linux-bpf-dev build error for non-main kernels
    - [Config] asahi-arm: Updating configs for updated Rust toolchain

 -- John Cabaj <john.cabaj@canonical.com>  Mon, 20 Jan 2025 16:34:25 -0600

linux-asahi-arm (6.12.0-1003.3) plucky; urgency=medium

  * Miscellaneous Ubuntu changes
    - [Config] asahi-arm: Updating configs for updated Rust toolchain

  * Miscellaneous upstream changes
    - arm64: dts: apple: t8103: Fix spi4 power domain sort order
    - arm64: dts: apple: t8103: Add spi controller nodes
    - arm64: dts: apple: t8112: Add spi controller nodes
    - arm64: dts: apple: t600x: Add spi controller nodes
    - arm64: dts: apple: Add SPI NOR nvram partition to all devices
    - arm64: dts: apple: t8112: Remove always-on from the PMP node
    - arm64: dts: apple: t8112: Add wlan/bt PCIe device nodes
    - arm64: dts: apple: t8112: Add PMU NVMEM and SMC RTC/reboot nodes
    - arm64: dts: apple: t8112: Add SMC node to devicetree
    - arm64: dts: apple: t8112*: Put in audio nodes
    - arm64: dts: apple: t8112: Add dwc3 nodes
    - arm64: dts: apple: t8112: Add mtp device nodes for j413/j493
    - arm64: dts: apple: t8103: Add dwc3 nodes
    - arm64: dts: apple: t8103: Add spi3 keyboard node
    - arm64: dts: apple: Add PCI power enable GPIOs
    - arm64: dts: apple: Add SMC node to t8103/t6001 devicetrees
    - arm64: dts: apple: Add PMU NVMEM and SMC RTC/reboot nodes
    - arm64: dts: apple: Mark ATC USB AON domains as always-on
    - arm64: dts: apple: Keep PCIe power domain on
    - arm64: dts: apple: Add SMC node to t600x devicetrees
    - arm64: dts: apple: Add PMU NVMEM and SMC RTC/reboot nodes
    - arm64: dts: apple: j31[46]: Add keyboard nodes
    - arm64: dts: apple: t600x: Add dwc3 nodes
    - arm64: dts: apple: Add WiFi module and antenna properties
    - arm64: dts: apple: Add PCI power enable GPIOs
    - arm64: dts: apple: t600x: Add bluetooth device trees
    - arm64: dts: apple: t8103*: Put in audio nodes
    - arm64: dts: apple: t600x-jxxx: Put in audio nodes
    - arm64: dts: apple: Drop 'integrated audio' from sound models
    - arm64: dts: apple: t6001-j375c: Add USB3 hub GPIO initialization
    - arch: arm64: apple: Add missing power state deps for display
    - arch: arm64: apple: t600x: Mark USB and PCIe as "dma-coherent"
    - arch: arm64: apple: Add display controller related device tree nodes
    - arch: arm64: apple: t600x: Add display controller related device tree nodes
    - arch: arm64: apple: t8103: Add connector type property for DCP*
    - arch: arm64: apple: t600x: Add connector type property for DCP*
    - arm64: dts: apple: t8103: Add eFuses node
    - arm64: dts: apple: t8103: Add ATCPHY node
    - arch: arm64: dts: apple: t6000: Add eFuses node
    - arch: arm64: dts: apple: t600x: Add ATCPHY nodes
    - arch: arm64: apple: Add dcp panel node for t8103 based laptops and imacs
    - arch: arm64: apple: Add dcp panel node for t600x based laptops
    - arm64: dts: apple: t8112: Add eFuses node
    - arm64: dts: apple: t8112: Add ATCPHY nodes
    - arm64: dts: apple: t8112: Add dcp/disp0 nodes
    - scripts/dtc: Add support for floating-point literals
    - arm64: dts: apple: t8103*: Add GPU nodes
    - arm64: dts: Add GPU performance data to t8103.dts
    - arm64: dts: Add power data for t8103
    - arm64: dts: Add t600x GPU nodes
    - arm64: dts: t8103: Add GPU leak coefficients
    - arm64: dts: apple: Add no-map to GPU reserved-memory nodes
    - arm64: dts: apple: Add GPU nodes to T8112
    - arm64: dts: apple: Add GPU firmware versions to t8113/t600x
    - arm64: dts: apple: t600x: Add DCP power domain to missing devices
    - arm64: dts: apple: t8103: Add DCP power domain to missing devices
    - arm64: dts: apple: t8112: Add DCP power domain to missing devices
    - arm64: dts: apple: t8103: Add missing ps_pmp dependency to ps_gfx
    - arm64: dts: apple: t600x: Add "ps_disp0_cpu0" as resets for dcp
    - arm64: dts: apple: t8103: Add "ps_disp0_cpu0" as resets for dcp
    - arm64: dts: apple: t8112: Add "ps_disp0_cpu0" as resets for dcp
    - arm64: dts: apple: j314/j316: Disable ATC3_USB_AON power domain
    - arm64: dts: apple: Add keyboard alias & layout props for t8112 laptops
    - arm64: dts: apple: Fix t600x mca IRQs
    - arm64: dts: apple: Add initial t602x device trees
    - arm64: dts: apple: Add MTP nodes to t6020x
    - arm64: dts: apple: Add identity dma-ranges mapping
    - DO NOT SUBMIT: arm64: dts: apple: t6020-j474s: Add unused PCIe port01
    - arm64: dts: apple: Add pmgr-misc nodes to t60xx
    - arm64: dts: apple: t600x: Remove obsolete comment in ans2 power domain
    - arm64: dts: apple: Make ps_msg always-on
    - arm64: dts: apple: t600x: Enable turbo CPU p-states
    - arm64: dts: apple: t8103: Enable turbo CPU p-states
    - arm64: dts: apple: t8112: Enable turbo CPU p-states
    - arm64: dts: apple: Add T602x GPU node
    - arm64: dts: apple: t600x-j375.dtsi: Add missing etherhet0 alias
    - arm64: dts: apple: Add initial t6022 support
    - arm64: dts: apple: Add j180d (Mac Pro 2023) device tree
    - arm64: dts: apple: t6022: Add APCIE-GE nodes
    - arm64: dts: apple: t8103: Add touchbar screen bindings
    - arm64: dts: apple: Add touchbar display nodes for t8112-j493
    - arm64: dts: apple: t8103: Add touchbar bindings
    - arm64: dts: apple: t8112: Add touchbar digitizer node
    - arm64: dts: apple: Add devicetree for Macbook Air (15-inch, M2, 2023)
    - arm64: dts: apple: t8112-j473: Set GPU base pstate
    - arm64: dts: apple: Share USB-C port node on t6022 devices
    - arm64: dts: apple: t6022: Disable dcp thouroughly
    - arm64: dts: apple: t6020-j474s: Disable dcp until lpdpphy is supported
    - arm64: dts: apple: t602x: Add initial Mac Studio (2023) device trees
    - arm64: dts: apple: t8112-j473: Add dptx-phy power-domain
    - arm64: dts: apple: t6020x: Mark dptx_phy_ps only on laptops always-on
    - arm64: dts: apple: t8112: add opp-microwatt props to avalanche/blizzard
    - arm64: dts: apple: t600x-j375.dtsi: Add spi nor flash and nvram partition
    - arm64: dts: apple: t6022-j180.dtsi: Add spi nor flash and nvram partition
    - arm64: dts: apple: t8103: Add nvram alias
    - arm64: dts: apple: t8112: Add nvram alias
    - arm64: dts: apple: t8103: Add ISP nodes
    - arm64: dts: apple: t6000: Add ISP nodes
    - arm64: dts: apple: t8112: Add ISP nodes
    - arm64: dts: apple: t602x: Add ISP nodes
    - arm64: dts: ISP platform configs
    - arm64: dts: apple: imx248: Add scaled and cropped presets
    - arm64: dts: apple: imx558: Add downscaled resolution presets
    - arm64: dts: apple: t8103-j274: Add speaker I/V sense slots
    - arm64: dts: apple: t600x-j314-j316: Add speaker I/V sense slots
    - arm64: dts: apple: t600x-j314-j316: Zero out unused speaker sense slots
    - arm64: dts: apple: t600x: Mark MCA power states as externally-clocked
    - arm64: dts: apple: t602x: Mark MCA power states as externally-clocked
    - arm64: dts: apple: t8103: Mark MCA power states as externally-clocked
    - arm64: dts: apple: t8112: Mark MCA power states as externally-clocked
    - arm64: dts: apple: t600x-j375: Add I/VMON slots to amp
    - arm64: dts: apple: t600x-j180d: Add I/VMON slots to amps
    - arm64: dts: apple: t8112-j413: Add I/VMON slots to amps
    - arm64: dts: apple: t8112-j415: Add I/VMON slots to amps
    - arm64: dts: apple: t8112-j473: Add I/VMON slots to amp
    - arm64: dts: apple: t8112-j493: Add I/VMON slots to amps
    - arm64: dts: apple: t8103-j293: Add I/VMON slots to amps
    - arm64: dts: apple: t8103-j313: Add I/VMON slots to amps
    - arm64: dts: apple: j314/j316: Enable speakers
    - arm64: dts: apple: j413: Enable speakers
    - arm64: dts: apple: j415: Enable speakers
    - arm64: dts: apple: j375: Add missing speaker amp IRQs
    - arm64: dts: apple: j293: Add missing speaker amp IRQs
    - arm64: dts: apple: j313: Add missing speaker amp IRQs
    - arm64: dts: apple: j413: Add missing speaker amp IRQs
    - arm64: dts: apple: j415: Add missing speaker amp IRQs
    - arm64: dts: apple: j493: Add missing speaker amp IRQs
    - arm64: dts: apple: j413: Model SDZ GPIO as a regulator
    - arm64: dts: apple: t600x-j314-j316: Set sound compatibles per device
    - arm64: dts: apple: j375 & friends: Enable speakers
    - arm64: dts: apple: j293: Enable speakers
    - arm64: dts: apple: j313: Enable speakers
    - arm64: dts: apple: j493: Enable speakers
    - arm64: dts: apple: describe shared SDZ GPIO for tas2764
    - arm64: dts: apple: j293: Model SDZ GPIO as a regulator
    - arm64: dts: apple: j313: Model SDZ GPIO as a regulator
    - arm64: dts: apple: add opp-microwatt to t8103/t600x
    - arm64: dts: apple: Disable ps_isp_sys unless it is used
    - arm64: dts: apple: t600x: Switch to apple,dma-range
    - arm64: dts: apple: t8103: Switch to apple,dma-range
    - arm64: dts: apple: t8112: Switch to apple,dma-range
    - arm64: dts: apple: t600x: Add "apple,min-state" to ps_dispextN_cpu0
    - arm64: dts: apple: t602x: Add "apple,min-state" to ps_dispextN_cpu0
    - arm64: dts: apple: t8103: Add dcpext/dispext0 nodes
    - arm64: dts: apple: t8112: Add dcpext/dispext0 nodes
    - arm64: dts: apple: t600x: Add t6000 dispext device nodes
    - arm64: dts: apple: t602x: Add t6020 dispext device nodes
    - arm64: dts: apple: t8112: Add dptx-phy node
    - arm64: dts: apple: t602x: Add lpdptx-phy node
    - arm64: dts: apple: t600x: Add device nodes for atc DP crossbar
    - arm64: dts: apple: t602x: Add device nodes for atc DP crossbar
    - arm64: dts: apple: t8112-j473: Enable dcp/dptx-phy/dp2hdmi
    - arm64: dts: apple: t6020-j474,t6021-j475: Enable dcp/dptx-phy/dp2hdmi
    - arm64: dts: apple: t6022-{j180,j475}: Enable dcpext0/dptx-phy/dp2hdmi
    - arm64: dts: apple: Fill device node for dp2hdmi on Macbook Pros
    - arm64: dts: apple: j474s/j475c: Use dcpext0 for HDMI out
    - arm64: dts: apple: t8112-j473: Use dcpext for HDMI out
    - fixup! arm64: dts: apple: Add initial t602x device trees
    - fixup! arch: arm64: apple: Add dcp panel node for t600x based laptops
    - fixup! arch: arm64: apple: Add dcp panel node for t8103 based laptops and
      imacs
    - fixup! arm64: dts: apple: t8112: Add dcp/disp0 nodes
    - fixup! arm64: dts: apple: Add devicetree for Macbook Air (15-inch, M2, 2023)
    - fixup! arm64: dts: apple: Add MTP nodes to t6020x
    - arm64: apple: t8103-pmgr: SIO: Add audio, spi and uart power-domains
    - arm64: apple: t8112-pmgr: SIO: Add audio, spi and uart power-domains
    - arm64: apple: t600x: pmgr: SIO: Add audio, spi and uart power-domains
    - arm64: apple: t602x: pmgr: SIO: Add audio, spi and uart power-domains
    - arm64: apple: t8103: Add SIO, DPA nodes; hook up to DCP
    - arm64: apple: t8112: Add SIO, DPA nodes; hook up to DCP
    - arm64: apple: t600x: Move dart_sio* to dieX
    - arm64: apple: t600x: Add sio and dpaudio device nodes
    - arm64: apple: t602x: Add sio and dpaudio device nodes
    - arm64: apple: t60xx: Enable DP/HMI audio nodes on all devices
    - arm64: apple: t60x0/t60x1: Enable sio explicitly
    - arm64: apple: t8103-j274: Enable sio explicitly
    - arm64: apple: t8112-j473: Enable sio explicitly
    - fixup! arm64: dts: apple: t8112: Add PMU NVMEM and SMC RTC/reboot nodes
    - arm64: dts: apple: add common hwmon keys and fans
    - arm64: dts: apple: t8103: Add SMC hwmon sensors
    - arm64: dts: apple: t8112: Add SMC hwmon sensors
    - arm64: dts: apple: t600x-j3xx: Add SMC hwmon sensors
    - arm64: dts: apple: t602x-j4xx: Add SMC hwmon sensors
    - arm64: dts: apple: j474s: correct case of Mac mini
    - fixup! arm64: dts: apple: t8103: Add touchbar bindings
    - fixup! arm64: dts: apple: t8103: Add touchbar bindings
    - DO NOT MERGE: arm64: dts: apple: t8103: Add cs-gpios to touchbar node
    - fixup! arm64: dts: Add t600x GPU nodes
    - arm64: dts: apple: Add AOP and subdevices
    - arm64: dts: apple: Add SEP device tree nodes
    - arm64: dts: apple: Add AOP audio identifiers
    - fixup! arm64: dts: apple: Add AOP and subdevices
    - fixup! arm64: dts: apple: Add SEP device tree nodes
    - MAINTAINERS: Add Apple dwc3 bindings to ARM/APPLE
    - MAINTAINERS: Add apple-spi driver & binding files
    - soc: apple: rtkit: Check for failure to send mgmt messages & log
    - soc: apple: rtkit: Log failure to send messages
    - soc: apple: rtkit: Log failed buffer requests
    - soc: apple: rtkit: Add APPLE_RTKIT_PWR_STATE_INIT
    - soc: apple: rtkit: Implement OSLog buffers properly
    - soc: apple: Add driver for Apple PMGR misc controls
    - cpuidle: apple: Add Apple SoC cpuidle driver
    - soc: apple: rtkit: Add devm_apple_rtkit_free()
    - dt-bindings: power: apple,pmgr-pwrstate: Add force-{disable,reset}
    - soc: apple: pmgr: Add force-disable/force-reset
    - soc: apple: pmgr: Add externally-clocked property
    - soc: apple: rtkit: Use high prio work queue
    - cpuidle: apple: Do not load on unsupported Apple platforms
    - soc: apple: rtkit: Cut syslog messages after the first '\0'
    - iommu: Add IOMMU_RESV_TRANSLATED for non 1:1 mapped reserved regions
    - iommu: Parse translated reserved regions
    - iommu/dart: Track if the DART is locked
    - iommu/dart: Allow locked DARTs to probe
    - iommu: apple-dart: Don't attempt to reset/restore locked DARTs
    - iommu/dart: Set DMA domain for locked DARTs
    - iommu/dart: Reject identity domain for locked DARTs
    - iommu/dart: Assert !locked when reconfiguring
    - iommu: apple-dart: Install IOMMU_RESV_TRANSLATED mappings
    - iommu: apple-dart: Link to consumers with blanket RPM_ACTIVE
    - iommu: apple-dart: Enable runtime PM
    - iommu: io-pgtable: Add 4-level page table support
    - iommu: apple-dart: Clear stream error indicator bits for T8110 DARTs
    - iommu: apple-dart: Make the hw register fields u32s
    - iommu: apple-dart: Add 4-level page table support
    - iommu: apple-dart: Support specifying the DMA aperture in the DT
    - iommu: apple-dart: Increase MAX_DARTS_PER_DEVICE to 3
    - iommu: apple-dart: Allow mismatched bypass support
    - iommu: apple-dart: Power on device when handling IRQs
    - iommu: apple-dart: Check for fwspec in the device probe path
    - iommu/of: Free fwspec on probe deferrel
    - drivers/perf: apple_m1: Refactor event select/filter configuration
    - drivers/perf: apple_m1: Support host/guest event filtering
    - drivers/perf: apple_m1: Map generic branch events
    - drivers/perf: apple_m1: Provide helper for mapping PMUv3 events
    - KVM: arm64: Compute PMCEID from arm_pmu's event bitmaps
    - KVM: arm64: Always support SW_INCR PMU event
    - KVM: arm64: Remap PMUv3 events onto hardware
    - KVM: arm64: Use a cpucap to determine if system supports FEAT_PMUv3
    - KVM: arm64: Drop kvm_arm_pmu_available static key
    - KVM: arm64: Use guard() to cleanup usage of arm_pmus_lock
    - KVM: arm64: Move PMUVer filtering into KVM code
    - KVM: arm64: Compute synthetic sysreg ESR for Apple PMUv3 traps
    - KVM: arm64: Advertise PMUv3 if IMPDEF traps are present
    - KVM: arm64: Advertise 0 event counters for IMPDEF PMU
    - arm64: Enable IMP DEF PMUv3 traps on Apple M2
    - arm64: Enable IMP DEF PMUv3 traps on Apple M1
    - drivers/perf: apple_m1: Map a few more PMUv3 events
    - KVM: arm64: Provide 1 event counter on IMPDEF hardware
    - KVM: arm64: selftests: Add test for probing PMUv3 sysregs
    - tty: serial: samsung_tty: Support runtime PM
    - of: Demote "Bad cell count" to debug message
    - mmc: sdhci-pci: Support external CD GPIO on all OF systems
    - mmc: sdhci-pci: Support setting CD debounce delay
    - PCI: apple: Add depends on PAGE_SIZE_16KB
    - firmware_loader: Add /lib/firmware/vendor path
    - i2c: pasemi: Improve timeout handling and error recovery
    - usb: typec: tipd: Be more verbose about errors
    - Add 'asahi' localversion to 05-asahi.localversion
    - i2c: pasemi: Enable the unjam machine
    - i2c: pasemi: Log bus reset causes
    - driver core: fw_devlink: Add fw_devlink_count_absent_consumers()
    - PM: domains: Add a flag to defer power-off until all consumers probe
    - soc: apple: apple-pmgr-pwrstate: Mark on-at-boot PDs as DEFER_OFF
    - tty: serial: samsung_tty: Mark as wakeup_path on no_console_suspend
    - soc: apple: apple-pmgr-pwrstate: Mark on-at-boot PDs as wakeup
    - HACK: Lol libwebrtc
    - iommu: Only allocate FQ domains for IOMMUs that support them
    - drm/simpledrm: Set DMA and coherency mask
    - x86/insn_decoder_test: allow longer symbol-names
    - arm64: Increase kernel stack size to 32K
    - fixup! tty: serial: samsung_tty: Support runtime PM
    - Increase MAX_LOCKDEP_CHAIN_HLOCKS
    - Revert "arm64: defconfig: Enable LPA2 support"
    - Partial revert "arm64: Enable 52-bit virtual addressing for 4k and 16k
      granule configs"
    - dt-bindings: usb: Add Apple dwc3 bindings
    - usb: dwc3: Add support for Apple DWC3
    - usb: dwc3: apple: Do not use host-vbus-glitches workaround
    - usb: dwc3: core: Allow phy suspend during init for role_switch_reset_quirk
    - apple-nvme: defer cache flushes by a specified amount
    - apple-nvme: Release power domains when probe fails
    - apple-nvme: Support coprocessors left idle
    - spi: dt-bindings: apple,spi: Add binding for Apple SPI controllers
    - spi: apple: Add driver for Apple SPI controller
    - spi: apple: Set use_gpio_descriptors to true
    - ASoC: dt-bindings: Add CS42L84 codec
    - ASoC: cs42l84: Add new codec driver
    - ASoC: cs42l84: leverage ring sense IRQs to correctly detect headsets
    - ASoC: cs42l84: remove incorrect of_match_ptr()
    - ASoC: cs42l84: Remove unused including <linux/version.h>
    - Revert "ASoC: ops: Don't modify the driver's plaform_max when reading state"
    - ASoC: tas2764: Extend driver to SN012776
    - ASoC: tas2764: Add control concerning overcurrent events
    - ASoC: ops: Move guts out of snd_soc_limit_volume
    - ASoC: ops: Enforce platform maximum on initial value
    - ASoC: ops: Accept patterns in snd_soc_limit_volume
    - ASoC: ops: Introduce 'snd_soc_deactivate_kctl'
    - ASoC: ops: Introduce 'soc_set_enum_kctl'
    - ASoC: card: Let 'fixup_controls' return errors
    - dt-bindings: sound: Add Apple Macs sound peripherals
    - ASoC: apple: Add macaudio machine driver
    - ASoC: cs42l42: Fix typo
    - ASoC: cs42l42: Do not advertise sample bit symmetry
    - ASoC: macaudio: Fix headset routes
    - ASoC: dapm: Export new 'graph.dot' file in debugfs
    - ASoC: macaudio: Add j375 fixup_controls
    - ASoC: macaudio: Add j493 fixup_controls
    - ASoC: macaudio: Rename ALSA driver to simple 'macaudio'
    - ASoC: macaudio: Drop the 'inverse jack' speaker stuff
    - ASoC: macaudio: s/Freq/Frequency/ in TAS2764 control
    - ASoC: macaudio: s/void_warranty/please_blow_up_my_speakers/
    - ASoC: macaudio: Gate off experimental platforms
    - ASoC: macaudio: Alias f413 fixups to j314
    - ASoC: apple: mca: Constrain channels according to TDM mask
    - ASoC: macaudio: Improve message on opening of unrouted PCM devices
    - ASoC: macaudio: Add initial j313 fixup_controls
    - ASoC: macaudio: constrain frontend channel counts
    - ASoC: cs42l42: Set a faster digital ramp-up rate
    - ASoC: apple: mca: Move clock shutdown to be shutdown
    - ASoC: macaudio: alias j415 kcontrols to j314
    - ALSA: control: Add kcontrol callbacks for lock/unlock
    - ASoC: macaudio: Condition selecting NCO driver on COMMON_CLK
    - ASoC: macaudio: Tune DT parsing error messages
    - ASoC: apple: mca: Separate data & clock port setup
    - ASoC: apple: mca: Factor out mca_be_get_fe
    - ASoC: apple: mca: Support FEs being clock consumers
    - ASoC: apple: mca: Fix SYNCGEN enable on FE clock consumers
    - ASoC: macaudio: Start speaker sense capture support
    - ASoC: macaudio: Tweak "no audio route" message
    - ASoC: macaudio: Do not constrain sense PCM
    - ASoC: tas2770: Factor out set_ivsense_slots
    - ASoC: tas2770: Fix and redo I/V sense TDM slot setting logic
    - ASoC: tas2764: Reinit cache on part reset
    - NOT UPSTREAMABLE: ASoC: tas2764: Redo I/V sense logic
    - ASoC: macaudio: Tune constraining of FEs, add BCLK
    - ASoC: apple: mca: Support capture on multiples BEs
    - ASoC: tas2764: Configure zeroing of SDOUT slots
    - WIP: ASoC: tas2764: Apply unknown Apple quirk
    - ASoC: tas2764: Raise regmap range maximum
    - ASoC: tas2770: Export 'die_temp' to sysfs
    - ASoC: tas2764: Export 'die_temp' to sysfs
    - ASoC: tas2764: Crop SDOUT zero-out mask based on BCLK ratio
    - ASoC: macaudio: Remove stale 'speaker_nchans' fields
    - ASoC: macaudio: Add 'Speakers Up Indicator' control
    - ASoC: tas2764: Add optional 'Apple quirks'
    - ASoC: macaudio: Do not disable ISENSE/VSENSE switches on j314
    - ASoC: macaudio: Fix PD link double-frees?
    - ASoC: macaudio: Sense improvements
    - ASoC: ops: Export snd_soc_control_matches()
    - macaudio: speaker volume safety interlocks
    - alsa: pcm: Remove the qos request only if active
    - macaudio: Add a getter for the interlock
    - ASoC: apple: mca: Do not mark clocks in use for non-providers
    - macaudio: Allow DT enabled speakers and gate them off in the driver
    - macaudio: Enable VSENSE switches
    - macaudio: Initialize speaker lock properly
    - macaudio: Use the same volume limit for all amps
    - macaudio: Disable debug
    - ASoC: tas2764: Enable main IRQs
    - ASoC: tas2764: Power up/down amp on mute ops
    - ASoC: tas2764: Add SDZ regulator
    - macaudio: Use an explicit mutex for the speaker volume lock
    - ASoC: tas2764: Add reg defaults for TAS2764_INT_CLK_CFG
    - ASoC: tas2764: Mark SW_RESET as volatile
    - ASoC: tas2764: Fix power control mask
    - ASoC: apple: mca: Increase reset timeout
    - ALSA: dmaengine: Always terminate DMA when a PCM is closed
    - ASoC: tas2764: Wait for ramp-down after shutdown
    - ASoC: tas2764: Enable some Apple quirks by default
    - macaudio: Rework platform config & add all remaining platforms
    - ASoC: tas2770: Add SDZ regulator
    - ASoC: tas2770: Power cycle amp on ISENSE/VSENSE change
    - ASoC: tas2770: Add zero-fill and pull-down controls
    - ASoC: tas2770: Support setting the PDM TX slot
    - ASoC: tas2770: Fix volume scale
    - macaudio: Remove -3dB safety pad from j313
    - macaudio: Skip speaker sense PCM if no sense or no speakers
    - macaudio: Officially enable j313 speakers
    - ASoC: tas2764: Set the SDOUT polarity correctly
    - ASoC: tas2770: Set the SDOUT polarity correctly
    - macaudio: Set the card name explicitly
    - macaudio: Change device ID form Jxxx to AppleJxxx
    - macaudio: Turn please_blow_up_my_speakers into an int
    - macaudio: Sync all gains with macOS
    - macaudio: Fix CHECK return condition checking
    - macaudio: Avoid matches against cs42l84's constrols
    - ASoC: apple: mca: Add delay after configuring clock
    - macaudio: Disable j313 and j274
    - ASoC: apple: mca: Add more delay after configuring clock
    - ASoC: apple: mca: More delay
    - macaudio: Fix missing kconfig requirement
    - fixup! dmaengine: apple-admac: Add Apple ADMAC driver
    - HACK: ALSA: Export 'snd_pcm_known_rates'
    - ALSA: Support nonatomic dmaengine PCMs
    - READ COMMIT MESSAGE! macaudio: Enable first round of models
    - READ COMMIT MESSAGE! macaudio: Enable second round of models
    - dmaengine: apple-admac: Avoid accessing registers in probe
    - DO NOT MERGE: dmaengine: apple-admac: Add temporary aop-admac compatible
    - soc: apple: rtkit: Add apple_rtkit_has_endpoint()
    - soc: apple: rtkit: Add tracekit endpoint.
    - fixup! ASoC: apple: Add macaudio machine driver
    - wifi: brcmfmac: Add missing shared area defines to pcie.c
    - wifi: brcmfmac: Handle PCIe MSI properly
    - wifi: brcmfmac: Fix logic for deciding which doorbell registers to use
    - wifi: brcmfmac: Support v6+ flags and set host_cap properly
    - wifi: brcmfmac: Add newer msgbuf packet types up to 0x2e
    - wifi: brcmfmac: Add a new bus op for D2H mailbox message handling
    - wifi: brcmfmac: Implement the H2D/D2H mailbox data commonring messages
    - wifi: brcmfmac: Support exchanging power mailbox messages via commonring
    - wifi: brcmfmac: Shut up p2p unknown frame error
    - wifi: brcmfmac: Do not service msgbuf IRQs until ready in MSI mode
    - wifi: brcmfmac: Add support for SYSMEM corerev >= 12 & fix < 12
    - wifi: brcmfmac: Add support for firmware signatures
    - wifi: brcmfmac: msgbuf: Increase RX ring sizes to 2048
    - wifi: brcmfmac: Increase bandlist size
    - wifi: brcmfmac: chip: ca7: Only disable D11 cores; handle an arbitrary
      number
    - wifi: brcmfmac: Handle watchdog properly in newer cores
    - wifi: brcmfmac: pcie: Access pcie core registers via dedicated window
    - wifi: brcmfmac: pcie: Initialize IRQs before firmware boot
    - wifi: brcmfmac: Do not set reset vector when signatures are in use
    - wifi: brcmfmac: Mask all IRQs before starting firmware
    - wifi: brcmfmac: Add support for SCAN_V3
    - wifi: brcmfmac: Implement event_msgs_ext
    - wifi: brcmfmac: Support bss_info up to v112
    - wifi: brcmfmac: Extend brcmf_wsec_pmk_le
    - wifi: brcmfmac: Add BCM4388 support
    - brcmfmac: Fix AP mode
    - Finish firmware mem map, fix heap start calculation bug.
    - Add support for encoding/decoding 6g chanspecs
    - Dynamically configure VHT settings to match firmware
    - Compute number of available antennas and set it in wiphy structure.
    - Support GCMP cipher suite, used by WPA3.
    - Don't issue wrong insufficient headroom warning
    - Support high power/low power/etc scan flags
    - Add support for 6G bands and HE
    - Fix regulatory domain handling to reset bands properly
    - fixup! fix FWIL definition to use SSID length constant
    - fixup! define missing event message extension
    - Structurize PNF scan and add support for latest version
    - Structurize scan parameter handling
    - Support new join parameter structure versions
    - Let feature attachment fail, and fail if we can't handle the interface
      versions we find.
    - Add support for more auth suites in roaming offload
    - Set chanspec during join.
    - Add support for more rate info in station dumps
    - Support bandwidth caps for all bands
    - Clean up and common interface creation handling
    - Disable partial SAE offload
    - fixup! wifi: brcmfmac: Add support for firmware signatures
    - HID: add device IDs for Apple SPI HID devices
    - HID: apple: add support for internal keyboards
    - HID: apple: add Fn key mapping for Apple silicon MacBooks
    - HID: apple: add Fn key mapping for Macbook Pro with touchbar
    - HID: magicmouse: use a define of the max number of touch contacts
    - HID: magicmouse: use struct input_mt_pos for X/Y
    - HID: magicmouse: use ops function pointers for input functionality
    - HID: magicmouse: add support for Macbook trackpads
    - WIP: HID: transport: spi: add Apple SPI transport
    - HID: add HOST vendor/device IDs for Apple MTP devices
    - HID: core: Handle HOST bus type when announcing devices
    - hid: apple: Bind to HOST devices for MTP
    - hid: magicmouse: Add MTP multi-touch device support
    - soc: apple: Add DockChannel driver
    - hid: Add Apple DockChannel HID transport driver
    - soc: apple: Add RTKit helper driver
    - HID: transport: spi: Check status message after transmits
    - HID: magicmouse: Add .reset_resume for SPI trackpads
    - HID: transport: spi: Add suspend support
    - HID: Bump maximum report size to 16384
    - HID: magicmouse: Handle touch controller resets on SPI devices
    - HID: transport: spi: Implement GET FEATURE
    - HID: magicmouse: Query device dimensions via HID report
    - HID: transport: spi: apple: Increase receive buffer size
    - lib/vsprintf: Add support for generic FOURCCs by extending %p4cc
    - platform/apple: Add new Apple Mac SMC driver
    - gpio: Add new gpio-macsmc driver for Apple Macs
    - power: supply: macsmc_power: Driver for Apple SMC power/battery stats
    - power: supply: macsmc_power: Add cycle count and health props
    - power: supply: macsmc_power: Add present prop
    - power: supply: macsmc_power: Add more props, rework others
    - power: supply: macsmc_power: Use BUIC instead of BRSC for charge
    - power: supply: macsmc_power: Turn off OBC flags if macOS left them on
    - power: supply: macsmc_power: Add AC power supply
    - power: reset: macsmc-reboot: Add driver for rebooting via Apple SMC
    - rtc: Add new rtc-macsmc driver for Apple Silicon Macs
    - Input: macsmc-hid: New driver to handle the Apple Mac SMC buttons/lid
    - Input: macsmc-hid: Support button/lid wakeups
    - gpio: macsmc: Add IRQ support
    - Input: macsmc-hid: Support the power button on desktops
    - power: supply: macsmc_power: Add critical level shutdown & misc events
    - platform/apple: smc: Add apple_smc_read_f32_scaled
    - power: supply: macsmc_power: Add a debug mode to print power usage
    - macsmc: Fix race between backend and core on notifications
    - power: supply: macsmc_power: Log power data on button presses
    - power: supply: macsmc_power: Add CHWA charge thresholds
    - power: supply: macsmc_power: Report available charge_behaviours
    - power: supply: macsmc_power: Add more properties
    - platform/apple: smc: Add apple_smc_read_ioft_scaled
    - hwmon: add macsmc-hwmon driver
    - hwmon: macsmc: Avoid global writable hwmon_chip_info
    - power: supply: macsmc_power: Add CHLS charge thresholds
    - power: supply: macsmc_power: Remove CSIL
    - power: supply: macsmc_power: Report not charging for CHLS thresholds
    - platform/apple: smc: Add apple_smc_write_f32_scaled
    - hwmon: macsmc: wire up manual fan control support
    - fixup! platform/apple: Add new Apple Mac SMC driver
    - spmi: add a first basic spmi driver for Apple SoC
    - mfd: Add a simple-mfd-spmi driver
    - nvmem: Add spmi-mfd-nvmem driver
    - nvmem: spmi-mfd-nvmem: use legacy fixed layout
    - cpufreq: apple-soc: Drop setting the PS2 field on M2+
    - dt-bindings: pci: apple,pcie: Add subnode binding, pwren-gpios property
    - PCI: apple: Use gpiod_set_value_cansleep in probe flow
    - PCI: apple: Probe all GPIOs for availability first
    - PCI: apple: Add support for optional PWREN GPIO
    - PCI: apple: Fix missing OF node reference in apple_pcie_setup_port
    - PCI: apple: Set only available ports up
    - PCI: apple: Move port PHY registers to their own reg items
    - PCI: apple: Drop poll for CORE_RC_PHYIF_STAT_REFCLK
    - PCIE: apple: Add T602x PCIe support
    - PCI: apple: Skip controller port setup for online links
    - PCI: apple: Make link up timeout configurable, default to 500ms
    - PCI: apple: Reorder & improve link-up logic
    - PCI: apple: Log the time it takes for links to come up
    - PCI: apple: Do not power down devices on port setup
    - fixup! PCI: apple: Move port PHY registers to their own reg items
    - fixup! PCI: apple: Probe all GPIOs for availability first
    - PCI: apple: Avoid PERST# deassertion through gpiod initialization
    - squash! PCI: apple: Avoid PERST# deassertion through gpiod initialization
    - xhci-pci: asmedia: Add a firmware loader for ASM2214a chips
    - Revert "nvmem: core: Print error on wrong bits DT property"
    - nvmem: allow bit offset > 8
    - nvmem: round up to word_size
    - WIP: phy: apple: Add Apple Type-C PHY
    - usb: typec: tipd: Clear interrupts first
    - phy: apple: Add DP TX phy driver
    - phy: apple: atc: Split atcphy_dp_configure_lane()
    - phy: apple: atc: Reorder ACIOPHY_CROSSBAR and ACIOPHY_MISC ops
    - phy: apple: atc: Support DisplayPort only operation
    - phy: apple: atc: Support 'set_lanes' in DP mode
    - HACK: phy: apple: atc: Ignore fake submodes
    - phy: apple: atc: support mode switches in atcphy_dpphy_set_mode()
    - phy: apple: dptx: Add debug prints for unexpected values
    - fixup! phy: apple: atc: support mode switches in atcphy_dpphy_set_mode()
    - fixup! WIP: phy: apple: Add Apple Type-C PHY
    - fixup! WIP: phy: apple: Add Apple Type-C PHY
    - phy: apple: atc: Add missing mutex_unlock in error case
    - dt-bindings: dma: apple,sio: Add schema
    - dmaengine: apple-sio: Add Apple SIO driver
    - dmaengine: apple-sio: Fix chan freeing in error path
    - dmaengine: apple-sio: Implement runtime PM
    - fixup! dmaengine: apple-sio: Add Apple SIO driver
    - docs: rust: quick-start: add Ubuntu
    - rust: types: add examples for the `Either` type
    - rust: workqueue: remove unneeded ``#[allow(clippy::new_ret_no_self)]`
    - rust: sort global Rust flags
    - rust: types: avoid repetition in `{As,From}Bytes` impls
    - rust: enable `clippy::undocumented_unsafe_blocks` lint
    - rust: enable `clippy::unnecessary_safety_comment` lint
    - rust: enable `clippy::unnecessary_safety_doc` lint
    - rust: enable `clippy::ignored_unit_patterns` lint
    - rust: enable `rustdoc::unescaped_backticks` lint
    - rust: init: remove unneeded `#[allow(clippy::disallowed_names)]`
    - rust: sync: remove unneeded `#[allow(clippy::non_send_fields_in_send_ty)]`
    - rust: introduce `.clippy.toml`
    - rust: replace `clippy::dbg_macro` with `disallowed_macros`
    - rust: provide proper code documentation titles
    - rust: enable Clippy's `check-private-items`
    - Documentation: rust: add coding guidelines on lints
    - rust: start using the `#[expect(...)]` attribute
    - Documentation: rust: discuss `#[expect(...)]` in the guidelines
    - rust: std_vendor: simplify `{ .. macro! .. }` with inner attributes
    - rust: error: make conversion functions public
    - rust: std_vendor: update dbg macro from Rust upstream
    - rust: lock: add trylock method support for lock backend
    - rust: error: optimize error type to use nonzero
    - rust: kernel: move `FromBytes` and `AsBytes` traits to a new `transmute`
      module
    - rust: alloc: add `Allocator` trait
    - rust: alloc: separate `aligned_size` from `krealloc_aligned`
    - rust: alloc: rename `KernelAllocator` to `Kmalloc`
    - rust: alloc: implement `ReallocFunc`
    - rust: alloc: make `allocator` module public
    - rust: alloc: implement `Allocator` for `Kmalloc`
    - rust: alloc: add module `allocator_test`
    - rust: alloc: implement `Vmalloc` allocator
    - rust: alloc: implement `KVmalloc` allocator
    - rust: alloc: add __GFP_NOWARN to `Flags`
    - rust: alloc: implement kernel `Box`
    - rust: treewide: switch to our kernel `Box` type
    - rust: alloc: remove extension of std's `Box`
    - rust: alloc: add `Box` to prelude
    - rust: alloc: introduce `ArrayLayout`
    - rust: alloc: implement kernel `Vec` type
    - rust: alloc: implement `IntoIterator` for `Vec`
    - rust: alloc: implement `collect` for `IntoIter`
    - rust: treewide: switch to the kernel `Vec` type
    - rust: alloc: remove `VecExt` extension
    - rust: alloc: add `Vec` to prelude
    - rust: error: use `core::alloc::LayoutError`
    - rust: error: check for config `test` in `Error::name`
    - rust: alloc: implement `contains` for `Flags`
    - rust: alloc: implement `Cmalloc` in module allocator_test
    - rust: str: test: replace `alloc::format`
    - rust: alloc: update module comment of alloc.rs
    - kbuild: rust: remove the `alloc` crate and `GlobalAlloc`
    - MAINTAINERS: add entry for the Rust `alloc` module
    - rust: alloc: Fix `ArrayLayout` allocations
    - drm/panic: avoid reimplementing Iterator::find
    - drm/panic: remove unnecessary borrow in alignment_pattern
    - drm/panic: prefer eliding lifetimes
    - drm/panic: remove redundant field when assigning value
    - drm/panic: correctly indent continuation of line in list item
    - drm/panic: allow verbose boolean for clarity
    - drm/panic: allow verbose version check
    - rust: exports: improve grammar in commentary
    - rust: helpers: remove unnecessary header includes
    - rust: page: add Rust version of PAGE_ALIGN
    - rust: init: introduce `Opaque::try_ffi_init`
    - rust: introduce `InPlaceModule`
    - rust: pass module name to `Module::init`
    - rust: implement generic driver registration
    - rust: implement `IdArray`, `IdTable` and `RawDeviceId`
    - rust: add rcu abstraction
    - rust: add `Revocable` type
    - rust: add `dev_*` print macros.
    - rust: add `io::Io` base type
    - rust: add devres abstraction
    - rust: pci: add basic PCI device / driver abstractions
    - rust: pci: implement I/O mappable `pci::Bar`
    - samples: rust: add Rust PCI sample driver
    - rust: of: add `of::DeviceId` abstraction
    - rust: platform: add basic platform device / driver abstractions
    - samples: rust: add Rust platform sample driver
    - rust: drm: ioctl: Add DRM ioctl abstraction
    - rust: Add a Sealed trait
    - rust: drm: add driver abstractions
    - rust: drm: add device abstraction
    - rust: drm: add DRM driver registration
    - rust: drm: file: Add File abstraction
    - rust: drm: gem: Add GEM object abstraction
    - rust: pci: device: s/from_raw/get_device/
    - rust: platform: device: s/from_raw/get_device/
    - rust: allocator: Disable clippy::undocumented_unsafe_blocks lint
    - rust: alloc: kbox: Add CoerceUnsized trait
    - rust: alloc: Vec: Implement .clear()/.truncate()
    - rust: alloc: vec: Add TryFrom trait
    - rust: alloc: vec: Import .drain() / Drain from rust library
    - rust: str: allow dereferencing BStr in a const ctx
    - rust: Enable type_alias_impl_trait
    - rust: kernel: lock: Add Lock::pin_init()
    - rust: init: Implement Zeroable::zeroed()
    - rust: init: Support type paths in pin_init!() and friends
    - rust: types: Add Opaque::zeroed()
    - rust: Use absolute paths to build Rust objects
    - rust: kernel: Add simple siphash abstraction
    - rust: sync: Add dummy LockClassKey implementation for !CONFIG_LOCKDEP
    - rust: sync: Replace static LockClassKey refs with a pointer wrapper
    - fixup! rust: sync: Replace static LockClassKey refs with a pointer wrapper
    - rust: sync: Implement dynamic lockdep class creation
    - fixup! rust: sync: Implement dynamic lockdep class creation
    - rust: sync: Classless Lock::new() and pin_init()
    - fixup! rust: sync: Classless Lock::new() and pin_init()
    - rust: init: Update documentation for new mutex init style
    - rust: sync: Add LockdepMap abstraction
    - WIP: rust: kernel: sync: lockdep.rs Box/Vec fixes
    - rust: sync: arc: Add lockdep integration
    - rust: time: New module for timekeeping functions
    - rust: xarray: Add an abstraction for XArray
    - rust: io_pgtable: Add io_pgtable abstraction
    - rust: soc: apple: rtkit: Add Apple RTKit abstraction
    - fixup! rust: soc: apple: rtkit: Add Apple RTKit abstraction
    - fixup! rust: soc: apple: rtkit: Add Apple RTKit abstraction
    - *RFL import: kernel::types::Bool
    - *RFL import: kernel::io_buffer
    - fixup! *RFL import: kernel::io_buffer
    - rust: io_buffer: Disable clippy::undocumented_unsafe_blocks lint
    - *RFL import: kernel::user_ptr
    - fixup! *RFL import: kernel::user_ptr
    - rust: user_ptr: Disable clippy::undocumented_unsafe_blocks lint
    - MISSING SIGNOFFS: rust: Add PAGE_SIZE constant to kernel crate
    - *RFL import: kernel::module_param
    - fixup! *RFL import: kernel::module_param
    - rust: module_param: Tolerate a trailing newline when parsing
    - rust: module_param: Disable clippy::undocumented_unsafe_blocks lint
    - *RFL import: kernel::delay
    - rust: of: Add OF node abstraction
    - fixup! rust: of: Add OF node abstraction
    - rust: Fix x86 build
    - rust: of: Add parse_phandle_by_name()
    - HACK: rust: of: add as_raw()
    - *RFL import: kernel::io_mem
    - rust: platform: add `ioremap_resource` and `get_resource` methods
    - fixup! rust: platform: add `ioremap_resource` and `get_resource` methods
    - rust: kernel: platform: Add Device.set_dma_masks()
    - fixup! rust: kernel: platform: Add Device.set_dma_masks()
    - rust: Add ioremap_np support to io_mem & friends
    - rust: platform: Add platform::Device::get_device()
    - *RFL import: macros::module params functionality & deps
    - Revert "rust: remove `params` from `module` macro example"
    - rust: macros: module: Functionally revert commit 7044dcff8301
    - rust: block: rnull: Adapt to asahi's rust base branch
    - *RFL import: Rest of kernel::error::code::*
    - rust: bindings: Add resource_size wrapper
    - rust: Allow feature allocator_api
    - rust: Add missing impl_trait_in_assoc_type feature
    - rust: bindgen: Exclude list functions with unsupported ABIs
    - *RFL import: kernel::KParamGuard & friends
    - rust: init: Add default() utility function
    - rust: init: Disable clippy::undocumented_unsafe_blocks lint
    - rust: init: macros: Disable clippy::undocumented_unsafe_blocks lint
    - rust: print: Disable clippy::undocumented_unsafe_blocks lint
    - kernel: str: Add/fix SAFETY comments
    - rust: kernel: workqueue: Disable clippy::undocumented_unsafe_blocks lint
    - rust: Enable clippy::undocumented_unsafe_blocks lint
    - rust: Add time_namespace helpers
    - rust: add unstable feature associated_type_defaults
    - rust: alloc: kbox: Add AsRef implementation to Box
    - rust: alloc: Add .resize() to Vec
    - rust: device: Add Device::parent()
    - rust: Only export module id tables if building as module
    - rust: Add helper for memcpy_toio
    - rust: add dma pool and coherent allocator
    - rust: helpers: Add dma_mapping_error() helper
    - WIP: drm/apple: Add DCP display driver
    - drm: apple: Relicense DCP driver as dual MIT / GPL v2.0
    - drm/apple: Start coprocessor on probe
    - HACK: drm/apple: avoid DCP swaps without attached surfaces
    - drm/apple: Use a device tree defined clock for dcpep_cb_get_frequency
    - drm/apple: Fix rt_bandwidth for t600x
    - drm/apple: Add nop sr_set_uint_prop callback for t600x-dcp
    - drm/apple: Reference only swapped out framebuffers
    - drm/apple: Use "apple,asc-dram-mask" for rtkit iovas
    - drm/apple: Implement suspend/resume for DCP
    - drm/apple: dcp: fix TRAMPOLINE_IN macro
    - drm/apple: Switch to nonblocking commit handling
    - drm/apple: Log callbacks with their tag as debug output
    - drm/apple: Add DCP interface definitions used on t600x
    - drm/apple: Clear used callback/cookie on dcp_ack
    - drm/apple: Add t600x support
    - drm/apple: toggle power only when active state changes
    - drm/apple: Add somewhat useful debug prints
    - drm/apple: Add less tons of questionable debug prints
    - drm/apple: implement read_edt_data
    - drm/apple: clear callback's output data
    - drm/apple: Support memory unmapping/freeing
    - WIP: drm/apple: Change the way to clear unused surfaces
    - drm/apple: laod piodma dev via explicit phandle
    - drm/apple: Fix kzalloc in dcp_flush()
    - drm/apple: Allow modesets even when disconnected
    - drm/apple: Mark the connecter on init only with modes as connected
    - drm/apple: make note about drm.mode_config.max_width/height
    - drm/apple: Split dcpep/iomfb out of dcp.c
    - WIP: add header test target copied from i915
    - gpu: drm: apple: Use connector types from devicetree
    - drm: apple: Fix connector state on devices with integrated display
    - drm: apple: Replace atomic refcount with kref
    - gpu: drm: apple: Start using tracepoints
    - gpu: drm: apple: Unbreak multiple DCP plane <-> crtc matching
    - gpu: drm: apple: Add support for DRM_FORMAT_XRGB2101010
    - gpu: drm: apple: Add apple_drm_gem_dumb_create()
    - gpu: drm: apple: Reject modes without valid color mode
    - gpu: drm: apple: Convert 2 non-assert WARN()s to dev_err()
    - gpu: drm: apple: Send an disconnected hotplug event on ASC crash
    - gpu: drm: apple: Add dcp_crtc_atomic_check
    - gpu: drm: apple: Fix DCP run time PM
    - gpu: drm: apple: Fix DCP initialisation
    - gpu: drm: apple: Specify correct number of DCP*s for drm_vblank_init
    - gpu: drm: apple: Remove other framebuffers before DRM setup
    - gpu: drm: apple: Support opaque pixel formats
    - gpu: drm: apple: Provide notch-less modes
    - gpu: drm: apple: Fix shutdown of partially probed dcp
    - gpu: drm: apple: Set maximal framebuffer size correctly
    - gpu: drm: apple: Prevent NULL pointer in dcp_hotplug
    - gpu: drm: apple: Update date last update
    - gpu: drm: apple: iomfb: Use FIELD_{GET,PREP}
    - gpu: drm: apple: iomfb: Unify call and callback channels
    - gpu: drm: apple: "match" PMU/backlight services on init
    - gpu: drm: apple: Brightness control via atomic commits
    - HACK: gpu: drm: apple: j314/j316: Ignore 120 Hz mode for integrated display
    - drm/apple: Fix suspend/resume handling
    - gpu: drm: apple: Avoid drm_fb_dma_get_gem_addr
    - drm/apple: register backlight device after IOMFB start
    - drm/apple: Add trace point for display brightness
    - drm/apple: Implement drm_crtc_helper_funcs.mode_fixup
    - drm/apple: Read display dimensions from devicetree
    - drm/apple: Wait for power on request to complete synchronously
    - drm/apple: Remove obsolete ignore_swap_complete
    - drm/asahi: Fix backlight restores on non-microLED devices
    - drm/apple: Schedule backlight update on enable_backlight_message_ap_gated
    - drm/apple: Report "PMUS.Temperature" only for mini-LED backlights
    - drm/apple: Check if DCP firmware is supported
    - drm/apple: Disable fake vblank IRQ machinery
    - gpu: drm: apple: Parse color modes completely
    - gpu: drm: apple: Skip parsing elements of virtual timing modes
    - gpu: drm: apple: Add tracing for color and timing modes
    - gpu: drm: apple: Prefer SDR color modes
    - gpu: drm: apple: Add IOMobileFramebufferAP::get_color_remap_mode
    - gpu: drm: apple: reenable support for {A,X}RGB2101010
    - gpu: drm: apple: Add show_notch module parameter
    - Revert "gpu: drm: apple: reenable support for {A,X}RGB2101010"
    - drm/apple: Enable 10-bit mode & set colorspace to native
    - gpu: drm: apple: Clear all surfaces on startup
    - drm/apple: Update swap handling
    - gpu: drm: apple: Use drm_aperture_remove_conflicting_framebuffers
    - drm/apple: Use drm_module_platform_driver
    - drm/apple: Allocate drm objects according to drm's expectations
    - gpu: drm: apple: Use components to avoid deferred probing
    - gpu: drm: apple: Wait for iomfb initialization
    - drm/apple: simplify IOMFB_THUNK_INOUT
    - drm/apple: Fix parse_string() memory leaks
    - drm/apple: Fix bad error return
    - drm/apple: Set backlight level indirectly if no mode is set
    - drm/apple: Use backlight_get_brightness()
    - drm/apple: Move panel options to its own sub-struct
    - drm/apple: Align buffers to 16K page size
    - drm/apple: purge unused dcp_update_notify_clients_dcp
    - drm/apple: Add callbacks triggered by last_client_close_dcp()
    - drm/apple: Add support for the macOS 13.2 DCP firmware
    - drm/apple: ignore surf[3] in clear swap calls
    - drm/apple: Support color transformation matrices
    - drm/apple: Drop unsupported DRM_FORMAT_ARGB2101010
    - dcp: Allow unused trampolines
    - dcp: Add get_tiling_state
    - dcp: 42-bit DMA masks
    - dcp: T602X bwreq support
    - dcp: Warn if DMA mapping fails
    - WIP: drm/apple: Port to incompatible V13.3 firmware interface
    - drm/apple: Remove simpledrm framebuffer before DRM device alloc
    - drm/apple: Mark DCP as being in the wakeup path
    - drm: apple: iomfb: Increase modeset timeout to 2.5 seconds
    - drm: apple: Only match backlight service on DCP with panel
    - drm: apple: iomfb: limit backlight updates to integrated panels
    - drm: apple: backlight: avoid updating the brightness with a commit
    - drm/apple: Get rid of the piodma dummy driver
    - drm/apple: Use iommu domain for piodma maps
    - drm: apple: Align PIODMA buffers to SZ_16K
    - drm: apple: Add D129 allocate_bandwidth iomfb callback
    - drm: apple: Update supported firmware versions to 12.3 and 13.5
    - drm: apple: dcp: Port over to DEFINE_SIMPLE_DEV_PM_OPS
    - drm: apple: dcp: Remove cargo-culted devm_of_platform_populate
    - drm: apple: iomfb: implement abort_swaps_dcp
    - drm: apple: iomfb: Increase modeset tiemout to 8.5 seconds
    - drm: apple: Remove explicit asc-dram-mask handling
    - mux: apple DP xbar: Add Apple silicon DisplayPort crossbar
    - mux: apple dp crossbar: Support t8112 varient
    - mux: apple dp crossbar: FIFO_RD_UNK_EN seems to use 2 bits per dispext*
    - mux: apple dp crossbar: Read UNK_TUNABLE before and after writing it
    - mux: apple dp crossbar: Support t602x DP cross bar variant
    - gpu: drm: apple: Add utility functions for matching on dict keys
    - gpu: drm: apple: Add 'parse_blob'
    - gpu: drm: apple: Add sound mode parsing
    - drm: apple: DCP AFK/EPIC support
    - drm: apple: afk: Use linear array of services
    - drm: apple: Add DPTX support
    - drm: apple: Move offsets for rt_bandwidth callback to DT
    - drm: apple: iomfb: Do not match/create PMU service for dcpext
    - drm: apple: afk: Adapt to macOS 13.3 firmware
    - drm: apple: dptx: Port APCALL to macOS 13.3 firmware
    - drm: apple: dptx: port interface to macOS 13.5 firmware
    - drm: apple: dptx: Add set_active_lanes APCALL
    - drm: apple: dptx: Add DPTX_APCALL_ACTIVATE
    - drm: apple: dptx: Adapt dptxport_connect() to observed behavior
    - drm: apple: afk: Clear commands before sending them
    - drm: apple: Fix missing unlock path in dcp_dptx_connect
    - drm: apple: dptxep: Fix reply size check
    - drm: apple: dptxep: Implement drive settings stuff
    - drm/apple: Add missing sound Kconfig dependencies
    - drm: apple: HACK: Do not delete piodma platform device
    - drm: apple: afk: Update read pointer before processing message
    - drm: apple: Implement D592 callback
    - drm: apple: Keep information at which swap_id fb are still referenced
    - Revert "drm: apple: iomfb: Do not match/create PMU service for dcpext"
    - drm: apple: dptx: Implement APCALL_DEACTIVATE and reset the phy
    - drm: apple: Disconnect dptx When the CRTC is powered down
    - drm: apple: dptx: Wait for completion of dptx_connect.
    - drm: apple: HPD: Only act on connect IRQs
    - drm: apple: iomfb: Improve hotplug related logging
    - drm: apple: Extract modeset crtc's atomic_flush()
    - drm: apple: dptx: Log connect/disconnect calls
    - drm: apple: Move modeset into drm_crtc's atomic_enable
    - drm: apple: Fix DPTX hotplug handling
    - drm: apple: iomfb: Use drm_kms_helper_connector_hotplug_event
    - drm : apple: iomfb: Handle OOB ASYNC/CB context
    - drm: apple: iomfb: Extend hotplug/mode parsing logging
    - drm: apple: Adjust startup sequence and timing for dptx
    - drm: apple: dcp: Fix resume with DPTX based display outputs
    - drm: apple: Be less noisy about teardown notifies without service
    - drm: apple: dptx: Wait for link config on connect
    - drm: apple: Prefer RGB SDR modes
    - drm: apple: iomfb: Always parse DisplayAttributes
    - drm: apple: parser: constify parser data
    - drm: apple: epic: Pass full notfiy/report payload to handler
    - drm: apple: epic: systemep: Parse "mNits" log events
    - drm: apple: mark local functions static
    - drm/apple: Add missing RTKit Kconfig dependency
    - drm/apple: spelling fixes
    - drm: apple: backlight: force backlight update after resume
    - drm: apple: Fix/remove log messages
    - drm: apple: dptx: Debounce HPD by simple msleep()
    - drm: apple: Add Kconfig option for audio
    - drm: apple: iomfb: export property dicts in connector debugfs
    - gpu: drm: apple: Expose injecting of EPIC calls via debugfs
    - gpu: drm: apple: Set up client of AV endpoint
    - drm: apple: av: Support macOS 12.3 and 13.5 firmware APIs
    - drm: apple: av: Do not open AV service from afk receive handler
    - gpu: drm: apple: Add DCP audio driver
    - drm: apple: dptx: Remove DPTX disconnect/connect on init
    - drm: apple: audio: init AV endpoint later
    - drm: apple: av: Use a workqueue
    - drm: apple: audio: move the audio driver into the DCP module
    - drm: apple: audio: Make the DP/HDMI audio driver a full driver
    - drm: apple: audio: Avoid probe errors
    - drm/apple: fix double words in comments
    - drm: apple: backlight: release lock in error path
    - drm: apple: Switch back to drm_atomic_helper_commit_tail_rpm()
    - drm: apple: Fix broken MemDescRelay::release_descriptor callback number
    - drm: apple: Reduce log spam about busy command channel
    - drm: apple: av: Warn only once about failed calls
    - drm: apple: disable HDMI audio by default
    - drm: apple: Override drm_vblank's page flip event handling [HACK]
    - drm/apple: Explicitly stop AFK endpoints on shutdown
    - drm/apple: audio: Create a device link to the DMA device
    - drm/apple: audio: Defer DMA channel acquisition to device open
    - drm/apple: audio: Fix hotplug notifications
    - drm: apple: Add oob hotplug event
    - drm: apple: dptx: Fix get_drive_settings retcode
    - drm: apple: dptxport: get_max_lane_count: Retrieve lane count from phy
    - drm/apple: Fix missing mode init (feel free to squash)
    - drm: apple: iomfb: Align buffer size on unmap/free as well
    - Revert "drm: apple: HACK: Do not delete piodma platform device"
    - drm: apple: afk: Optionally match against EPICName
    - drm: apple: Add dcpav-service-ep
    - drm: apple: iomfb: Provide the EDID as connector property
    - ALSA: Introduce 'snd_interval_rate_bits'
    - fixup! mux: apple dp crossbar: Support t602x DP cross bar variant
    - fixup! mux: apple dp crossbar: Support t602x DP cross bar variant
    - fixup! mux: apple dp crossbar: Support t602x DP cross bar variant
    - fixup! mux: apple dp crossbar: Support t602x DP cross bar variant
    - drm: apple: Enable EDID support by default
    - fixup! drm/apple: audio: Create a device link to the DMA device
    - drm: apple: audio: Implement runtime PM support
    - fixup! mux: apple dp crossbar: Support t602x DP cross bar variant
    - drm: apple: Add CRTC CRC support
    - drm: apple: Add .get_scanout_buffer for drm_panic support
    - drm: apple: respect drm_plane_state zpos
    - drm: apple: constrain swaps to maximum blendable surfaces
    - drm: apple: reject plane commit if it will crash DCP
    - drm: apple: add support for overlay planes
    - drm: apple: use correct min/max plane scaling factors
    - drm: apple: warn about broken sw cursor fallback
    - drm: apple: make plane zpos immutable
    - fixup! drm: apple: add support for overlay planes
    - drm: apple: refactor apple_plane_atomic_check
    - drm: apple: Use dest rct in offscreen test
    - drm: apple: iomfb: Clear non-visible planes
    - drm: apple: Use delayed work for debounced oob HPD
    - drm: apple: Revert "Use delayed work for debounced oob HPD"
    - drm: apple: Support up to 3 DCP instances.
    - drm: apple: Handle dcps with "phys" property as dcpext
    - drm: apple: dptx: Silence DPTX_APCALL_{GET,SET}_DOWN_SPREAD
    - drm: apple: dptx: Tidy up lane count handling
    - drm: apple: afk: Allow replies after service 'teardown'
    - drm: apple: audio: Rework audio service handling
    - iommu/io-pgtable: Add Apple UAT variant format
    - iommu/io-pgtable: Hack in FW-RW/GPU-RO mode into UAT io_pgtable
    - rust: io_pgtable: Add the Apple UAT format abstraction
    - fixup! rust: io_pgtable: Add the Apple UAT format abstraction
    - rust: dma_fence: Add DMA Fence abstraction
    - fixup! rust: dma_fence: Add DMA Fence abstraction
    - rust: helpers: Add bindings/wrappers for dma_resv
    - drm/gem-shmem: Export VM ops functions
    - rust: drm: gem: shmem: Add DRM shmem helper abstraction
    - fixup! rust: drm: gem: shmem: Add DRM shmem helper abstraction
    - rust: drm: device: Convert Device to AlwaysRefCounted
    - fixup! rust: drm: device: Convert Device to AlwaysRefCounted
    - rust: drm: gem: Allow pinning GEM object driver data
    - rust: drm: mm: Add DRM MM Range Allocator abstraction
    - fixup! rust: drm: mm: Add DRM MM Range Allocator abstraction
    - rust: drm: syncobj: Add DRM Sync Object abstraction
    - drm/scheduler: Fix UAF in drm_sched_fence_get_timeline_name
    - rust: drm: sched: Add GPU scheduler abstraction
    - fixup! rust: drm: sched: Add GPU scheduler abstraction
    - drm/gem: Add a flag to control whether objects can be exported
    - rust: drm: gem: Add set_exportable() method
    - drm/shmem-helper: Add lockdep asserts to vmap/vunmap
    - drm/scheduler: Clean up jobs when the scheduler is torn down.
    - rust: drm: sched: Use &mut for ArmedJob.fences()
    - drm/gpuvm: Add drm_gpuvm_bo_unmap()
    - rust: drm: Add GPUVM Manager abstraction
    - fixup! rust: drm: Add GPUVM Manager abstraction
    - HACK: rust: drm: device: Add device initialization without data
    - HACK: rust: drm: device: Add pointless device() method
    - rust: drm: gem: shmem: Add share_dma_resv() function
    - rust: macros: Add versions macro
    - drm/asahi: Add the Asahi driver UAPI
    - fixup! drm/asahi: Add the Asahi driver UAPI
    - rust: bindings: Bind the Asahi DRM UAPI
    - drm/asahi: Add the Asahi driver for Apple AGX GPUs
    - fixup! drm/asahi: Add the Asahi driver for Apple AGX GPUs
    - DO NOT MERGE: drm/asahi: Add an experimental UAPI extension
    - drm/asahi: render: Implement unknown value UAPI extension
    - drm/asahi: hw,initdata: Initdata fixes for G14S
    - drm/asahi: hw: Drop max_dies
    - fixup! drm/asahi: hw: Drop max_dies
    - drm/asahi: initdata: Fix ver_info for G13 V13.5
    - drm/asahi: fw/channels: Identify subpipe (?) field in tvb ack
    - drm/asahi: fw/channels: Document more message types a bit
    - drm/asahi: initdata: Fix 13.5 field position for G13X
    - drm/asahi: initdata: Document more stuff
    - drm/asahi: fw/microseq: Document bits of has_attachments
    - drm/asahi: hw/t600x: Expand some mappings
    - drm/asahi: hw/t8112: Make last IOMapping read-only
    - drm/asahi: render: Correct some values for G14
    - drm/asahi: initdata: Initialize GpuStatsFrag properly
    - drm/asahi: slotalloc: Allow initializing empty slots
    - drm/asahi: fw.channels: Add static assertions for message sizes
    - drm/asahi: hw.t602x: Fixes for t6022
    - drm/asahi: regs: Fix cluster count for G14D
    - drm/asahi: Enable probing for t6022
    - drm/asahi: Increase recursion limit
    - drm/asahi: initdata: Fixes for G14D
    - drm/asahi: initdata,hw: Identify & set idle_off_standby_timer
    - drm/asahi: initdata: Fudge t3 calculation a bit
    - drm/asahi: gpu,hw: Fix array IOMappings
    - drm/asahi: hw/t602x: Increase meta/preempt sizes for G14D
    - drm/asahi: Expose firmware version to userspace
    - fixup! drm/asahi: Expose firmware version to userspace
    - drm/asahi: alloc: Support tagging array allocs
    - drm/asahi: alloc: Use tag as the guard marker
    - fixup! drm/asahi: alloc: Use tag as the guard marker
    - drm/asahi: buffer: Add tags to all the buffers
    - drm/asahi: initdata: Tag more arrays
    - drm/asahi: queue/compute: Tag preempt buf
    - drm/asahi: render: Tag AuxFB
    - drm/asahi: workqueue: Tag GPU buf
    - drm/asahi: buffer,render: Identify and provide layer meta buf
    - drm/asahi: compute: Implement bindless samplers
    - drm/asahi: render: Implement bindless samplers
    - drm/asahi: fw,queue: Implement helper programs
    - drm/asahi: render: Identify and set Z/S strides for layered rendering
    - drm/asahi: queue: Quieten some debugs
    - drm/asahi: Add verbose UAPI error reporting
    - drm/asahi: file: Remove sync limit
    - drm/asahi: render: Remove sync TVB growth support
    - drm/asahi: buffer: Complain more loudly about sync requests
    - drm/asahi: Identify & add render VS spills flag
    - drm/asahi: Identify and allocate clustered layering metadata buf
    - drm/asahi: Fix Clippy complaints
    - drm/asahi: render: Fix layered rendering on G14X
    - drm/asahi: render, buffer: Fix layered rendering on G13X (again)
    - drm/asahi: initdata: New init chain API for rebase
    - fixup! drm/asahi: initdata: New init chain API for rebase
    - drm/asahi: workqueue: Work around ICE in Rust 1.74
    - drm/asahi: queue: Alocate the NotifierList as shared
    - drm/asahi: compute: Allow no preemption flag
    - drm/asahi: Identify and implement helper config register
    - drm/asahi: Check command structure sizes
    - drm/asahi: alloc: Do not allocate memory to free memory
    - fixup! drm/asahi: alloc: Do not allocate memory to free memory
    - drm/asahi: microseq: Fix warnings
    - drm/asahi: Don't lock up when unmapping PTEs fails
    - fixup! drm/asahi: Don't lock up when unmapping PTEs fails
    - drm/asahi: Convert to GPUVM and implement more VM_BIND ops
    - fixup! drm/asahi: Convert to GPUVM and implement more VM_BIND ops
    - drm/asahi: Refactor address types
    - drm/asahi: util: Add RangeExt helpers for Range<T>
    - drm/asahi: mmu: Convert to using Range
    - drm/asahi: Move the unknown dummy page to the top of the address space
    - drm/asahi: Convert more ranges to Range<>
    - fixup! drm/asahi: Convert more ranges to Range<>
    - drm/asahi: mmu: Fix lockdep issues with GpuVm
    - drm/asahi: Implement GEM objects sharing a single DMA resv
    - drm/asahi: queue: Split into Queue and QueueInner
    - drm/asahi: workqueue: Tweak some debug logs
    - fixup! drm/asahi: run rustfmt
    - drm/asahi: file: Update to newer VM_BIND API
    - fixup! drm/asahi: file: Update to newer VM_BIND API
    - drm/asahi: Signal soft fault support to userspace
    - drm/asahi: Enable soft faults by default
    - drm/asahi: Fix u32 mult overflow on large tilebufs/TPCs
    - drm/asahi: Workqueue: Add more debug
    - drm/asahi: Fix event tracking when JobSubmission is dropped
    - drm/asahi: gpu: Show unknown field in timeouts
    - fixup! drm/asahi: gpu: Show unknown field in timeouts
    - FIXUP: drm/asahi: firmware fixes
    - drm/asahi: Handle channel errors
    - fixup! drm/asahi: Handle channel errors
    - drm/asahi: event: Initialize stamps to different values
    - drm/asahi: workqueue,queue: More debug
    - fixup! drm/asahi: workqueue,queue: More debug
    - drm/asahi: workqueue: Fix "Cannot submit, but queue is empty?" bug
    - drm/asahi: Clean up jobs in a workqueue
    - fixup! drm/asahi: Clean up jobs in a workqueue
    - drm/asahi: Add robust_isolation kernel parameter
    - FIXUP: drm/asahi: firmware fixes 2
    - drm/asahi: HACK: Disable compute preemption for now
    - drm/asahi: Align kernel range to buffer::PAGE_SIZE
    - drm/asahi: Implement missing ASAHI_BIND_OP_UNBIND
    - drm/asahi: Implement ASAHI_GET_TIME
    - drm/asahi: Modify debug dev printk macros to avoid adding ".as_ref()"
    - drm/asahi: gpu: Force Box move with manual Box<T>::into_inner()
    - drm/asahi: gpu: Get resources directly through DRM pricate data
    - drm/asahi: mmu: Move closer to rust of integration
    - drm/asahi: regs: Get device ref from platform dev
    - drm/asahi: driver: Port to new device/driver registration
    - drm/asahi: gpu: Collect garbage for private/gpuro together
    - drm/asahi: alloc: Be more verbose about failures
    - drm/asahi: gpu: Add a max object count garbage limit
    - fixup! drm/asahi: Implement ASAHI_GET_TIME
    - fixup! drm/asahi: Add the Asahi driver UAPI
    - fixup! drm/asahi: Add the Asahi driver UAPI
    - fixup! drm/asahi: Add the Asahi driver UAPI
    - fixup! drm/asahi: Add the Asahi driver UAPI
    - fixup! drm/asahi: Implement ASAHI_GET_TIME
    - drm/asahi: Document timestamp ops better, refactor fields
    - fixup! drm/asahi: Add the Asahi driver UAPI
    - drm/asahi: alloc: Remove unused methods
    - drm/asahi: workqueue: Restrict command objects to only job commands
    - drm/asahi: driver: Silence unused field warning
    - drm/asahi: gpu: Remove unused wait_for_poweroff()
    - drm/asahi: util: Commend out unused len() method
    - drm/asahi: gpu: Implement mapping timestamp buffers
    - drm/asahi: file: Implement ASAHI_GEM_BIND_OBJECT
    - drm/asahi: fw, queue: Add UserTimestamp object to job structs
    - drm/asahi: queue: Plumb through objects XArray and add timestamp getter
    - drm/asahi: fw, queue: Plumb through UserTimestamps -> TimestampPointers
    - drm/asahi: queue/render,compute: Handle cmdbuf size mismatches
    - drm/asahi: queue/render,compute: Plumb through timestamps extension
    - drm/asahi: file: Add user_timestamp_frequency_hz to params
    - drm/asahi: Set a bit for internal non-render barriers on G14X
    - fixup! drm/asahi: Add the Asahi driver UAPI
    - drm/asahi: Add the USER_TIMESTAMPS feature
    - drm/asahi: Map all reserved-regions as cached
    - rust: drm/gpuvm: Take &GpuVmBo<T> for map_and_link_va()
    - rust: drm/gpuvm: Pass vm_bo explicitly to step_remap()
    - rust: drm/gpuvm: bo_unmap() should take &GpuVmBo<T>, not ARef.
    - drm/asahi: mmu: Change step_remap() to new api
    - prctl: Introduce PR_{SET,GET}_MEM_MODEL
    - arm64: Implement PR_{GET,SET}_MEM_MODEL for always-TSO CPUs
    - arm64: Introduce scaffolding to add ACTLR_EL1 to thread state
    - arm64: Implement Apple IMPDEF TSO memory model control
    - KVM: arm64: Expose TSO capability to guests and context switch
    - fixup! arm64: Implement Apple IMPDEF TSO memory model control
    - arm64: cpufeature: Unify SCOPE_LOCAL_CPU early & late behavior
    - fixup! arm64: Implement Apple IMPDEF TSO memory model control
    - fixup! arm64: Implement PR_{GET,SET}_MEM_MODEL for always-TSO CPUs
    - fixup! KVM: arm64: Expose TSO capability to guests and context switch
    - gpu: drm: adp: Add Apple Display Pipe driver
    - gpu: drm: adp: Add a backlight driver for the Summit LCD
    - MAINTAINERS: Add entries for touchbar display driver
    - gpu: drm: adp: Refuse X* as client in open()
    - gpu: drm: adp: base the max framebuffer width and height on screen size
    - dt-bindings: input: touchscreen: Add Z2 controller bindings.
    - input: apple_z2: Add a driver for Apple Z2 touchscreens
    - MAINTAINERS: Add entries for Apple Z2 touchscreen driver
    - gpu: drm: adp: Use 16-bit writes for brightness
    - gpu: drm: adp: Allow max brightness to be set via device tree
    - fixup! gpu: drm: adp: Add Apple Display Pipe driver
    - fixup! input: apple_z2: Add a driver for Apple Z2 touchscreens
    - fixup! input: apple_z2: Add a driver for Apple Z2 touchscreens
    - media: apple: Add Apple ISP driver
    - media: apple: isp: IMX558 initial support
    - media: apple: isp: Use preallocated heap
    - media: apple: isp: Fixup shared region arg
    - media: apple: isp: Enable t6000
    - media: apple: isp: Split gpio/mbox MMIO range
    - media: apple: isp: Drop the DART mirroring stuff
    - media: apple: isp: Do not defer on failure to initialize DART
    - media: apple: WIP: t6000 hax
    - media: apple: isp: Set platform_id in bootargs
    - media: apple: isp: Better document info struct fields
    - media: apple: isp: Don't use define for bootargs size
    - media: apple: isp: wmb() before GPIO write
    - media: apple: isp: s/asc/coproc/
    - media: apple: isp: rm unused bootargs members
    - media: apple: isp: rm old isp_resv struct
    - media: apple: isp: misc isp-fw.c improvements
    - media: apple: isp: alloc static surfaces only once
    - media: apple: isp: fix copyright
    - media: apple: isp: Support >32bit VAs for t602x
    - media: apple: isp: t602x hw config
    - media: apple: isp: Working t602x and multiple formats and more fixes
    - media: apple: isp: Always enable singleplane API, make multiple a module
      param
    - media: apple: isp: Switch to threaded IRQs
    - media: apple: isp: Remove ioread/iowrite and stop doing raw address
      translation
    - media: apple: isp: Propagate EINTR from firmware loads
    - media: apple: isp: Implement posted commands
    - media: apple: isp: Add STOP and POWER_DOWN commands
    - media: apple: isp: Maybe fix some DMA ordering issues
    - media: apple: isp: Make channel sends not interruptible
    - media: apple: isp: Use a second region for MBOX_IRQ_{DOORBELL,ACK}
    - media: apple: isp: t8112 HW config
    - media: apple: isp: Limit maximal number of buffers
    - media: apple: isp: t8112 fixes...
    - media: apple: isp: Add flicker_sensor_set cmd
    - media: apple: isp: Minor changes to cam flow
    - media: apple: isp: Make sub-pmdomain handling explicit
    - media: apple: isp: Zero out pages allocated to ISP
    - media: apple: isp: Use cached IOMMU mappings
    - media: apple: isp: Rework meta surface handling & buffer return
    - media: apple: isp: Clear IRQs when resetting coproc
    - media: apple: isp: Add a missing read barrier (possibly?)
    - media: apple: isp: VMap only what is necessary, remove redundant logging
      state bit
    - media: apple: isp: Only reset coproc when necessary, fix minor race
    - media: apple: isp: Option to use CMD_STOP (ifdeffed out)
    - media: apple: isp: Use a more user-friendly device name
    - media: apple: isp: Parse firmware version from device tree
    - media: apple: isp: Show camera presets even for unsupported sensors
    - media: apple: isp: Enable IMX364 sensor
    - media: apple: isp: implement ENUM_FRAMEINTERVALS trivially
    - media: apple: isp: Use a mutex instead of a spinlock for channels
    - media: apple: isp: Support system sleep
    - fixup! media: apple: isp: Working t602x and multiple formats and more fixes
    - fixup! media: apple: isp: Working t602x and multiple formats and more fixes
    - rust: WIP(?): Various bits of rust glue for AOP series
    - soc: apple: Add support for the AOP co-processor.
    - ASoC: apple: Add aop_audio driver.
    - iio: common: Add AOP sensor drivers.
    - rust: soc: apple: Add Apple mailbox abstractions
    - soc: apple: Add SEP driver.
    - rust: bindgen: Make snd_dec_flac opaque
    - fixup! ASoC: apple: Add aop_audio driver.
    - drm/asahi: file: Reject gem_bind past the end of the object
    - Asahi patchset asahi-6.12.10-2

 -- John Cabaj <john.cabaj@canonical.com>  Mon, 20 Jan 2025 09:22:12 -0600

linux-asahi-arm (6.12.0-1002.2) plucky; urgency=medium

  * Packaging resync (LP: #1786013)
    - [Packaging] asahi: move parent to plucky

  * Miscellaneous Ubuntu changes
    - [Config] asahi-arm: Update toolchain versions and sync with master
    - [Config] asahi-arm: Update asahi-specific configs

  * Miscellaneous upstream changes
    - HID: magicmouse: Apple Magic Trackpad 2 USB-C driver support
    - rust: enable arbitrary_self_types and remove `Receiver`
    - arm64: dts: apple: t8103: Fix spi4 power domain sort order
    - arm64: dts: apple: t8103: Add spi controller nodes
    - arm64: dts: apple: t8112: Add spi controller nodes
    - arm64: dts: apple: t600x: Add spi controller nodes
    - arm64: dts: apple: Add SPI NOR nvram partition to all devices
    - arm64: dts: apple: t8112: Remove always-on from the PMP node
    - arm64: dts: apple: t8112: Add wlan/bt PCIe device nodes
    - arm64: dts: apple: t8112: Add PMU NVMEM and SMC RTC/reboot nodes
    - arm64: dts: apple: t8112: Add SMC node to devicetree
    - arm64: dts: apple: t8112*: Put in audio nodes
    - arm64: dts: apple: t8112: Add dwc3 nodes
    - arm64: dts: apple: t8112: Add mtp device nodes for j413/j493
    - arm64: dts: apple: t8103: Add dwc3 nodes
    - arm64: dts: apple: t8103: Add spi3 keyboard node
    - arm64: dts: apple: Add PCI power enable GPIOs
    - arm64: dts: apple: Add SMC node to t8103/t6001 devicetrees
    - arm64: dts: apple: Add PMU NVMEM and SMC RTC/reboot nodes
    - arm64: dts: apple: Mark ATC USB AON domains as always-on
    - arm64: dts: apple: Keep PCIe power domain on
    - arm64: dts: apple: Add SMC node to t600x devicetrees
    - arm64: dts: apple: Add PMU NVMEM and SMC RTC/reboot nodes
    - arm64: dts: apple: j31[46]: Add keyboard nodes
    - arm64: dts: apple: t600x: Add dwc3 nodes
    - arm64: dts: apple: Add WiFi module and antenna properties
    - arm64: dts: apple: Add PCI power enable GPIOs
    - arm64: dts: apple: t600x: Add bluetooth device trees
    - arm64: dts: apple: t8103*: Put in audio nodes
    - arm64: dts: apple: t600x-jxxx: Put in audio nodes
    - arm64: dts: apple: Drop 'integrated audio' from sound models
    - arm64: dts: apple: t6001-j375c: Add USB3 hub GPIO initialization
    - arch: arm64: apple: Add missing power state deps for display
    - arch: arm64: apple: t600x: Mark USB and PCIe as "dma-coherent"
    - arch: arm64: apple: Add display controller related device tree nodes
    - arch: arm64: apple: t600x: Add display controller related device tree nodes
    - arch: arm64: apple: t8103: Add connector type property for DCP*
    - arch: arm64: apple: t600x: Add connector type property for DCP*
    - arm64: dts: apple: t8103: Add eFuses node
    - arm64: dts: apple: t8103: Add ATCPHY node
    - arch: arm64: dts: apple: t6000: Add eFuses node
    - arch: arm64: dts: apple: t600x: Add ATCPHY nodes
    - arch: arm64: apple: Add dcp panel node for t8103 based laptops and imacs
    - arch: arm64: apple: Add dcp panel node for t600x based laptops
    - arm64: dts: apple: t8112: Add eFuses node
    - arm64: dts: apple: t8112: Add ATCPHY nodes
    - arm64: dts: apple: t8112: Add dcp/disp0 nodes
    - scripts/dtc: Add support for floating-point literals
    - arm64: dts: apple: t8103*: Add GPU nodes
    - arm64: dts: Add GPU performance data to t8103.dts
    - arm64: dts: Add power data for t8103
    - arm64: dts: Add t600x GPU nodes
    - arm64: dts: t8103: Add GPU leak coefficients
    - arm64: dts: apple: Add no-map to GPU reserved-memory nodes
    - arm64: dts: apple: Add GPU nodes to T8112
    - arm64: dts: apple: Add GPU firmware versions to t8113/t600x
    - arm64: dts: apple: t600x: Add DCP power domain to missing devices
    - arm64: dts: apple: t8103: Add DCP power domain to missing devices
    - arm64: dts: apple: t8112: Add DCP power domain to missing devices
    - arm64: dts: apple: t8103: Add missing ps_pmp dependency to ps_gfx
    - arm64: dts: apple: t600x: Add "ps_disp0_cpu0" as resets for dcp
    - arm64: dts: apple: t8103: Add "ps_disp0_cpu0" as resets for dcp
    - arm64: dts: apple: t8112: Add "ps_disp0_cpu0" as resets for dcp
    - arm64: dts: apple: j314/j316: Disable ATC3_USB_AON power domain
    - arm64: dts: apple: Add keyboard alias & layout props for t8112 laptops
    - arm64: dts: apple: Fix t600x mca IRQs
    - arm64: dts: apple: Add initial t602x device trees
    - arm64: dts: apple: Add MTP nodes to t6020x
    - arm64: dts: apple: Add identity dma-ranges mapping
    - DO NOT SUBMIT: arm64: dts: apple: t6020-j474s: Add unused PCIe port01
    - arm64: dts: apple: Add pmgr-misc nodes to t60xx
    - arm64: dts: apple: t600x: Remove obsolete comment in ans2 power domain
    - arm64: dts: apple: Make ps_msg always-on
    - arm64: dts: apple: t600x: Enable turbo CPU p-states
    - arm64: dts: apple: t8103: Enable turbo CPU p-states
    - arm64: dts: apple: t8112: Enable turbo CPU p-states
    - arm64: dts: apple: Add T602x GPU node
    - arm64: dts: apple: t600x-j375.dtsi: Add missing etherhet0 alias
    - arm64: dts: apple: Add initial t6022 support
    - arm64: dts: apple: Add j180d (Mac Pro 2023) device tree
    - arm64: dts: apple: t6022: Add APCIE-GE nodes
    - arm64: dts: apple: t8103: Add touchbar screen bindings
    - arm64: dts: apple: Add touchbar display nodes for t8112-j493
    - arm64: dts: apple: t8103: Add touchbar bindings
    - arm64: dts: apple: t8112: Add touchbar digitizer node
    - arm64: dts: apple: Add devicetree for Macbook Air (15-inch, M2, 2023)
    - arm64: dts: apple: t8112-j473: Set GPU base pstate
    - arm64: dts: apple: Share USB-C port node on t6022 devices
    - arm64: dts: apple: t6022: Disable dcp thouroughly
    - arm64: dts: apple: t6020-j474s: Disable dcp until lpdpphy is supported
    - arm64: dts: apple: t602x: Add initial Mac Studio (2023) device trees
    - arm64: dts: apple: t8112-j473: Add dptx-phy power-domain
    - arm64: dts: apple: t6020x: Mark dptx_phy_ps only on laptops always-on
    - arm64: dts: apple: t8112: add opp-microwatt props to avalanche/blizzard
    - arm64: dts: apple: t600x-j375.dtsi: Add spi nor flash and nvram partition
    - arm64: dts: apple: t6022-j180.dtsi: Add spi nor flash and nvram partition
    - arm64: dts: apple: t8103: Add nvram alias
    - arm64: dts: apple: t8112: Add nvram alias
    - arm64: dts: apple: t8103: Add ISP nodes
    - arm64: dts: apple: t6000: Add ISP nodes
    - arm64: dts: apple: t8112: Add ISP nodes
    - arm64: dts: apple: t602x: Add ISP nodes
    - arm64: dts: ISP platform configs
    - arm64: dts: apple: imx248: Add scaled and cropped presets
    - arm64: dts: apple: imx558: Add downscaled resolution presets
    - arm64: dts: apple: t8103-j274: Add speaker I/V sense slots
    - arm64: dts: apple: t600x-j314-j316: Add speaker I/V sense slots
    - arm64: dts: apple: t600x-j314-j316: Zero out unused speaker sense slots
    - arm64: dts: apple: t600x: Mark MCA power states as externally-clocked
    - arm64: dts: apple: t602x: Mark MCA power states as externally-clocked
    - arm64: dts: apple: t8103: Mark MCA power states as externally-clocked
    - arm64: dts: apple: t8112: Mark MCA power states as externally-clocked
    - arm64: dts: apple: t600x-j375: Add I/VMON slots to amp
    - arm64: dts: apple: t600x-j180d: Add I/VMON slots to amps
    - arm64: dts: apple: t8112-j413: Add I/VMON slots to amps
    - arm64: dts: apple: t8112-j415: Add I/VMON slots to amps
    - arm64: dts: apple: t8112-j473: Add I/VMON slots to amp
    - arm64: dts: apple: t8112-j493: Add I/VMON slots to amps
    - arm64: dts: apple: t8103-j293: Add I/VMON slots to amps
    - arm64: dts: apple: t8103-j313: Add I/VMON slots to amps
    - arm64: dts: apple: j314/j316: Enable speakers
    - arm64: dts: apple: j413: Enable speakers
    - arm64: dts: apple: j415: Enable speakers
    - arm64: dts: apple: j375: Add missing speaker amp IRQs
    - arm64: dts: apple: j293: Add missing speaker amp IRQs
    - arm64: dts: apple: j313: Add missing speaker amp IRQs
    - arm64: dts: apple: j413: Add missing speaker amp IRQs
    - arm64: dts: apple: j415: Add missing speaker amp IRQs
    - arm64: dts: apple: j493: Add missing speaker amp IRQs
    - arm64: dts: apple: j413: Model SDZ GPIO as a regulator
    - arm64: dts: apple: t600x-j314-j316: Set sound compatibles per device
    - arm64: dts: apple: j375 & friends: Enable speakers
    - arm64: dts: apple: j293: Enable speakers
    - arm64: dts: apple: j313: Enable speakers
    - arm64: dts: apple: j493: Enable speakers
    - arm64: dts: apple: describe shared SDZ GPIO for tas2764
    - arm64: dts: apple: j293: Model SDZ GPIO as a regulator
    - arm64: dts: apple: j313: Model SDZ GPIO as a regulator
    - arm64: dts: apple: add opp-microwatt to t8103/t600x
    - arm64: dts: apple: Disable ps_isp_sys unless it is used
    - arm64: dts: apple: t600x: Switch to apple,dma-range
    - arm64: dts: apple: t8103: Switch to apple,dma-range
    - arm64: dts: apple: t8112: Switch to apple,dma-range
    - arm64: dts: apple: t600x: Add "apple,min-state" to ps_dispextN_cpu0
    - arm64: dts: apple: t602x: Add "apple,min-state" to ps_dispextN_cpu0
    - arm64: dts: apple: t8103: Add dcpext/dispext0 nodes
    - arm64: dts: apple: t8112: Add dcpext/dispext0 nodes
    - arm64: dts: apple: t600x: Add t6000 dispext device nodes
    - arm64: dts: apple: t602x: Add t6020 dispext device nodes
    - arm64: dts: apple: t8112: Add dptx-phy node
    - arm64: dts: apple: t602x: Add lpdptx-phy node
    - arm64: dts: apple: t600x: Add device nodes for atc DP crossbar
    - arm64: dts: apple: t602x: Add device nodes for atc DP crossbar
    - arm64: dts: apple: t8112-j473: Enable dcp/dptx-phy/dp2hdmi
    - arm64: dts: apple: t6020-j474,t6021-j475: Enable dcp/dptx-phy/dp2hdmi
    - arm64: dts: apple: t6022-{j180,j475}: Enable dcpext0/dptx-phy/dp2hdmi
    - arm64: dts: apple: Fill device node for dp2hdmi on Macbook Pros
    - arm64: dts: apple: j474s/j475c: Use dcpext0 for HDMI out
    - arm64: dts: apple: t8112-j473: Use dcpext for HDMI out
    - fixup! arm64: dts: apple: Add initial t602x device trees
    - fixup! arch: arm64: apple: Add dcp panel node for t600x based laptops
    - fixup! arch: arm64: apple: Add dcp panel node for t8103 based laptops and
      imacs
    - fixup! arm64: dts: apple: t8112: Add dcp/disp0 nodes
    - fixup! arm64: dts: apple: Add devicetree for Macbook Air (15-inch, M2, 2023)
    - fixup! arm64: dts: apple: Add MTP nodes to t6020x
    - arm64: apple: t8103-pmgr: SIO: Add audio, spi and uart power-domains
    - arm64: apple: t8112-pmgr: SIO: Add audio, spi and uart power-domains
    - arm64: apple: t600x: pmgr: SIO: Add audio, spi and uart power-domains
    - arm64: apple: t602x: pmgr: SIO: Add audio, spi and uart power-domains
    - arm64: apple: t8103: Add SIO, DPA nodes; hook up to DCP
    - arm64: apple: t8112: Add SIO, DPA nodes; hook up to DCP
    - arm64: apple: t600x: Move dart_sio* to dieX
    - arm64: apple: t600x: Add sio and dpaudio device nodes
    - arm64: apple: t602x: Add sio and dpaudio device nodes
    - arm64: apple: t60xx: Enable DP/HMI audio nodes on all devices
    - arm64: apple: t60x0/t60x1: Enable sio explicitly
    - arm64: apple: t8103-j274: Enable sio explicitly
    - arm64: apple: t8112-j473: Enable sio explicitly
    - fixup! arm64: dts: apple: t8112: Add PMU NVMEM and SMC RTC/reboot nodes
    - arm64: dts: apple: add common hwmon keys and fans
    - arm64: dts: apple: t8103: Add SMC hwmon sensors
    - arm64: dts: apple: t8112: Add SMC hwmon sensors
    - arm64: dts: apple: t600x-j3xx: Add SMC hwmon sensors
    - arm64: dts: apple: t602x-j4xx: Add SMC hwmon sensors
    - arm64: dts: apple: j474s: correct case of Mac mini
    - fixup! arm64: dts: apple: t8103: Add touchbar bindings
    - fixup! arm64: dts: apple: t8103: Add touchbar bindings
    - DO NOT MERGE: arm64: dts: apple: t8103: Add cs-gpios to touchbar node
    - fixup! arm64: dts: Add t600x GPU nodes
    - arm64: dts: apple: Add AOP and subdevices
    - arm64: dts: apple: Add SEP device tree nodes
    - arm64: dts: apple: Add AOP audio identifiers
    - MAINTAINERS: Add Apple dwc3 bindings to ARM/APPLE
    - MAINTAINERS: Add apple-spi driver & binding files
    - soc: apple: rtkit: Check for failure to send mgmt messages & log
    - soc: apple: rtkit: Log failure to send messages
    - soc: apple: rtkit: Log failed buffer requests
    - soc: apple: rtkit: Add APPLE_RTKIT_PWR_STATE_INIT
    - soc: apple: rtkit: Implement OSLog buffers properly
    - soc: apple: Add driver for Apple PMGR misc controls
    - cpuidle: apple: Add Apple SoC cpuidle driver
    - soc: apple: rtkit: Add devm_apple_rtkit_free()
    - dt-bindings: power: apple,pmgr-pwrstate: Add force-{disable,reset}
    - soc: apple: pmgr: Add force-disable/force-reset
    - soc: apple: pmgr: Add externally-clocked property
    - soc: apple: rtkit: Use high prio work queue
    - cpuidle: apple: Do not load on unsupported Apple platforms
    - iommu: Add IOMMU_RESV_TRANSLATED for non 1:1 mapped reserved regions
    - iommu: Parse translated reserved regions
    - iommu/dart: Track if the DART is locked
    - iommu/dart: Allow locked DARTs to probe
    - iommu: apple-dart: Don't attempt to reset/restore locked DARTs
    - iommu/dart: Set DMA domain for locked DARTs
    - iommu/dart: Reject identity domain for locked DARTs
    - iommu/dart: Assert !locked when reconfiguring
    - iommu: apple-dart: Install IOMMU_RESV_TRANSLATED mappings
    - iommu: apple-dart: Link to consumers with blanket RPM_ACTIVE
    - iommu: apple-dart: Enable runtime PM
    - iommu: io-pgtable: Add 4-level page table support
    - iommu: apple-dart: Clear stream error indicator bits for T8110 DARTs
    - iommu: apple-dart: Make the hw register fields u32s
    - iommu: apple-dart: Add 4-level page table support
    - iommu: apple-dart: Support specifying the DMA aperture in the DT
    - iommu: apple-dart: Increase MAX_DARTS_PER_DEVICE to 3
    - iommu: apple-dart: Allow mismatched bypass support
    - iommu: apple-dart: Power on device when handling IRQs
    - iommu: apple-dart: Check for fwspec in the device probe path
    - iommu/of: Free fwspec on probe deferrel
    - drivers/perf: apple_m1: Refactor event select/filter configuration
    - drivers/perf: apple_m1: Support host/guest event filtering
    - drivers/perf: apple_m1: Map generic branch events
    - drivers/perf: apple_m1: Provide helper for mapping PMUv3 events
    - KVM: arm64: Compute PMCEID from arm_pmu's event bitmaps
    - KVM: arm64: Always support SW_INCR PMU event
    - KVM: arm64: Remap PMUv3 events onto hardware
    - KVM: arm64: Use a cpucap to determine if system supports FEAT_PMUv3
    - KVM: arm64: Drop kvm_arm_pmu_available static key
    - KVM: arm64: Use guard() to cleanup usage of arm_pmus_lock
    - KVM: arm64: Move PMUVer filtering into KVM code
    - KVM: arm64: Compute synthetic sysreg ESR for Apple PMUv3 traps
    - KVM: arm64: Advertise PMUv3 if IMPDEF traps are present
    - KVM: arm64: Advertise 0 event counters for IMPDEF PMU
    - arm64: Enable IMP DEF PMUv3 traps on Apple M2
    - arm64: Enable IMP DEF PMUv3 traps on Apple M1
    - drivers/perf: apple_m1: Map a few more PMUv3 events
    - KVM: arm64: Provide 1 event counter on IMPDEF hardware
    - KVM: arm64: selftests: Add test for probing PMUv3 sysregs
    - tty: serial: samsung_tty: Support runtime PM
    - of: Demote "Bad cell count" to debug message
    - mmc: sdhci-pci: Support external CD GPIO on all OF systems
    - mmc: sdhci-pci: Support setting CD debounce delay
    - PCI: apple: Add depends on PAGE_SIZE_16KB
    - firmware_loader: Add /lib/firmware/vendor path
    - i2c: pasemi: Improve timeout handling and error recovery
    - usb: typec: tipd: Be more verbose about errors
    - Add 'asahi' localversion to 05-asahi.localversion
    - i2c: pasemi: Enable the unjam machine
    - i2c: pasemi: Log bus reset causes
    - driver core: fw_devlink: Add fw_devlink_count_absent_consumers()
    - PM: domains: Add a flag to defer power-off until all consumers probe
    - soc: apple: apple-pmgr-pwrstate: Mark on-at-boot PDs as DEFER_OFF
    - tty: serial: samsung_tty: Mark as wakeup_path on no_console_suspend
    - soc: apple: apple-pmgr-pwrstate: Mark on-at-boot PDs as wakeup
    - HACK: Lol libwebrtc
    - iommu: Only allocate FQ domains for IOMMUs that support them
    - drm/simpledrm: Set DMA and coherency mask
    - x86/insn_decoder_test: allow longer symbol-names
    - arm64: Increase kernel stack size to 32K
    - fixup! tty: serial: samsung_tty: Support runtime PM
    - Increase MAX_LOCKDEP_CHAIN_HLOCKS
    - Revert "arm64: defconfig: Enable LPA2 support"
    - Partial revert "arm64: Enable 52-bit virtual addressing for 4k and 16k
      granule configs"
    - dt-bindings: usb: Add Apple dwc3 bindings
    - usb: dwc3: Add support for Apple DWC3
    - usb: dwc3: apple: Do not use host-vbus-glitches workaround
    - usb: dwc3: core: Allow phy suspend during init for role_switch_reset_quirk
    - apple-nvme: defer cache flushes by a specified amount
    - apple-nvme: Release power domains when probe fails
    - apple-nvme: Support coprocessors left idle
    - spi: dt-bindings: apple,spi: Add binding for Apple SPI controllers
    - spi: apple: Add driver for Apple SPI controller
    - spi: apple: Set use_gpio_descriptors to true
    - ASoC: dt-bindings: Add CS42L84 codec
    - ASoC: cs42l84: Add new codec driver
    - ASoC: cs42l84: leverage ring sense IRQs to correctly detect headsets
    - ASoC: cs42l84: remove incorrect of_match_ptr()
    - ASoC: cs42l84: Remove unused including <linux/version.h>
    - Revert "ASoC: ops: Don't modify the driver's plaform_max when reading state"
    - ASoC: tas2764: Extend driver to SN012776
    - ASoC: tas2764: Add control concerning overcurrent events
    - ASoC: ops: Move guts out of snd_soc_limit_volume
    - ASoC: ops: Enforce platform maximum on initial value
    - ASoC: ops: Accept patterns in snd_soc_limit_volume
    - ASoC: ops: Introduce 'snd_soc_deactivate_kctl'
    - ASoC: ops: Introduce 'soc_set_enum_kctl'
    - ASoC: card: Let 'fixup_controls' return errors
    - dt-bindings: sound: Add Apple Macs sound peripherals
    - ASoC: apple: Add macaudio machine driver
    - ASoC: cs42l42: Fix typo
    - ASoC: cs42l42: Do not advertise sample bit symmetry
    - ASoC: macaudio: Fix headset routes
    - ASoC: dapm: Export new 'graph.dot' file in debugfs
    - ASoC: macaudio: Add j375 fixup_controls
    - ASoC: macaudio: Add j493 fixup_controls
    - ASoC: macaudio: Rename ALSA driver to simple 'macaudio'
    - ASoC: macaudio: Drop the 'inverse jack' speaker stuff
    - ASoC: macaudio: s/Freq/Frequency/ in TAS2764 control
    - ASoC: macaudio: s/void_warranty/please_blow_up_my_speakers/
    - ASoC: macaudio: Gate off experimental platforms
    - ASoC: macaudio: Alias f413 fixups to j314
    - ASoC: apple: mca: Constrain channels according to TDM mask
    - ASoC: macaudio: Improve message on opening of unrouted PCM devices
    - ASoC: macaudio: Add initial j313 fixup_controls
    - ASoC: macaudio: constrain frontend channel counts
    - ASoC: cs42l42: Set a faster digital ramp-up rate
    - ASoC: apple: mca: Move clock shutdown to be shutdown
    - ASoC: macaudio: alias j415 kcontrols to j314
    - ALSA: control: Add kcontrol callbacks for lock/unlock
    - ASoC: macaudio: Condition selecting NCO driver on COMMON_CLK
    - ASoC: macaudio: Tune DT parsing error messages
    - ASoC: apple: mca: Separate data & clock port setup
    - ASoC: apple: mca: Factor out mca_be_get_fe
    - ASoC: apple: mca: Support FEs being clock consumers
    - ASoC: apple: mca: Fix SYNCGEN enable on FE clock consumers
    - ASoC: macaudio: Start speaker sense capture support
    - ASoC: macaudio: Tweak "no audio route" message
    - ASoC: macaudio: Do not constrain sense PCM
    - ASoC: tas2770: Factor out set_ivsense_slots
    - ASoC: tas2770: Fix and redo I/V sense TDM slot setting logic
    - ASoC: tas2764: Reinit cache on part reset
    - NOT UPSTREAMABLE: ASoC: tas2764: Redo I/V sense logic
    - ASoC: macaudio: Tune constraining of FEs, add BCLK
    - ASoC: apple: mca: Support capture on multiples BEs
    - ASoC: tas2764: Configure zeroing of SDOUT slots
    - WIP: ASoC: tas2764: Apply unknown Apple quirk
    - ASoC: tas2764: Raise regmap range maximum
    - ASoC: tas2770: Export 'die_temp' to sysfs
    - ASoC: tas2764: Export 'die_temp' to sysfs
    - ASoC: tas2764: Crop SDOUT zero-out mask based on BCLK ratio
    - ASoC: macaudio: Remove stale 'speaker_nchans' fields
    - ASoC: macaudio: Add 'Speakers Up Indicator' control
    - ASoC: tas2764: Add optional 'Apple quirks'
    - ASoC: macaudio: Do not disable ISENSE/VSENSE switches on j314
    - ASoC: macaudio: Fix PD link double-frees?
    - ASoC: macaudio: Sense improvements
    - ASoC: ops: Export snd_soc_control_matches()
    - macaudio: speaker volume safety interlocks
    - alsa: pcm: Remove the qos request only if active
    - macaudio: Add a getter for the interlock
    - ASoC: apple: mca: Do not mark clocks in use for non-providers
    - macaudio: Allow DT enabled speakers and gate them off in the driver
    - macaudio: Enable VSENSE switches
    - macaudio: Initialize speaker lock properly
    - macaudio: Use the same volume limit for all amps
    - macaudio: Disable debug
    - ASoC: tas2764: Enable main IRQs
    - ASoC: tas2764: Power up/down amp on mute ops
    - ASoC: tas2764: Add SDZ regulator
    - macaudio: Use an explicit mutex for the speaker volume lock
    - ASoC: tas2764: Add reg defaults for TAS2764_INT_CLK_CFG
    - ASoC: tas2764: Mark SW_RESET as volatile
    - ASoC: tas2764: Fix power control mask
    - ASoC: apple: mca: Increase reset timeout
    - ALSA: dmaengine: Always terminate DMA when a PCM is closed
    - ASoC: tas2764: Wait for ramp-down after shutdown
    - ASoC: tas2764: Enable some Apple quirks by default
    - macaudio: Rework platform config & add all remaining platforms
    - ASoC: tas2770: Add SDZ regulator
    - ASoC: tas2770: Power cycle amp on ISENSE/VSENSE change
    - ASoC: tas2770: Add zero-fill and pull-down controls
    - ASoC: tas2770: Support setting the PDM TX slot
    - ASoC: tas2770: Fix volume scale
    - macaudio: Remove -3dB safety pad from j313
    - macaudio: Skip speaker sense PCM if no sense or no speakers
    - macaudio: Officially enable j313 speakers
    - ASoC: tas2764: Set the SDOUT polarity correctly
    - ASoC: tas2770: Set the SDOUT polarity correctly
    - macaudio: Set the card name explicitly
    - macaudio: Change device ID form Jxxx to AppleJxxx
    - macaudio: Turn please_blow_up_my_speakers into an int
    - macaudio: Sync all gains with macOS
    - macaudio: Fix CHECK return condition checking
    - macaudio: Avoid matches against cs42l84's constrols
    - ASoC: apple: mca: Add delay after configuring clock
    - macaudio: Disable j313 and j274
    - ASoC: apple: mca: Add more delay after configuring clock
    - ASoC: apple: mca: More delay
    - macaudio: Fix missing kconfig requirement
    - fixup! dmaengine: apple-admac: Add Apple ADMAC driver
    - HACK: ALSA: Export 'snd_pcm_known_rates'
    - ALSA: Support nonatomic dmaengine PCMs
    - READ COMMIT MESSAGE! macaudio: Enable first round of models
    - READ COMMIT MESSAGE! macaudio: Enable second round of models
    - dmaengine: apple-admac: Avoid accessing registers in probe
    - DO NOT MERGE: dmaengine: apple-admac: Add temporary aop-admac compatible
    - soc: apple: rtkit: Add apple_rtkit_has_endpoint()
    - soc: apple: rtkit: Add tracekit endpoint.
    - fixup! ASoC: apple: Add macaudio machine driver
    - wifi: brcmfmac: Add missing shared area defines to pcie.c
    - wifi: brcmfmac: Handle PCIe MSI properly
    - wifi: brcmfmac: Fix logic for deciding which doorbell registers to use
    - wifi: brcmfmac: Support v6+ flags and set host_cap properly
    - wifi: brcmfmac: Add newer msgbuf packet types up to 0x2e
    - wifi: brcmfmac: Add a new bus op for D2H mailbox message handling
    - wifi: brcmfmac: Implement the H2D/D2H mailbox data commonring messages
    - wifi: brcmfmac: Support exchanging power mailbox messages via commonring
    - wifi: brcmfmac: Shut up p2p unknown frame error
    - wifi: brcmfmac: Do not service msgbuf IRQs until ready in MSI mode
    - wifi: brcmfmac: Add support for SYSMEM corerev >= 12 & fix < 12
    - wifi: brcmfmac: Add support for firmware signatures
    - wifi: brcmfmac: msgbuf: Increase RX ring sizes to 2048
    - wifi: brcmfmac: Increase bandlist size
    - wifi: brcmfmac: chip: ca7: Only disable D11 cores; handle an arbitrary
      number
    - wifi: brcmfmac: Handle watchdog properly in newer cores
    - wifi: brcmfmac: pcie: Access pcie core registers via dedicated window
    - wifi: brcmfmac: pcie: Initialize IRQs before firmware boot
    - wifi: brcmfmac: Do not set reset vector when signatures are in use
    - wifi: brcmfmac: Mask all IRQs before starting firmware
    - wifi: brcmfmac: Add support for SCAN_V3
    - wifi: brcmfmac: Implement event_msgs_ext
    - wifi: brcmfmac: Support bss_info up to v112
    - wifi: brcmfmac: Extend brcmf_wsec_pmk_le
    - wifi: brcmfmac: Add BCM4388 support
    - brcmfmac: Fix AP mode
    - Finish firmware mem map, fix heap start calculation bug.
    - Add support for encoding/decoding 6g chanspecs
    - Dynamically configure VHT settings to match firmware
    - Compute number of available antennas and set it in wiphy structure.
    - Support GCMP cipher suite, used by WPA3.
    - Don't issue wrong insufficient headroom warning
    - Support high power/low power/etc scan flags
    - Add support for 6G bands and HE
    - Fix regulatory domain handling to reset bands properly
    - fixup! fix FWIL definition to use SSID length constant
    - fixup! define missing event message extension
    - Structurize PNF scan and add support for latest version
    - Structurize scan parameter handling
    - Support new join parameter structure versions
    - Let feature attachment fail, and fail if we can't handle the interface
      versions we find.
    - Add support for more auth suites in roaming offload
    - Set chanspec during join.
    - Add support for more rate info in station dumps
    - Support bandwidth caps for all bands
    - Clean up and common interface creation handling
    - Disable partial SAE offload
    - fixup! wifi: brcmfmac: Add support for firmware signatures
    - HID: add device IDs for Apple SPI HID devices
    - HID: apple: add support for internal keyboards
    - HID: apple: add Fn key mapping for Apple silicon MacBooks
    - HID: apple: add Fn key mapping for Macbook Pro with touchbar
    - HID: magicmouse: use a define of the max number of touch contacts
    - HID: magicmouse: use struct input_mt_pos for X/Y
    - HID: magicmouse: use ops function pointers for input functionality
    - HID: magicmouse: add support for Macbook trackpads
    - WIP: HID: transport: spi: add Apple SPI transport
    - HID: add HOST vendor/device IDs for Apple MTP devices
    - HID: core: Handle HOST bus type when announcing devices
    - hid: apple: Bind to HOST devices for MTP
    - hid: magicmouse: Add MTP multi-touch device support
    - soc: apple: Add DockChannel driver
    - hid: Add Apple DockChannel HID transport driver
    - soc: apple: Add RTKit helper driver
    - HID: transport: spi: Check status message after transmits
    - HID: magicmouse: Add .reset_resume for SPI trackpads
    - HID: transport: spi: Add suspend support
    - HID: Bump maximum report size to 16384
    - HID: magicmouse: Handle touch controller resets on SPI devices
    - HID: transport: spi: Implement GET FEATURE
    - HID: magicmouse: Query device dimensions via HID report
    - HID: transport: spi: apple: Increase receive buffer size
    - lib/vsprintf: Add support for generic FOURCCs by extending %p4cc
    - platform/apple: Add new Apple Mac SMC driver
    - gpio: Add new gpio-macsmc driver for Apple Macs
    - power: supply: macsmc_power: Driver for Apple SMC power/battery stats
    - power: supply: macsmc_power: Add cycle count and health props
    - power: supply: macsmc_power: Add present prop
    - power: supply: macsmc_power: Add more props, rework others
    - power: supply: macsmc_power: Use BUIC instead of BRSC for charge
    - power: supply: macsmc_power: Turn off OBC flags if macOS left them on
    - power: supply: macsmc_power: Add AC power supply
    - power: reset: macsmc-reboot: Add driver for rebooting via Apple SMC
    - rtc: Add new rtc-macsmc driver for Apple Silicon Macs
    - Input: macsmc-hid: New driver to handle the Apple Mac SMC buttons/lid
    - Input: macsmc-hid: Support button/lid wakeups
    - gpio: macsmc: Add IRQ support
    - Input: macsmc-hid: Support the power button on desktops
    - power: supply: macsmc_power: Add critical level shutdown & misc events
    - platform/apple: smc: Add apple_smc_read_f32_scaled
    - power: supply: macsmc_power: Add a debug mode to print power usage
    - macsmc: Fix race between backend and core on notifications
    - power: supply: macsmc_power: Log power data on button presses
    - power: supply: macsmc_power: Add CHWA charge thresholds
    - power: supply: macsmc_power: Report available charge_behaviours
    - power: supply: macsmc_power: Add more properties
    - platform/apple: smc: Add apple_smc_read_ioft_scaled
    - hwmon: add macsmc-hwmon driver
    - hwmon: macsmc: Avoid global writable hwmon_chip_info
    - power: supply: macsmc_power: Add CHLS charge thresholds
    - power: supply: macsmc_power: Remove CSIL
    - power: supply: macsmc_power: Report not charging for CHLS thresholds
    - platform/apple: smc: Add apple_smc_write_f32_scaled
    - hwmon: macsmc: wire up manual fan control support
    - fixup! platform/apple: Add new Apple Mac SMC driver
    - spmi: add a first basic spmi driver for Apple SoC
    - mfd: Add a simple-mfd-spmi driver
    - nvmem: Add spmi-mfd-nvmem driver
    - nvmem: spmi-mfd-nvmem: use legacy fixed layout
    - cpufreq: apple-soc: Drop setting the PS2 field on M2+
    - dt-bindings: pci: apple,pcie: Add subnode binding, pwren-gpios property
    - PCI: apple: Use gpiod_set_value_cansleep in probe flow
    - PCI: apple: Probe all GPIOs for availability first
    - PCI: apple: Add support for optional PWREN GPIO
    - PCI: apple: Fix missing OF node reference in apple_pcie_setup_port
    - PCI: apple: Set only available ports up
    - PCI: apple: Move port PHY registers to their own reg items
    - PCI: apple: Drop poll for CORE_RC_PHYIF_STAT_REFCLK
    - PCIE: apple: Add T602x PCIe support
    - PCI: apple: Skip controller port setup for online links
    - PCI: apple: Make link up timeout configurable, default to 500ms
    - PCI: apple: Reorder & improve link-up logic
    - PCI: apple: Log the time it takes for links to come up
    - PCI: apple: Do not power down devices on port setup
    - fixup! PCI: apple: Move port PHY registers to their own reg items
    - fixup! PCI: apple: Probe all GPIOs for availability first
    - PCI: apple: Avoid PERST# deassertion through gpiod initialization
    - squash! PCI: apple: Avoid PERST# deassertion through gpiod initialization
    - xhci-pci: asmedia: Add a firmware loader for ASM2214a chips
    - Revert "nvmem: core: Print error on wrong bits DT property"
    - nvmem: allow bit offset > 8
    - nvmem: round up to word_size
    - WIP: phy: apple: Add Apple Type-C PHY
    - usb: typec: tipd: Clear interrupts first
    - phy: apple: Add DP TX phy driver
    - phy: apple: atc: Split atcphy_dp_configure_lane()
    - phy: apple: atc: Reorder ACIOPHY_CROSSBAR and ACIOPHY_MISC ops
    - phy: apple: atc: Support DisplayPort only operation
    - phy: apple: atc: Support 'set_lanes' in DP mode
    - HACK: phy: apple: atc: Ignore fake submodes
    - phy: apple: atc: support mode switches in atcphy_dpphy_set_mode()
    - phy: apple: dptx: Add debug prints for unexpected values
    - fixup! phy: apple: atc: support mode switches in atcphy_dpphy_set_mode()
    - fixup! WIP: phy: apple: Add Apple Type-C PHY
    - fixup! WIP: phy: apple: Add Apple Type-C PHY
    - phy: apple: atc: Add missing mutex_unlock in error case
    - dt-bindings: dma: apple,sio: Add schema
    - dmaengine: apple-sio: Add Apple SIO driver
    - dmaengine: apple-sio: Fix chan freeing in error path
    - dmaengine: apple-sio: Implement runtime PM
    - fixup! dmaengine: apple-sio: Add Apple SIO driver
    - docs: rust: quick-start: add Ubuntu
    - rust: types: add examples for the `Either` type
    - rust: workqueue: remove unneeded ``#[allow(clippy::new_ret_no_self)]`
    - rust: sort global Rust flags
    - rust: types: avoid repetition in `{As,From}Bytes` impls
    - rust: enable `clippy::undocumented_unsafe_blocks` lint
    - rust: enable `clippy::unnecessary_safety_comment` lint
    - rust: enable `clippy::unnecessary_safety_doc` lint
    - rust: enable `clippy::ignored_unit_patterns` lint
    - rust: enable `rustdoc::unescaped_backticks` lint
    - rust: init: remove unneeded `#[allow(clippy::disallowed_names)]`
    - rust: sync: remove unneeded `#[allow(clippy::non_send_fields_in_send_ty)]`
    - rust: introduce `.clippy.toml`
    - rust: replace `clippy::dbg_macro` with `disallowed_macros`
    - rust: provide proper code documentation titles
    - rust: enable Clippy's `check-private-items`
    - Documentation: rust: add coding guidelines on lints
    - rust: start using the `#[expect(...)]` attribute
    - Documentation: rust: discuss `#[expect(...)]` in the guidelines
    - rust: std_vendor: simplify `{ .. macro! .. }` with inner attributes
    - rust: error: make conversion functions public
    - rust: std_vendor: update dbg macro from Rust upstream
    - rust: lock: add trylock method support for lock backend
    - rust: error: optimize error type to use nonzero
    - rust: kernel: move `FromBytes` and `AsBytes` traits to a new `transmute`
      module
    - rust: alloc: add `Allocator` trait
    - rust: alloc: separate `aligned_size` from `krealloc_aligned`
    - rust: alloc: rename `KernelAllocator` to `Kmalloc`
    - rust: alloc: implement `ReallocFunc`
    - rust: alloc: make `allocator` module public
    - rust: alloc: implement `Allocator` for `Kmalloc`
    - rust: alloc: add module `allocator_test`
    - rust: alloc: implement `Vmalloc` allocator
    - rust: alloc: implement `KVmalloc` allocator
    - rust: alloc: add __GFP_NOWARN to `Flags`
    - rust: alloc: implement kernel `Box`
    - rust: treewide: switch to our kernel `Box` type
    - rust: alloc: remove extension of std's `Box`
    - rust: alloc: add `Box` to prelude
    - rust: alloc: introduce `ArrayLayout`
    - rust: alloc: implement kernel `Vec` type
    - rust: alloc: implement `IntoIterator` for `Vec`
    - rust: alloc: implement `collect` for `IntoIter`
    - rust: treewide: switch to the kernel `Vec` type
    - rust: alloc: remove `VecExt` extension
    - rust: alloc: add `Vec` to prelude
    - rust: error: use `core::alloc::LayoutError`
    - rust: error: check for config `test` in `Error::name`
    - rust: alloc: implement `contains` for `Flags`
    - rust: alloc: implement `Cmalloc` in module allocator_test
    - rust: str: test: replace `alloc::format`
    - rust: alloc: update module comment of alloc.rs
    - kbuild: rust: remove the `alloc` crate and `GlobalAlloc`
    - MAINTAINERS: add entry for the Rust `alloc` module
    - rust: alloc: Fix `ArrayLayout` allocations
    - drm/panic: avoid reimplementing Iterator::find
    - drm/panic: remove unnecessary borrow in alignment_pattern
    - drm/panic: prefer eliding lifetimes
    - drm/panic: remove redundant field when assigning value
    - drm/panic: correctly indent continuation of line in list item
    - drm/panic: allow verbose boolean for clarity
    - drm/panic: allow verbose version check
    - rust: exports: improve grammar in commentary
    - rust: helpers: remove unnecessary header includes
    - rust: page: add Rust version of PAGE_ALIGN
    - rust: init: introduce `Opaque::try_ffi_init`
    - rust: introduce `InPlaceModule`
    - rust: pass module name to `Module::init`
    - rust: implement generic driver registration
    - rust: implement `IdArray`, `IdTable` and `RawDeviceId`
    - rust: add rcu abstraction
    - rust: add `Revocable` type
    - rust: add `dev_*` print macros.
    - rust: add `io::Io` base type
    - rust: add devres abstraction
    - rust: pci: add basic PCI device / driver abstractions
    - rust: pci: implement I/O mappable `pci::Bar`
    - samples: rust: add Rust PCI sample driver
    - rust: of: add `of::DeviceId` abstraction
    - rust: platform: add basic platform device / driver abstractions
    - samples: rust: add Rust platform sample driver
    - rust: drm: ioctl: Add DRM ioctl abstraction
    - rust: Add a Sealed trait
    - rust: drm: add driver abstractions
    - rust: drm: add device abstraction
    - rust: drm: add DRM driver registration
    - rust: drm: file: Add File abstraction
    - rust: drm: gem: Add GEM object abstraction
    - rust: pci: device: s/from_raw/get_device/
    - rust: platform: device: s/from_raw/get_device/
    - rust: allocator: Disable clippy::undocumented_unsafe_blocks lint
    - rust: alloc: kbox: Add CoerceUnsized trait
    - rust: alloc: Vec: Implement .clear()/.truncate()
    - rust: alloc: vec: Add TryFrom trait
    - rust: alloc: vec: Import .drain() / Drain from rust library
    - rust: str: allow dereferencing BStr in a const ctx
    - rust: Enable type_alias_impl_trait
    - rust: kernel: lock: Add Lock::pin_init()
    - rust: init: Implement Zeroable::zeroed()
    - rust: init: Support type paths in pin_init!() and friends
    - rust: types: Add Opaque::zeroed()
    - rust: Use absolute paths to build Rust objects
    - rust: kernel: Add simple siphash abstraction
    - rust: sync: Add dummy LockClassKey implementation for !CONFIG_LOCKDEP
    - rust: sync: Replace static LockClassKey refs with a pointer wrapper
    - fixup! rust: sync: Replace static LockClassKey refs with a pointer wrapper
    - rust: sync: Implement dynamic lockdep class creation
    - fixup! rust: sync: Implement dynamic lockdep class creation
    - rust: sync: Classless Lock::new() and pin_init()
    - fixup! rust: sync: Classless Lock::new() and pin_init()
    - rust: init: Update documentation for new mutex init style
    - rust: sync: Add LockdepMap abstraction
    - WIP: rust: kernel: sync: lockdep.rs Box/Vec fixes
    - rust: sync: arc: Add lockdep integration
    - rust: time: New module for timekeeping functions
    - rust: xarray: Add an abstraction for XArray
    - rust: io_pgtable: Add io_pgtable abstraction
    - rust: soc: apple: rtkit: Add Apple RTKit abstraction
    - fixup! rust: soc: apple: rtkit: Add Apple RTKit abstraction
    - fixup! rust: soc: apple: rtkit: Add Apple RTKit abstraction
    - *RFL import: kernel::types::Bool
    - *RFL import: kernel::io_buffer
    - fixup! *RFL import: kernel::io_buffer
    - rust: io_buffer: Disable clippy::undocumented_unsafe_blocks lint
    - *RFL import: kernel::user_ptr
    - fixup! *RFL import: kernel::user_ptr
    - rust: user_ptr: Disable clippy::undocumented_unsafe_blocks lint
    - MISSING SIGNOFFS: rust: Add PAGE_SIZE constant to kernel crate
    - *RFL import: kernel::module_param
    - fixup! *RFL import: kernel::module_param
    - rust: module_param: Tolerate a trailing newline when parsing
    - rust: module_param: Disable clippy::undocumented_unsafe_blocks lint
    - *RFL import: kernel::delay
    - rust: of: Add OF node abstraction
    - fixup! rust: of: Add OF node abstraction
    - rust: Fix x86 build
    - rust: of: Add parse_phandle_by_name()
    - HACK: rust: of: add as_raw()
    - *RFL import: kernel::io_mem
    - rust: platform: add `ioremap_resource` and `get_resource` methods
    - fixup! rust: platform: add `ioremap_resource` and `get_resource` methods
    - rust: kernel: platform: Add Device.set_dma_masks()
    - fixup! rust: kernel: platform: Add Device.set_dma_masks()
    - rust: Add ioremap_np support to io_mem & friends
    - rust: platform: Add platform::Device::get_device()
    - *RFL import: macros::module params functionality & deps
    - Revert "rust: remove `params` from `module` macro example"
    - rust: macros: module: Functionally revert commit 7044dcff8301
    - rust: block: rnull: Adapt to asahi's rust base branch
    - *RFL import: Rest of kernel::error::code::*
    - rust: bindings: Add resource_size wrapper
    - rust: Allow feature allocator_api
    - rust: Add missing impl_trait_in_assoc_type feature
    - rust: bindgen: Exclude list functions with unsupported ABIs
    - *RFL import: kernel::KParamGuard & friends
    - rust: init: Add default() utility function
    - rust: init: Disable clippy::undocumented_unsafe_blocks lint
    - rust: init: macros: Disable clippy::undocumented_unsafe_blocks lint
    - rust: print: Disable clippy::undocumented_unsafe_blocks lint
    - kernel: str: Add/fix SAFETY comments
    - rust: kernel: workqueue: Disable clippy::undocumented_unsafe_blocks lint
    - rust: Enable clippy::undocumented_unsafe_blocks lint
    - rust: Add time_namespace helpers
    - rust: add unstable feature associated_type_defaults
    - rust: alloc: kbox: Add AsRef implementation to Box
    - rust: alloc: Add .resize() to Vec
    - rust: device: Add Device::parent()
    - rust: Only export module id tables if building as module
    - rust: Add helper for memcpy_toio
    - rust: add dma pool and coherent allocator
    - rust: helpers: Add dma_mapping_error() helper
    - WIP: drm/apple: Add DCP display driver
    - drm: apple: Relicense DCP driver as dual MIT / GPL v2.0
    - drm/apple: Start coprocessor on probe
    - HACK: drm/apple: avoid DCP swaps without attached surfaces
    - drm/apple: Use a device tree defined clock for dcpep_cb_get_frequency
    - drm/apple: Fix rt_bandwidth for t600x
    - drm/apple: Add nop sr_set_uint_prop callback for t600x-dcp
    - drm/apple: Reference only swapped out framebuffers
    - drm/apple: Use "apple,asc-dram-mask" for rtkit iovas
    - drm/apple: Implement suspend/resume for DCP
    - drm/apple: dcp: fix TRAMPOLINE_IN macro
    - drm/apple: Switch to nonblocking commit handling
    - drm/apple: Log callbacks with their tag as debug output
    - drm/apple: Add DCP interface definitions used on t600x
    - drm/apple: Clear used callback/cookie on dcp_ack
    - drm/apple: Add t600x support
    - drm/apple: toggle power only when active state changes
    - drm/apple: Add somewhat useful debug prints
    - drm/apple: Add less tons of questionable debug prints
    - drm/apple: implement read_edt_data
    - drm/apple: clear callback's output data
    - drm/apple: Support memory unmapping/freeing
    - WIP: drm/apple: Change the way to clear unused surfaces
    - drm/apple: laod piodma dev via explicit phandle
    - drm/apple: Fix kzalloc in dcp_flush()
    - drm/apple: Allow modesets even when disconnected
    - drm/apple: Mark the connecter on init only with modes as connected
    - drm/apple: make note about drm.mode_config.max_width/height
    - drm/apple: Split dcpep/iomfb out of dcp.c
    - WIP: add header test target copied from i915
    - gpu: drm: apple: Use connector types from devicetree
    - drm: apple: Fix connector state on devices with integrated display
    - drm: apple: Replace atomic refcount with kref
    - gpu: drm: apple: Start using tracepoints
    - gpu: drm: apple: Unbreak multiple DCP plane <-> crtc matching
    - gpu: drm: apple: Add support for DRM_FORMAT_XRGB2101010
    - gpu: drm: apple: Add apple_drm_gem_dumb_create()
    - gpu: drm: apple: Reject modes without valid color mode
    - gpu: drm: apple: Convert 2 non-assert WARN()s to dev_err()
    - gpu: drm: apple: Send an disconnected hotplug event on ASC crash
    - gpu: drm: apple: Add dcp_crtc_atomic_check
    - gpu: drm: apple: Fix DCP run time PM
    - gpu: drm: apple: Fix DCP initialisation
    - gpu: drm: apple: Specify correct number of DCP*s for drm_vblank_init
    - gpu: drm: apple: Remove other framebuffers before DRM setup
    - gpu: drm: apple: Support opaque pixel formats
    - gpu: drm: apple: Provide notch-less modes
    - gpu: drm: apple: Fix shutdown of partially probed dcp
    - gpu: drm: apple: Set maximal framebuffer size correctly
    - gpu: drm: apple: Prevent NULL pointer in dcp_hotplug
    - gpu: drm: apple: Update date last update
    - gpu: drm: apple: iomfb: Use FIELD_{GET,PREP}
    - gpu: drm: apple: iomfb: Unify call and callback channels
    - gpu: drm: apple: "match" PMU/backlight services on init
    - gpu: drm: apple: Brightness control via atomic commits
    - HACK: gpu: drm: apple: j314/j316: Ignore 120 Hz mode for integrated display
    - drm/apple: Fix suspend/resume handling
    - gpu: drm: apple: Avoid drm_fb_dma_get_gem_addr
    - drm/apple: register backlight device after IOMFB start
    - drm/apple: Add trace point for display brightness
    - drm/apple: Implement drm_crtc_helper_funcs.mode_fixup
    - drm/apple: Read display dimensions from devicetree
    - drm/apple: Wait for power on request to complete synchronously
    - drm/apple: Remove obsolete ignore_swap_complete
    - drm/asahi: Fix backlight restores on non-microLED devices
    - drm/apple: Schedule backlight update on enable_backlight_message_ap_gated
    - drm/apple: Report "PMUS.Temperature" only for mini-LED backlights
    - drm/apple: Check if DCP firmware is supported
    - drm/apple: Disable fake vblank IRQ machinery
    - gpu: drm: apple: Parse color modes completely
    - gpu: drm: apple: Skip parsing elements of virtual timing modes
    - gpu: drm: apple: Add tracing for color and timing modes
    - gpu: drm: apple: Prefer SDR color modes
    - gpu: drm: apple: Add IOMobileFramebufferAP::get_color_remap_mode
    - gpu: drm: apple: reenable support for {A,X}RGB2101010
    - gpu: drm: apple: Add show_notch module parameter
    - Revert "gpu: drm: apple: reenable support for {A,X}RGB2101010"
    - drm/apple: Enable 10-bit mode & set colorspace to native
    - gpu: drm: apple: Clear all surfaces on startup
    - drm/apple: Update swap handling
    - gpu: drm: apple: Use drm_aperture_remove_conflicting_framebuffers
    - drm/apple: Use drm_module_platform_driver
    - drm/apple: Allocate drm objects according to drm's expectations
    - gpu: drm: apple: Use components to avoid deferred probing
    - gpu: drm: apple: Wait for iomfb initialization
    - drm/apple: simplify IOMFB_THUNK_INOUT
    - drm/apple: Fix parse_string() memory leaks
    - drm/apple: Fix bad error return
    - drm/apple: Set backlight level indirectly if no mode is set
    - drm/apple: Use backlight_get_brightness()
    - drm/apple: Move panel options to its own sub-struct
    - drm/apple: Align buffers to 16K page size
    - drm/apple: purge unused dcp_update_notify_clients_dcp
    - drm/apple: Add callbacks triggered by last_client_close_dcp()
    - drm/apple: Add support for the macOS 13.2 DCP firmware
    - drm/apple: ignore surf[3] in clear swap calls
    - drm/apple: Support color transformation matrices
    - drm/apple: Drop unsupported DRM_FORMAT_ARGB2101010
    - dcp: Allow unused trampolines
    - dcp: Add get_tiling_state
    - dcp: 42-bit DMA masks
    - dcp: T602X bwreq support
    - dcp: Warn if DMA mapping fails
    - WIP: drm/apple: Port to incompatible V13.3 firmware interface
    - drm/apple: Remove simpledrm framebuffer before DRM device alloc
    - drm/apple: Mark DCP as being in the wakeup path
    - drm: apple: iomfb: Increase modeset timeout to 2.5 seconds
    - drm: apple: Only match backlight service on DCP with panel
    - drm: apple: iomfb: limit backlight updates to integrated panels
    - drm: apple: backlight: avoid updating the brightness with a commit
    - drm/apple: Get rid of the piodma dummy driver
    - drm/apple: Use iommu domain for piodma maps
    - drm: apple: Align PIODMA buffers to SZ_16K
    - drm: apple: Add D129 allocate_bandwidth iomfb callback
    - drm: apple: Update supported firmware versions to 12.3 and 13.5
    - drm: apple: dcp: Port over to DEFINE_SIMPLE_DEV_PM_OPS
    - drm: apple: dcp: Remove cargo-culted devm_of_platform_populate
    - drm: apple: iomfb: implement abort_swaps_dcp
    - drm: apple: iomfb: Increase modeset tiemout to 8.5 seconds
    - drm: apple: Remove explicit asc-dram-mask handling
    - mux: apple DP xbar: Add Apple silicon DisplayPort crossbar
    - mux: apple dp crossbar: Support t8112 varient
    - mux: apple dp crossbar: FIFO_RD_UNK_EN seems to use 2 bits per dispext*
    - mux: apple dp crossbar: Read UNK_TUNABLE before and after writing it
    - mux: apple dp crossbar: Support t602x DP cross bar variant
    - gpu: drm: apple: Add utility functions for matching on dict keys
    - gpu: drm: apple: Add 'parse_blob'
    - gpu: drm: apple: Add sound mode parsing
    - drm: apple: DCP AFK/EPIC support
    - drm: apple: afk: Use linear array of services
    - drm: apple: Add DPTX support
    - drm: apple: Move offsets for rt_bandwidth callback to DT
    - drm: apple: iomfb: Do not match/create PMU service for dcpext
    - drm: apple: afk: Adapt to macOS 13.3 firmware
    - drm: apple: dptx: Port APCALL to macOS 13.3 firmware
    - drm: apple: dptx: port interface to macOS 13.5 firmware
    - drm: apple: dptx: Add set_active_lanes APCALL
    - drm: apple: dptx: Add DPTX_APCALL_ACTIVATE
    - drm: apple: dptx: Adapt dptxport_connect() to observed behavior
    - drm: apple: afk: Clear commands before sending them
    - drm: apple: Fix missing unlock path in dcp_dptx_connect
    - drm: apple: dptxep: Fix reply size check
    - drm: apple: dptxep: Implement drive settings stuff
    - drm/apple: Add missing sound Kconfig dependencies
    - drm: apple: HACK: Do not delete piodma platform device
    - drm: apple: afk: Update read pointer before processing message
    - drm: apple: Implement D592 callback
    - drm: apple: Keep information at which swap_id fb are still referenced
    - Revert "drm: apple: iomfb: Do not match/create PMU service for dcpext"
    - drm: apple: dptx: Implement APCALL_DEACTIVATE and reset the phy
    - drm: apple: Disconnect dptx When the CRTC is powered down
    - drm: apple: dptx: Wait for completion of dptx_connect.
    - drm: apple: HPD: Only act on connect IRQs
    - drm: apple: iomfb: Improve hotplug related logging
    - drm: apple: Extract modeset crtc's atomic_flush()
    - drm: apple: dptx: Log connect/disconnect calls
    - drm: apple: Move modeset into drm_crtc's atomic_enable
    - drm: apple: Fix DPTX hotplug handling
    - drm: apple: iomfb: Use drm_kms_helper_connector_hotplug_event
    - drm : apple: iomfb: Handle OOB ASYNC/CB context
    - drm: apple: iomfb: Extend hotplug/mode parsing logging
    - drm: apple: Adjust startup sequence and timing for dptx
    - drm: apple: dcp: Fix resume with DPTX based display outputs
    - drm: apple: Be less noisy about teardown notifies without service
    - drm: apple: dptx: Wait for link config on connect
    - drm: apple: Prefer RGB SDR modes
    - drm: apple: iomfb: Always parse DisplayAttributes
    - drm: apple: parser: constify parser data
    - drm: apple: epic: Pass full notfiy/report payload to handler
    - drm: apple: epic: systemep: Parse "mNits" log events
    - drm: apple: mark local functions static
    - drm/apple: Add missing RTKit Kconfig dependency
    - drm/apple: spelling fixes
    - drm: apple: backlight: force backlight update after resume
    - drm: apple: Fix/remove log messages
    - drm: apple: dptx: Debounce HPD by simple msleep()
    - drm: apple: Add Kconfig option for audio
    - drm: apple: iomfb: export property dicts in connector debugfs
    - gpu: drm: apple: Expose injecting of EPIC calls via debugfs
    - gpu: drm: apple: Set up client of AV endpoint
    - drm: apple: av: Support macOS 12.3 and 13.5 firmware APIs
    - drm: apple: av: Do not open AV service from afk receive handler
    - gpu: drm: apple: Add DCP audio driver
    - drm: apple: dptx: Remove DPTX disconnect/connect on init
    - drm: apple: audio: init AV endpoint later
    - drm: apple: av: Use a workqueue
    - drm: apple: audio: move the audio driver into the DCP module
    - drm: apple: audio: Make the DP/HDMI audio driver a full driver
    - drm: apple: audio: Avoid probe errors
    - drm/apple: fix double words in comments
    - drm: apple: backlight: release lock in error path
    - drm: apple: Switch back to drm_atomic_helper_commit_tail_rpm()
    - drm: apple: Fix broken MemDescRelay::release_descriptor callback number
    - drm: apple: Reduce log spam about busy command channel
    - drm: apple: av: Warn only once about failed calls
    - drm: apple: disable HDMI audio by default
    - drm: apple: Override drm_vblank's page flip event handling [HACK]
    - drm/apple: Explicitly stop AFK endpoints on shutdown
    - drm/apple: audio: Create a device link to the DMA device
    - drm/apple: audio: Defer DMA channel acquisition to device open
    - drm/apple: audio: Fix hotplug notifications
    - drm: apple: Add oob hotplug event
    - drm: apple: dptx: Fix get_drive_settings retcode
    - drm: apple: dptxport: get_max_lane_count: Retrieve lane count from phy
    - drm/apple: Fix missing mode init (feel free to squash)
    - drm: apple: iomfb: Align buffer size on unmap/free as well
    - Revert "drm: apple: HACK: Do not delete piodma platform device"
    - drm: apple: afk: Optionally match against EPICName
    - drm: apple: Add dcpav-service-ep
    - drm: apple: iomfb: Provide the EDID as connector property
    - ALSA: Introduce 'snd_interval_rate_bits'
    - fixup! mux: apple dp crossbar: Support t602x DP cross bar variant
    - fixup! mux: apple dp crossbar: Support t602x DP cross bar variant
    - fixup! mux: apple dp crossbar: Support t602x DP cross bar variant
    - fixup! mux: apple dp crossbar: Support t602x DP cross bar variant
    - drm: apple: Enable EDID support by default
    - fixup! drm/apple: audio: Create a device link to the DMA device
    - drm: apple: audio: Implement runtime PM support
    - fixup! mux: apple dp crossbar: Support t602x DP cross bar variant
    - drm: apple: Add CRTC CRC support
    - drm: apple: Add .get_scanout_buffer for drm_panic support
    - drm: apple: respect drm_plane_state zpos
    - drm: apple: constrain swaps to maximum blendable surfaces
    - drm: apple: reject plane commit if it will crash DCP
    - drm: apple: add support for overlay planes
    - drm: apple: use correct min/max plane scaling factors
    - drm: apple: warn about broken sw cursor fallback
    - drm: apple: make plane zpos immutable
    - fixup! drm: apple: add support for overlay planes
    - drm: apple: refactor apple_plane_atomic_check
    - drm: apple: Use dest rct in offscreen test
    - iommu/io-pgtable: Add Apple UAT variant format
    - iommu/io-pgtable: Hack in FW-RW/GPU-RO mode into UAT io_pgtable
    - rust: io_pgtable: Add the Apple UAT format abstraction
    - fixup! rust: io_pgtable: Add the Apple UAT format abstraction
    - rust: dma_fence: Add DMA Fence abstraction
    - fixup! rust: dma_fence: Add DMA Fence abstraction
    - rust: helpers: Add bindings/wrappers for dma_resv
    - drm/gem-shmem: Export VM ops functions
    - rust: drm: gem: shmem: Add DRM shmem helper abstraction
    - fixup! rust: drm: gem: shmem: Add DRM shmem helper abstraction
    - rust: drm: device: Convert Device to AlwaysRefCounted
    - fixup! rust: drm: device: Convert Device to AlwaysRefCounted
    - rust: drm: gem: Allow pinning GEM object driver data
    - rust: drm: mm: Add DRM MM Range Allocator abstraction
    - fixup! rust: drm: mm: Add DRM MM Range Allocator abstraction
    - rust: drm: syncobj: Add DRM Sync Object abstraction
    - drm/scheduler: Fix UAF in drm_sched_fence_get_timeline_name
    - rust: drm: sched: Add GPU scheduler abstraction
    - fixup! rust: drm: sched: Add GPU scheduler abstraction
    - drm/gem: Add a flag to control whether objects can be exported
    - rust: drm: gem: Add set_exportable() method
    - drm/shmem-helper: Add lockdep asserts to vmap/vunmap
    - drm/scheduler: Clean up jobs when the scheduler is torn down.
    - rust: drm: sched: Use &mut for ArmedJob.fences()
    - drm/gpuvm: Add drm_gpuvm_bo_unmap()
    - rust: drm: Add GPUVM Manager abstraction
    - fixup! rust: drm: Add GPUVM Manager abstraction
    - HACK: rust: drm: device: Add device initialization without data
    - HACK: rust: drm: device: Add pointless device() method
    - rust: drm: gem: shmem: Add share_dma_resv() function
    - rust: macros: Add versions macro
    - drm/asahi: Add the Asahi driver UAPI
    - fixup! drm/asahi: Add the Asahi driver UAPI
    - rust: bindings: Bind the Asahi DRM UAPI
    - drm/asahi: Add the Asahi driver for Apple AGX GPUs
    - fixup! drm/asahi: Add the Asahi driver for Apple AGX GPUs
    - DO NOT MERGE: drm/asahi: Add an experimental UAPI extension
    - drm/asahi: render: Implement unknown value UAPI extension
    - drm/asahi: hw,initdata: Initdata fixes for G14S
    - drm/asahi: hw: Drop max_dies
    - fixup! drm/asahi: hw: Drop max_dies
    - drm/asahi: initdata: Fix ver_info for G13 V13.5
    - drm/asahi: fw/channels: Identify subpipe (?) field in tvb ack
    - drm/asahi: fw/channels: Document more message types a bit
    - drm/asahi: initdata: Fix 13.5 field position for G13X
    - drm/asahi: initdata: Document more stuff
    - drm/asahi: fw/microseq: Document bits of has_attachments
    - drm/asahi: hw/t600x: Expand some mappings
    - drm/asahi: hw/t8112: Make last IOMapping read-only
    - drm/asahi: render: Correct some values for G14
    - drm/asahi: initdata: Initialize GpuStatsFrag properly
    - drm/asahi: slotalloc: Allow initializing empty slots
    - drm/asahi: fw.channels: Add static assertions for message sizes
    - drm/asahi: hw.t602x: Fixes for t6022
    - drm/asahi: regs: Fix cluster count for G14D
    - drm/asahi: Enable probing for t6022
    - drm/asahi: Increase recursion limit
    - drm/asahi: initdata: Fixes for G14D
    - drm/asahi: initdata,hw: Identify & set idle_off_standby_timer
    - drm/asahi: initdata: Fudge t3 calculation a bit
    - drm/asahi: gpu,hw: Fix array IOMappings
    - drm/asahi: hw/t602x: Increase meta/preempt sizes for G14D
    - drm/asahi: Expose firmware version to userspace
    - fixup! drm/asahi: Expose firmware version to userspace
    - drm/asahi: alloc: Support tagging array allocs
    - drm/asahi: alloc: Use tag as the guard marker
    - fixup! drm/asahi: alloc: Use tag as the guard marker
    - drm/asahi: buffer: Add tags to all the buffers
    - drm/asahi: initdata: Tag more arrays
    - drm/asahi: queue/compute: Tag preempt buf
    - drm/asahi: render: Tag AuxFB
    - drm/asahi: workqueue: Tag GPU buf
    - drm/asahi: buffer,render: Identify and provide layer meta buf
    - drm/asahi: compute: Implement bindless samplers
    - drm/asahi: render: Implement bindless samplers
    - drm/asahi: fw,queue: Implement helper programs
    - drm/asahi: render: Identify and set Z/S strides for layered rendering
    - drm/asahi: queue: Quieten some debugs
    - drm/asahi: Add verbose UAPI error reporting
    - drm/asahi: file: Remove sync limit
    - drm/asahi: render: Remove sync TVB growth support
    - drm/asahi: buffer: Complain more loudly about sync requests
    - drm/asahi: Identify & add render VS spills flag
    - drm/asahi: Identify and allocate clustered layering metadata buf
    - drm/asahi: Fix Clippy complaints
    - drm/asahi: render: Fix layered rendering on G14X
    - drm/asahi: render, buffer: Fix layered rendering on G13X (again)
    - drm/asahi: initdata: New init chain API for rebase
    - fixup! drm/asahi: initdata: New init chain API for rebase
    - drm/asahi: workqueue: Work around ICE in Rust 1.74
    - drm/asahi: queue: Alocate the NotifierList as shared
    - drm/asahi: compute: Allow no preemption flag
    - drm/asahi: Identify and implement helper config register
    - drm/asahi: Check command structure sizes
    - drm/asahi: alloc: Do not allocate memory to free memory
    - fixup! drm/asahi: alloc: Do not allocate memory to free memory
    - drm/asahi: microseq: Fix warnings
    - drm/asahi: Don't lock up when unmapping PTEs fails
    - fixup! drm/asahi: Don't lock up when unmapping PTEs fails
    - drm/asahi: Convert to GPUVM and implement more VM_BIND ops
    - fixup! drm/asahi: Convert to GPUVM and implement more VM_BIND ops
    - drm/asahi: Refactor address types
    - drm/asahi: util: Add RangeExt helpers for Range<T>
    - drm/asahi: mmu: Convert to using Range
    - drm/asahi: Move the unknown dummy page to the top of the address space
    - drm/asahi: Convert more ranges to Range<>
    - fixup! drm/asahi: Convert more ranges to Range<>
    - drm/asahi: mmu: Fix lockdep issues with GpuVm
    - drm/asahi: Implement GEM objects sharing a single DMA resv
    - drm/asahi: queue: Split into Queue and QueueInner
    - drm/asahi: workqueue: Tweak some debug logs
    - fixup! drm/asahi: run rustfmt
    - drm/asahi: file: Update to newer VM_BIND API
    - fixup! drm/asahi: file: Update to newer VM_BIND API
    - drm/asahi: Signal soft fault support to userspace
    - drm/asahi: Enable soft faults by default
    - drm/asahi: Fix u32 mult overflow on large tilebufs/TPCs
    - drm/asahi: Workqueue: Add more debug
    - drm/asahi: Fix event tracking when JobSubmission is dropped
    - drm/asahi: gpu: Show unknown field in timeouts
    - fixup! drm/asahi: gpu: Show unknown field in timeouts
    - FIXUP: drm/asahi: firmware fixes
    - drm/asahi: Handle channel errors
    - fixup! drm/asahi: Handle channel errors
    - drm/asahi: event: Initialize stamps to different values
    - drm/asahi: workqueue,queue: More debug
    - fixup! drm/asahi: workqueue,queue: More debug
    - drm/asahi: workqueue: Fix "Cannot submit, but queue is empty?" bug
    - drm/asahi: Clean up jobs in a workqueue
    - fixup! drm/asahi: Clean up jobs in a workqueue
    - drm/asahi: Add robust_isolation kernel parameter
    - FIXUP: drm/asahi: firmware fixes 2
    - drm/asahi: HACK: Disable compute preemption for now
    - drm/asahi: Align kernel range to buffer::PAGE_SIZE
    - drm/asahi: Implement missing ASAHI_BIND_OP_UNBIND
    - drm/asahi: Implement ASAHI_GET_TIME
    - drm/asahi: Modify debug dev printk macros to avoid adding ".as_ref()"
    - drm/asahi: gpu: Force Box move with manual Box<T>::into_inner()
    - drm/asahi: gpu: Get resources directly through DRM pricate data
    - drm/asahi: mmu: Move closer to rust of integration
    - drm/asahi: regs: Get device ref from platform dev
    - drm/asahi: driver: Port to new device/driver registration
    - drm/asahi: gpu: Collect garbage for private/gpuro together
    - drm/asahi: alloc: Be more verbose about failures
    - drm/asahi: gpu: Add a max object count garbage limit
    - fixup! drm/asahi: Implement ASAHI_GET_TIME
    - fixup! drm/asahi: Add the Asahi driver UAPI
    - fixup! drm/asahi: Add the Asahi driver UAPI
    - fixup! drm/asahi: Add the Asahi driver UAPI
    - fixup! drm/asahi: Add the Asahi driver UAPI
    - fixup! drm/asahi: Implement ASAHI_GET_TIME
    - drm/asahi: Document timestamp ops better, refactor fields
    - fixup! drm/asahi: Add the Asahi driver UAPI
    - drm/asahi: alloc: Remove unused methods
    - drm/asahi: workqueue: Restrict command objects to only job commands
    - drm/asahi: driver: Silence unused field warning
    - drm/asahi: gpu: Remove unused wait_for_poweroff()
    - drm/asahi: util: Commend out unused len() method
    - drm/asahi: gpu: Implement mapping timestamp buffers
    - drm/asahi: file: Implement ASAHI_GEM_BIND_OBJECT
    - drm/asahi: fw, queue: Add UserTimestamp object to job structs
    - drm/asahi: queue: Plumb through objects XArray and add timestamp getter
    - drm/asahi: fw, queue: Plumb through UserTimestamps -> TimestampPointers
    - drm/asahi: queue/render,compute: Handle cmdbuf size mismatches
    - drm/asahi: queue/render,compute: Plumb through timestamps extension
    - drm/asahi: file: Add user_timestamp_frequency_hz to params
    - drm/asahi: Set a bit for internal non-render barriers on G14X
    - fixup! drm/asahi: Add the Asahi driver UAPI
    - drm/asahi: Add the USER_TIMESTAMPS feature
    - drm/asahi: Map all reserved-regions as cached
    - rust: drm/gpuvm: Take &GpuVmBo<T> for map_and_link_va()
    - rust: drm/gpuvm: Pass vm_bo explicitly to step_remap()
    - rust: drm/gpuvm: bo_unmap() should take &GpuVmBo<T>, not ARef.
    - drm/asahi: mmu: Change step_remap() to new api
    - prctl: Introduce PR_{SET,GET}_MEM_MODEL
    - arm64: Implement PR_{GET,SET}_MEM_MODEL for always-TSO CPUs
    - arm64: Introduce scaffolding to add ACTLR_EL1 to thread state
    - arm64: Implement Apple IMPDEF TSO memory model control
    - KVM: arm64: Expose TSO capability to guests and context switch
    - fixup! arm64: Implement Apple IMPDEF TSO memory model control
    - arm64: cpufeature: Unify SCOPE_LOCAL_CPU early & late behavior
    - fixup! arm64: Implement Apple IMPDEF TSO memory model control
    - fixup! arm64: Implement PR_{GET,SET}_MEM_MODEL for always-TSO CPUs
    - fixup! KVM: arm64: Expose TSO capability to guests and context switch
    - gpu: drm: adp: Add Apple Display Pipe driver
    - gpu: drm: adp: Add a backlight driver for the Summit LCD
    - MAINTAINERS: Add entries for touchbar display driver
    - gpu: drm: adp: Refuse X* as client in open()
    - gpu: drm: adp: base the max framebuffer width and height on screen size
    - dt-bindings: input: touchscreen: Add Z2 controller bindings.
    - input: apple_z2: Add a driver for Apple Z2 touchscreens
    - MAINTAINERS: Add entries for Apple Z2 touchscreen driver
    - gpu: drm: adp: Use 16-bit writes for brightness
    - gpu: drm: adp: Allow max brightness to be set via device tree
    - fixup! gpu: drm: adp: Add Apple Display Pipe driver
    - fixup! input: apple_z2: Add a driver for Apple Z2 touchscreens
    - fixup! input: apple_z2: Add a driver for Apple Z2 touchscreens
    - media: apple: Add Apple ISP driver
    - media: apple: isp: IMX558 initial support
    - media: apple: isp: Use preallocated heap
    - media: apple: isp: Fixup shared region arg
    - media: apple: isp: Enable t6000
    - media: apple: isp: Split gpio/mbox MMIO range
    - media: apple: isp: Drop the DART mirroring stuff
    - media: apple: isp: Do not defer on failure to initialize DART
    - media: apple: WIP: t6000 hax
    - media: apple: isp: Set platform_id in bootargs
    - media: apple: isp: Better document info struct fields
    - media: apple: isp: Don't use define for bootargs size
    - media: apple: isp: wmb() before GPIO write
    - media: apple: isp: s/asc/coproc/
    - media: apple: isp: rm unused bootargs members
    - media: apple: isp: rm old isp_resv struct
    - media: apple: isp: misc isp-fw.c improvements
    - media: apple: isp: alloc static surfaces only once
    - media: apple: isp: fix copyright
    - media: apple: isp: Support >32bit VAs for t602x
    - media: apple: isp: t602x hw config
    - media: apple: isp: Working t602x and multiple formats and more fixes
    - media: apple: isp: Always enable singleplane API, make multiple a module
      param
    - media: apple: isp: Switch to threaded IRQs
    - media: apple: isp: Remove ioread/iowrite and stop doing raw address
      translation
    - media: apple: isp: Propagate EINTR from firmware loads
    - media: apple: isp: Implement posted commands
    - media: apple: isp: Add STOP and POWER_DOWN commands
    - media: apple: isp: Maybe fix some DMA ordering issues
    - media: apple: isp: Make channel sends not interruptible
    - media: apple: isp: Use a second region for MBOX_IRQ_{DOORBELL,ACK}
    - media: apple: isp: t8112 HW config
    - media: apple: isp: Limit maximal number of buffers
    - media: apple: isp: t8112 fixes...
    - media: apple: isp: Add flicker_sensor_set cmd
    - media: apple: isp: Minor changes to cam flow
    - media: apple: isp: Make sub-pmdomain handling explicit
    - media: apple: isp: Zero out pages allocated to ISP
    - media: apple: isp: Use cached IOMMU mappings
    - media: apple: isp: Rework meta surface handling & buffer return
    - media: apple: isp: Clear IRQs when resetting coproc
    - media: apple: isp: Add a missing read barrier (possibly?)
    - media: apple: isp: VMap only what is necessary, remove redundant logging
      state bit
    - media: apple: isp: Only reset coproc when necessary, fix minor race
    - media: apple: isp: Option to use CMD_STOP (ifdeffed out)
    - media: apple: isp: Use a more user-friendly device name
    - media: apple: isp: Parse firmware version from device tree
    - media: apple: isp: Show camera presets even for unsupported sensors
    - media: apple: isp: Enable IMX364 sensor
    - media: apple: isp: implement ENUM_FRAMEINTERVALS trivially
    - media: apple: isp: Use a mutex instead of a spinlock for channels
    - media: apple: isp: Support system sleep
    - fixup! media: apple: isp: Working t602x and multiple formats and more fixes
    - fixup! media: apple: isp: Working t602x and multiple formats and more fixes
    - rust: WIP(?): Various bits of rust glue for AOP series
    - soc: apple: Add support for the AOP co-processor.
    - ASoC: apple: Add aop_audio driver.
    - iio: common: Add AOP sensor drivers.
    - rust: soc: apple: Add Apple mailbox abstractions
    - soc: apple: Add SEP driver.
    - rust: bindgen: Make snd_dec_flac opaque
    - fixup! ASoC: apple: Add aop_audio driver.
    - Revert "Add 'asahi' localversion to 05-asahi.localversion"
    - Asahi patchset asahi-6.12.8-1

 -- Vinicius Peixoto <vinicius.peixoto@canonical.com>  Sat, 04 Jan 2025 13:40:05 -0300

linux-asahi-arm (6.12.0-1001.1) plucky; urgency=medium

  * Packaging resync (LP: #1786013)
    - [Packaging] resync git-ubuntu-log
    - [Packaging] debian.asahi-arm/dkms-versions -- update from kernel-versions
      (main/d2023.05.29)

  * Miscellaneous Ubuntu changes
    - [Packaging] asahi-arm: Removing unncessary copy-files script
    - [Packaging] asahi-arm: Sort build dependencies alphabetically
    - [Packaging] asahi-arm: Add list of used source files to buildinfo package
    - [Config] asahi-arm: Updating configs from 6.12

  * Miscellaneous upstream changes
    - arm64: dts: apple: t8112: Remove always-on from the PMP node
    - arm64: dts: apple: t8112: Add wlan/bt PCIe device nodes
    - arm64: dts: apple: t8112: Add PMU NVMEM and SMC RTC/reboot nodes
    - arm64: dts: apple: t8112-j493: Add spi3 node
    - arm64: dts: apple: t8112: Add SMC node to devicetree
    - arm64: dts: apple: t8112*: Put in audio nodes
    - arm64: dts: apple: t8112: Add dwc3 nodes
    - arm64: dts: apple: t8112: Add mtp device nodes for j413/j493
    - arm64: dts: apple: t8103: Add dwc3 nodes
    - arm64: dts: apple: t8103: Add spi3/keyboard nodes
    - arm64: dts: apple: Add PCI power enable GPIOs
    - arm64: dts: apple: Add SMC node to t8103/t6001 devicetrees
    - arm64: dts: apple: Add PMU NVMEM and SMC RTC/reboot nodes
    - arm64: dts: apple: Mark ATC USB AON domains as always-on
    - arm64: dts: apple: Keep PCIe power domain on
    - arm64: dts: apple: Add SMC node to t600x devicetrees
    - arm64: dts: apple: Add PMU NVMEM and SMC RTC/reboot nodes
    - arm64: dts: apple: t6000: Add spi1 node
    - arm64: dts: apple: t600x-j314-j316: Add NOR flash node
    - arm64: dts: apple: t600x: Add spi3 node
    - arm64: dts: apple: j31[46]: Add keyboard nodes
    - arm64: dts: apple: t600x: Add dwc3 nodes
    - arm64: dts: apple: Add WiFi module and antenna properties
    - arm64: dts: apple: Add PCI power enable GPIOs
    - arm64: dts: apple: t8103: Fix spi4 power domain sort order
    - arm64: dts: apple: t600x: Add bluetooth device trees
    - arm64: dts: apple: t8103*: Put in audio nodes
    - arm64: dts: apple: t600x-jxxx: Put in audio nodes
    - arm64: dts: apple: Drop 'integrated audio' from sound models
    - arm64: dts: apple: t6001-j375c: Add USB3 hub GPIO initialization
    - arch: arm64: apple: Add missing power state deps for display
    - arch: arm64: apple: t600x: Mark USB and PCIe as "dma-coherent"
    - arch: arm64: apple: Add display controller related device tree nodes
    - arch: arm64: apple: t600x: Add display controller related device tree nodes
    - arch: arm64: apple: t8103: Add connector type property for DCP*
    - arch: arm64: apple: t600x: Add connector type property for DCP*
    - arm64: dts: apple: t8103: Add eFuses node
    - arm64: dts: apple: t8103: Add ATCPHY node
    - arch: arm64: dts: apple: t6000: Add eFuses node
    - arch: arm64: dts: apple: t600x: Add ATCPHY nodes
    - arch: arm64: apple: Add dcp panel node for t8103 based laptops and imacs
    - arch: arm64: apple: Add dcp panel node for t600x based laptops
    - arm64: dts: apple: t8112: Add eFuses node
    - arm64: dts: apple: t8112: Add ATCPHY nodes
    - arm64: dts: apple: t8112: Add dcp/disp0 nodes
    - scripts/dtc: Add support for floating-point literals
    - arm64: dts: apple: t8103*: Add GPU nodes
    - arm64: dts: Add GPU performance data to t8103.dts
    - arm64: dts: Add power data for t8103
    - arm64: dts: Add t600x GPU nodes
    - arm64: dts: t8103: Add GPU leak coefficients
    - arm64: dts: apple: Add no-map to GPU reserved-memory nodes
    - arm64: dts: apple: Add GPU nodes to T8112
    - arm64: dts: apple: Add GPU firmware versions to t8113/t600x
    - arch: arm64: apple: Add spi1-nvram.dtsi
    - arm64: dts: apple: t600x: Add the NVRAM bindings
    - arm64: dts: apple: t8112: Add the NVRAM bindings
    - arm64: dts: apple: t8103: Add the NVRAM bindings
    - arm64: dts: apple: t600x: Add DCP power domain to missing devices
    - arm64: dts: apple: t8103: Add DCP power domain to missing devices
    - arm64: dts: apple: t8112: Add DCP power domain to missing devices
    - arm64: dts: apple: t8103: Add missing ps_pmp dependency to ps_gfx
    - arm64: dts: apple: t600x: Add "ps_disp0_cpu0" as resets for dcp
    - arm64: dts: apple: t8103: Add "ps_disp0_cpu0" as resets for dcp
    - arm64: dts: apple: t8112: Add "ps_disp0_cpu0" as resets for dcp
    - arm64: dts: apple: j314/j316: Disable ATC3_USB_AON power domain
    - arm64: dts: apple: Add keyboard alias & layout props for t8112 laptops
    - arm64: dts: apple: Fix t600x mca IRQs
    - arm64: dts: apple: Add initial t602x device trees
    - arm64: dts: apple: Add MTP nodes to t6020x
    - arm64: dts: apple: Add identity dma-ranges mapping
    - DO NOT SUBMIT: arm64: dts: apple: t6020-j474s: Add unused PCIe port01
    - arm64: dts: apple: Add pmgr-misc nodes to t60xx
    - arm64: dts: apple: t600x: Remove obsolete comment in ans2 power domain
    - arm64: dts: apple: Make ps_msg always-on
    - arm64: dts: apple: t600x: Enable turbo CPU p-states
    - arm64: dts: apple: t8103: Enable turbo CPU p-states
    - arm64: dts: apple: t8112: Enable turbo CPU p-states
    - arm64: dts: apple: Add T602x GPU node
    - arm64: dts: apple: t600x-j375.dtsi: Add missing etherhet0 alias
    - arm64: dts: apple: Add initial t6022 support
    - arm64: dts: apple: Add j180d (Mac Pro 2023) device tree
    - arm64: dts: apple: t6022: Add APCIE-GE nodes
    - arm64: dts: apple: t8103: Add touchbar screen bindings
    - arm64: dts: apple: Add touchbar display nodes for t8112-j493
    - arm64: dts: apple: t8103: Add touchbar bindings
    - arm64: dts: apple: t8112: Add touchbar digitizer node
    - arm64: dts: apple: Add devicetree for Macbook Air (15-inch, M2, 2023)
    - arm64: dts: apple: t8112-j473: Set GPU base pstate
    - arm64: dts: apple: Share USB-C port node on t6022 devices
    - arm64: dts: apple: t6022: Disable dcp thouroughly
    - arm64: dts: apple: t6020-j474s: Disable dcp until lpdpphy is supported
    - arm64: dts: apple: t602x: Add initial Mac Studio (2023) device trees
    - arm64: dts: apple: t8112-j473: Add dptx-phy power-domain
    - arm64: dts: apple: t6020x: Mark dptx_phy_ps only on laptops always-on
    - arm64: dts: apple: t8112: add opp-microwatt props to avalanche/blizzard
    - arm64: dts: apple: t600x-j375.dtsi: Add spi nor flash and nvram partition
    - arm64: dts: apple: t6022-j180.dtsi: Add spi nor flash and nvram partition
    - arm64: dts: apple: t8103: Add nvram alias
    - arm64: dts: apple: t8112: Add nvram alias
    - arm64: dts: apple: t8103: Add ISP nodes
    - arm64: dts: apple: t6000: Add ISP nodes
    - arm64: dts: apple: t8112: Add ISP nodes
    - arm64: dts: apple: t602x: Add ISP nodes
    - arm64: dts: ISP platform configs
    - arm64: dts: apple: imx248: Add scaled and cropped presets
    - arm64: dts: apple: imx558: Add downscaled resolution presets
    - arm64: dts: apple: t8103-j274: Add speaker I/V sense slots
    - arm64: dts: apple: t600x-j314-j316: Add speaker I/V sense slots
    - arm64: dts: apple: t600x-j314-j316: Zero out unused speaker sense slots
    - arm64: dts: apple: t600x: Mark MCA power states as externally-clocked
    - arm64: dts: apple: t602x: Mark MCA power states as externally-clocked
    - arm64: dts: apple: t8103: Mark MCA power states as externally-clocked
    - arm64: dts: apple: t8112: Mark MCA power states as externally-clocked
    - arm64: dts: apple: t600x-j375: Add I/VMON slots to amp
    - arm64: dts: apple: t600x-j180d: Add I/VMON slots to amps
    - arm64: dts: apple: t8112-j413: Add I/VMON slots to amps
    - arm64: dts: apple: t8112-j415: Add I/VMON slots to amps
    - arm64: dts: apple: t8112-j473: Add I/VMON slots to amp
    - arm64: dts: apple: t8112-j493: Add I/VMON slots to amps
    - arm64: dts: apple: t8103-j293: Add I/VMON slots to amps
    - arm64: dts: apple: t8103-j313: Add I/VMON slots to amps
    - arm64: dts: apple: j314/j316: Enable speakers
    - arm64: dts: apple: j413: Enable speakers
    - arm64: dts: apple: j415: Enable speakers
    - arm64: dts: apple: j375: Add missing speaker amp IRQs
    - arm64: dts: apple: j293: Add missing speaker amp IRQs
    - arm64: dts: apple: j313: Add missing speaker amp IRQs
    - arm64: dts: apple: j413: Add missing speaker amp IRQs
    - arm64: dts: apple: j415: Add missing speaker amp IRQs
    - arm64: dts: apple: j493: Add missing speaker amp IRQs
    - arm64: dts: apple: j413: Model SDZ GPIO as a regulator
    - arm64: dts: apple: t600x-j314-j316: Set sound compatibles per device
    - arm64: dts: apple: j375 & friends: Enable speakers
    - arm64: dts: apple: j293: Enable speakers
    - arm64: dts: apple: j313: Enable speakers
    - arm64: dts: apple: j493: Enable speakers
    - arm64: dts: apple: describe shared SDZ GPIO for tas2764
    - arm64: dts: apple: j293: Model SDZ GPIO as a regulator
    - arm64: dts: apple: j313: Model SDZ GPIO as a regulator
    - arm64: dts: apple: add opp-microwatt to t8103/t600x
    - arm64: dts: apple: Disable ps_isp_sys unless it is used
    - arm64: dts: apple: t600x: Switch to apple,dma-range
    - arm64: dts: apple: t8103: Switch to apple,dma-range
    - arm64: dts: apple: t8112: Switch to apple,dma-range
    - arm64: dts: apple: t600x: Add "apple,min-state" to ps_dispextN_cpu0
    - arm64: dts: apple: t602x: Add "apple,min-state" to ps_dispextN_cpu0
    - arm64: dts: apple: t8103: Add dcpext/dispext0 nodes
    - arm64: dts: apple: t8112: Add dcpext/dispext0 nodes
    - arm64: dts: apple: t600x: Add t6000 dispext device nodes
    - arm64: dts: apple: t602x: Add t6020 dispext device nodes
    - arm64: dts: apple: t8112: Add dptx-phy node
    - arm64: dts: apple: t602x: Add lpdptx-phy node
    - arm64: dts: apple: t600x: Add device nodes for atc DP crossbar
    - arm64: dts: apple: t602x: Add device nodes for atc DP crossbar
    - arm64: dts: apple: t8112-j473: Enable dcp/dptx-phy/dp2hdmi
    - arm64: dts: apple: t6020-j474,t6021-j475: Enable dcp/dptx-phy/dp2hdmi
    - arm64: dts: apple: t6022-{j180,j475}: Enable dcpext0/dptx-phy/dp2hdmi
    - arm64: dts: apple: Fill device node for dp2hdmi on Macbook Pros
    - arm64: dts: apple: j474s/j475c: Use dcpext0 for HDMI out
    - arm64: dts: apple: t8112-j473: Use dcpext for HDMI out
    - fixup! arm64: dts: apple: Add initial t602x device trees
    - fixup! arch: arm64: apple: Add dcp panel node for t600x based laptops
    - fixup! arch: arm64: apple: Add dcp panel node for t8103 based laptops and
      imacs
    - fixup! arm64: dts: apple: t8112: Add dcp/disp0 nodes
    - fixup! arm64: dts: apple: Add devicetree for Macbook Air (15-inch, M2, 2023)
    - fixup! arm64: dts: apple: Add MTP nodes to t6020x
    - arm64: apple: t8103-pmgr: SIO: Add audio, spi and uart power-domains
    - arm64: apple: t8112-pmgr: SIO: Add audio, spi and uart power-domains
    - arm64: apple: t600x: pmgr: SIO: Add audio, spi and uart power-domains
    - arm64: apple: t602x: pmgr: SIO: Add audio, spi and uart power-domains
    - arm64: apple: t8103: Add SIO, DPA nodes; hook up to DCP
    - arm64: apple: t8112: Add SIO, DPA nodes; hook up to DCP
    - arm64: apple: t600x: Move dart_sio* to dieX
    - arm64: apple: t600x: Add sio and dpaudio device nodes
    - arm64: apple: t602x: Add sio and dpaudio device nodes
    - arm64: apple: t60xx: Enable DP/HMI audio nodes on all devices
    - arm64: apple: t60x0/t60x1: Enable sio explicitly
    - arm64: apple: t8103-j274: Enable sio explicitly
    - arm64: apple: t8112-j473: Enable sio explicitly
    - fixup! arm64: dts: apple: t8112: Add PMU NVMEM and SMC RTC/reboot nodes
    - arm64: dts: apple: add common hwmon keys and fans
    - arm64: dts: apple: t8103: Add SMC hwmon sensors
    - arm64: dts: apple: t8112: Add SMC hwmon sensors
    - arm64: dts: apple: t600x-j3xx: Add SMC hwmon sensors
    - arm64: dts: apple: t602x-j4xx: Add SMC hwmon sensors
    - arm64: dts: apple: j474s: correct case of Mac mini
    - MAINTAINERS: Add Apple dwc3 bindings to ARM/APPLE
    - MAINTAINERS: Add apple-spi driver & binding files
    - soc: apple: rtkit: Check for failure to send mgmt messages & log
    - soc: apple: rtkit: Log failure to send messages
    - soc: apple: rtkit: Log failed buffer requests
    - soc: apple: rtkit: Add APPLE_RTKIT_PWR_STATE_INIT
    - soc: apple: rtkit: Implement OSLog buffers properly
    - soc: apple: Add driver for Apple PMGR misc controls
    - cpuidle: apple: Add Apple SoC cpuidle driver
    - soc: apple: rtkit: Add devm_apple_rtkit_free()
    - dt-bindings: power: apple,pmgr-pwrstate: Add force-{disable,reset}
    - soc: apple: pmgr: Add force-disable/force-reset
    - soc: apple: pmgr: Add externally-clocked property
    - soc: apple: rtkit: Use high prio work queue
    - cpuidle: apple: Do not load on unsupported Apple platforms
    - fixup! cpuidle: apple: Do not load on unsupported Apple platforms
    - iommu: Add IOMMU_RESV_TRANSLATED for non 1:1 mapped reserved regions
    - iommu: Parse translated reserved regions
    - iommu/dart: Track if the DART is locked
    - iommu/dart: Allow locked DARTs to probe
    - iommu: apple-dart: Don't attempt to reset/restore locked DARTs
    - iommu/dart: Set DMA domain for locked DARTs
    - iommu/dart: Reject identity domain for locked DARTs
    - iommu/dart: Assert !locked when reconfiguring
    - iommu: apple-dart: Install IOMMU_RESV_TRANSLATED mappings
    - iommu: apple-dart: Link to consumers with blanket RPM_ACTIVE
    - iommu: apple-dart: Enable runtime PM
    - iommu: io-pgtable: Add 4-level page table support
    - iommu: apple-dart: Clear stream error indicator bits for T8110 DARTs
    - iommu: apple-dart: Make the hw register fields u32s
    - iommu: apple-dart: Add 4-level page table support
    - iommu: apple-dart: Support specifying the DMA aperture in the DT
    - iommu: apple-dart: Increase MAX_DARTS_PER_DEVICE to 3
    - iommu: apple-dart: Allow mismatched bypass support
    - iommu: apple-dart: Power on device when handling IRQs
    - iommu: apple-dart: Check for fwspec in the device probe path
    - iommu/of: Free fwspec on probe deferrel
    - tty: serial: samsung_tty: Support runtime PM
    - of: Demote "Bad cell count" to debug message
    - mmc: sdhci-pci: Support external CD GPIO on all OF systems
    - mmc: sdhci-pci: Support setting CD debounce delay
    - PCI: apple: Add depends on PAGE_SIZE_16KB
    - firmware_loader: Add /lib/firmware/vendor path
    - i2c: pasemi: Improve timeout handling and error recovery
    - usb: typec: tipd: Be more verbose about errors
    - Add 'asahi' localversion to 05-asahi.localversion
    - i2c: pasemi: Enable the unjam machine
    - i2c: pasemi: Log bus reset causes
    - driver core: fw_devlink: Add fw_devlink_count_absent_consumers()
    - PM: domains: Add a flag to defer power-off until all consumers probe
    - soc: apple: apple-pmgr-pwrstate: Mark on-at-boot PDs as DEFER_OFF
    - tty: serial: samsung_tty: Mark as wakeup_path on no_console_suspend
    - soc: apple: apple-pmgr-pwrstate: Mark on-at-boot PDs as wakeup
    - HACK: Lol libwebrtc
    - iommu: Only allocate FQ domains for IOMMUs that support them
    - drm/simpledrm: Set DMA and coherency mask
    - x86/insn_decoder_test: allow longer symbol-names
    - arm64: Increase kernel stack size to 32K
    - fixup! tty: serial: samsung_tty: Support runtime PM
    - Increase MAX_LOCKDEP_CHAIN_HLOCKS
    - Revert "arm64: defconfig: Enable LPA2 support"
    - Partial revert "arm64: Enable 52-bit virtual addressing for 4k and 16k
      granule configs"
    - drivers/perf: apple_m1: Add mapping for branch counters
    - dt-bindings: usb: Add Apple dwc3 bindings
    - usb: dwc3: Add support for Apple DWC3
    - usb: dwc3: apple: Do not use host-vbus-glitches workaround
    - usb: dwc3: core: Allow phy suspend during init for role_switch_reset_quirk
    - apple-nvme: defer cache flushes by a specified amount
    - apple-nvme: Release power domains when probe fails
    - apple-nvme: Support coprocessors left idle
    - spi: dt-bindings: apple,spi: Add binding for Apple SPI controllers
    - spi: apple: Add driver for Apple SPI controller
    - ASoC: dt-bindings: Add CS42L84 codec
    - ASoC: cs42l84: Add new codec driver
    - ASoC: cs42l84: leverage ring sense IRQs to correctly detect headsets
    - ASoC: cs42l84: remove incorrect of_match_ptr()
    - ASoC: cs42l84: Remove unused including <linux/version.h>
    - Revert "ASoC: ops: Don't modify the driver's plaform_max when reading state"
    - ASoC: tas2764: Extend driver to SN012776
    - ASoC: tas2764: Add control concerning overcurrent events
    - ASoC: ops: Move guts out of snd_soc_limit_volume
    - ASoC: ops: Enforce platform maximum on initial value
    - ASoC: ops: Accept patterns in snd_soc_limit_volume
    - ASoC: ops: Introduce 'snd_soc_deactivate_kctl'
    - ASoC: ops: Introduce 'soc_set_enum_kctl'
    - ASoC: card: Let 'fixup_controls' return errors
    - dt-bindings: sound: Add Apple Macs sound peripherals
    - ASoC: apple: Add macaudio machine driver
    - ASoC: cs42l42: Fix typo
    - ASoC: cs42l42: Do not advertise sample bit symmetry
    - ASoC: macaudio: Fix headset routes
    - ASoC: dapm: Export new 'graph.dot' file in debugfs
    - ASoC: macaudio: Add j375 fixup_controls
    - ASoC: macaudio: Add j493 fixup_controls
    - ASoC: macaudio: Rename ALSA driver to simple 'macaudio'
    - ASoC: macaudio: Drop the 'inverse jack' speaker stuff
    - ASoC: macaudio: s/Freq/Frequency/ in TAS2764 control
    - ASoC: macaudio: s/void_warranty/please_blow_up_my_speakers/
    - ASoC: macaudio: Gate off experimental platforms
    - ASoC: macaudio: Alias f413 fixups to j314
    - ASoC: apple: mca: Constrain channels according to TDM mask
    - ASoC: macaudio: Improve message on opening of unrouted PCM devices
    - ASoC: macaudio: Add initial j313 fixup_controls
    - ASoC: macaudio: constrain frontend channel counts
    - ASoC: cs42l42: Set a faster digital ramp-up rate
    - ASoC: apple: mca: Move clock shutdown to be shutdown
    - ASoC: macaudio: alias j415 kcontrols to j314
    - ALSA: control: Add kcontrol callbacks for lock/unlock
    - ASoC: macaudio: Condition selecting NCO driver on COMMON_CLK
    - ASoC: macaudio: Tune DT parsing error messages
    - ASoC: apple: mca: Separate data & clock port setup
    - ASoC: apple: mca: Factor out mca_be_get_fe
    - ASoC: apple: mca: Support FEs being clock consumers
    - ASoC: apple: mca: Fix SYNCGEN enable on FE clock consumers
    - ASoC: macaudio: Start speaker sense capture support
    - ASoC: macaudio: Tweak "no audio route" message
    - ASoC: macaudio: Do not constrain sense PCM
    - ASoC: tas2770: Factor out set_ivsense_slots
    - ASoC: tas2770: Fix and redo I/V sense TDM slot setting logic
    - ASoC: tas2764: Reinit cache on part reset
    - NOT UPSTREAMABLE: ASoC: tas2764: Redo I/V sense logic
    - ASoC: macaudio: Tune constraining of FEs, add BCLK
    - ASoC: apple: mca: Support capture on multiples BEs
    - ASoC: tas2764: Configure zeroing of SDOUT slots
    - WIP: ASoC: tas2764: Apply unknown Apple quirk
    - ASoC: tas2764: Raise regmap range maximum
    - ASoC: tas2770: Export 'die_temp' to sysfs
    - ASoC: tas2764: Export 'die_temp' to sysfs
    - ASoC: tas2764: Crop SDOUT zero-out mask based on BCLK ratio
    - ASoC: macaudio: Remove stale 'speaker_nchans' fields
    - ASoC: macaudio: Add 'Speakers Up Indicator' control
    - ASoC: tas2764: Add optional 'Apple quirks'
    - ASoC: macaudio: Do not disable ISENSE/VSENSE switches on j314
    - ASoC: macaudio: Fix PD link double-frees?
    - ASoC: macaudio: Sense improvements
    - ASoC: ops: Export snd_soc_control_matches()
    - macaudio: speaker volume safety interlocks
    - alsa: pcm: Remove the qos request only if active
    - macaudio: Add a getter for the interlock
    - ASoC: apple: mca: Do not mark clocks in use for non-providers
    - macaudio: Allow DT enabled speakers and gate them off in the driver
    - macaudio: Enable VSENSE switches
    - macaudio: Initialize speaker lock properly
    - macaudio: Use the same volume limit for all amps
    - macaudio: Disable debug
    - ASoC: tas2764: Enable main IRQs
    - ASoC: tas2764: Power up/down amp on mute ops
    - ASoC: tas2764: Add SDZ regulator
    - macaudio: Use an explicit mutex for the speaker volume lock
    - ASoC: tas2764: Add reg defaults for TAS2764_INT_CLK_CFG
    - ASoC: tas2764: Mark SW_RESET as volatile
    - ASoC: tas2764: Fix power control mask
    - ASoC: apple: mca: Increase reset timeout
    - ALSA: dmaengine: Always terminate DMA when a PCM is closed
    - ASoC: tas2764: Wait for ramp-down after shutdown
    - ASoC: tas2764: Enable some Apple quirks by default
    - macaudio: Rework platform config & add all remaining platforms
    - ASoC: tas2770: Add SDZ regulator
    - ASoC: tas2770: Power cycle amp on ISENSE/VSENSE change
    - ASoC: tas2770: Add zero-fill and pull-down controls
    - ASoC: tas2770: Support setting the PDM TX slot
    - ASoC: tas2770: Fix volume scale
    - macaudio: Remove -3dB safety pad from j313
    - macaudio: Skip speaker sense PCM if no sense or no speakers
    - macaudio: Officially enable j313 speakers
    - ASoC: tas2764: Set the SDOUT polarity correctly
    - ASoC: tas2770: Set the SDOUT polarity correctly
    - macaudio: Set the card name explicitly
    - macaudio: Change device ID form Jxxx to AppleJxxx
    - macaudio: Turn please_blow_up_my_speakers into an int
    - macaudio: Sync all gains with macOS
    - macaudio: Fix CHECK return condition checking
    - macaudio: Avoid matches against cs42l84's constrols
    - ASoC: apple: mca: Add delay after configuring clock
    - macaudio: Disable j313 and j274
    - ASoC: apple: mca: Add more delay after configuring clock
    - ASoC: apple: mca: More delay
    - macaudio: Fix missing kconfig requirement
    - fixup! dmaengine: apple-admac: Add Apple ADMAC driver
    - HACK: ALSA: Export 'snd_pcm_known_rates'
    - ALSA: Support nonatomic dmaengine PCMs
    - READ COMMIT MESSAGE! macaudio: Enable first round of models
    - READ COMMIT MESSAGE! macaudio: Enable second round of models
    - wifi: brcmfmac: Add missing shared area defines to pcie.c
    - wifi: brcmfmac: Handle PCIe MSI properly
    - wifi: brcmfmac: Fix logic for deciding which doorbell registers to use
    - wifi: brcmfmac: Support v6+ flags and set host_cap properly
    - wifi: brcmfmac: Add newer msgbuf packet types up to 0x2e
    - wifi: brcmfmac: Add a new bus op for D2H mailbox message handling
    - wifi: brcmfmac: Implement the H2D/D2H mailbox data commonring messages
    - wifi: brcmfmac: Support exchanging power mailbox messages via commonring
    - wifi: brcmfmac: Shut up p2p unknown frame error
    - wifi: brcmfmac: Do not service msgbuf IRQs until ready in MSI mode
    - wifi: brcmfmac: Add support for SYSMEM corerev >= 12 & fix < 12
    - wifi: brcmfmac: Add support for firmware signatures
    - wifi: brcmfmac: msgbuf: Increase RX ring sizes to 2048
    - wifi: brcmfmac: Increase bandlist size
    - wifi: brcmfmac: chip: ca7: Only disable D11 cores; handle an arbitrary
      number
    - wifi: brcmfmac: Handle watchdog properly in newer cores
    - wifi: brcmfmac: pcie: Access pcie core registers via dedicated window
    - wifi: brcmfmac: pcie: Initialize IRQs before firmware boot
    - wifi: brcmfmac: Do not set reset vector when signatures are in use
    - wifi: brcmfmac: Mask all IRQs before starting firmware
    - wifi: brcmfmac: Add support for SCAN_V3
    - wifi: brcmfmac: Implement event_msgs_ext
    - wifi: brcmfmac: Support bss_info up to v112
    - wifi: brcmfmac: Extend brcmf_wsec_pmk_le
    - wifi: brcmfmac: Add BCM4388 support
    - brcmfmac: Fix AP mode
    - Finish firmware mem map, fix heap start calculation bug.
    - Add support for encoding/decoding 6g chanspecs
    - Dynamically configure VHT settings to match firmware
    - Compute number of available antennas and set it in wiphy structure.
    - Support GCMP cipher suite, used by WPA3.
    - Don't issue wrong insufficient headroom warning
    - Support high power/low power/etc scan flags
    - Add support for 6G bands and HE
    - Fix regulatory domain handling to reset bands properly
    - fixup! fix FWIL definition to use SSID length constant
    - fixup! define missing event message extension
    - Structurize PNF scan and add support for latest version
    - Structurize scan parameter handling
    - Support new join parameter structure versions
    - Let feature attachment fail, and fail if we can't handle the interface
      versions we find.
    - Add support for more auth suites in roaming offload
    - Set chanspec during join.
    - Add support for more rate info in station dumps
    - Support bandwidth caps for all bands
    - Clean up and common interface creation handling
    - Disable partial SAE offload
    - fixup! wifi: brcmfmac: Add support for firmware signatures
    - HID: add device IDs for Apple SPI HID devices
    - HID: apple: add support for internal keyboards
    - HID: apple: add Fn key mapping for Apple silicon MacBooks
    - HID: apple: add Fn key mapping for Macbook Pro with touchbar
    - HID: magicmouse: use a define of the max number of touch contacts
    - HID: magicmouse: use struct input_mt_pos for X/Y
    - HID: magicmouse: use ops function pointers for input functionality
    - HID: magicmouse: add support for Macbook trackpads
    - WIP: HID: transport: spi: add Apple SPI transport
    - HID: add HOST vendor/device IDs for Apple MTP devices
    - HID: core: Handle HOST bus type when announcing devices
    - hid: apple: Bind to HOST devices for MTP
    - hid: magicmouse: Add MTP multi-touch device support
    - soc: apple: Add DockChannel driver
    - hid: Add Apple DockChannel HID transport driver
    - soc: apple: Add RTKit helper driver
    - HID: transport: spi: Check status message after transmits
    - HID: magicmouse: Add .reset_resume for SPI trackpads
    - HID: transport: spi: Add suspend support
    - HID: Bump maximum report size to 16384
    - HID: magicmouse: Handle touch controller resets on SPI devices
    - HID: transport: spi: Implement GET FEATURE
    - HID: magicmouse: Query device dimensions via HID report
    - HID: transport: spi: apple: Increase receive buffer size
    - lib/vsprintf: Add support for generic FOURCCs by extending %p4cc
    - platform/apple: Add new Apple Mac SMC driver
    - gpio: Add new gpio-macsmc driver for Apple Macs
    - power: supply: macsmc_power: Driver for Apple SMC power/battery stats
    - power: supply: macsmc_power: Add cycle count and health props
    - power: supply: macsmc_power: Add present prop
    - power: supply: macsmc_power: Add more props, rework others
    - power: supply: macsmc_power: Use BUIC instead of BRSC for charge
    - power: supply: macsmc_power: Turn off OBC flags if macOS left them on
    - power: supply: macsmc_power: Add AC power supply
    - power: reset: macsmc-reboot: Add driver for rebooting via Apple SMC
    - rtc: Add new rtc-macsmc driver for Apple Silicon Macs
    - Input: macsmc-hid: New driver to handle the Apple Mac SMC buttons/lid
    - Input: macsmc-hid: Support button/lid wakeups
    - gpio: macsmc: Add IRQ support
    - Input: macsmc-hid: Support the power button on desktops
    - power: supply: macsmc_power: Add critical level shutdown & misc events
    - platform/apple: smc: Add apple_smc_read_f32_scaled
    - power: supply: macsmc_power: Add a debug mode to print power usage
    - macsmc: Fix race between backend and core on notifications
    - power: supply: macsmc_power: Log power data on button presses
    - power: supply: macsmc_power: Add CHWA charge thresholds
    - power: supply: macsmc_power: Report available charge_behaviours
    - power: supply: macsmc_power: Add more properties
    - platform/apple: smc: Add apple_smc_read_ioft_scaled
    - hwmon: add macsmc-hwmon driver
    - hwmon: macsmc: Avoid global writable hwmon_chip_info
    - power: supply: macsmc_power: Add CHLS charge thresholds
    - power: supply: macsmc_power: Remove CSIL
    - power: supply: macsmc_power: Report not charging for CHLS thresholds
    - platform/apple: smc: Add apple_smc_write_f32_scaled
    - hwmon: macsmc: wire up manual fan control support
    - fixup! platform/apple: Add new Apple Mac SMC driver
    - spmi: add a first basic spmi driver for Apple SoC
    - mfd: Add a simple-mfd-spmi driver
    - nvmem: Add spmi-mfd-nvmem driver
    - nvmem: spmi-mfd-nvmem: use legacy fixed layout
    - cpufreq: apple-soc: Drop setting the PS2 field on M2+
    - dt-bindings: pci: apple,pcie: Add subnode binding, pwren-gpios property
    - PCI: apple: Use gpiod_set_value_cansleep in probe flow
    - PCI: apple: Probe all GPIOs for availability first
    - PCI: apple: Add support for optional PWREN GPIO
    - PCI: apple: Fix missing OF node reference in apple_pcie_setup_port
    - PCI: apple: Set only available ports up
    - PCI: apple: Move port PHY registers to their own reg items
    - PCI: apple: Drop poll for CORE_RC_PHYIF_STAT_REFCLK
    - PCIE: apple: Add T602x PCIe support
    - PCI: apple: Skip controller port setup for online links
    - PCI: apple: Make link up timeout configurable, default to 500ms
    - PCI: apple: Reorder & improve link-up logic
    - PCI: apple: Log the time it takes for links to come up
    - PCI: apple: Do not power down devices on port setup
    - fixup! PCI: apple: Move port PHY registers to their own reg items
    - fixup! PCI: apple: Probe all GPIOs for availability first
    - PCI: apple: Avoid PERST# deassertion through gpiod initialization
    - squash! PCI: apple: Avoid PERST# deassertion through gpiod initialization
    - xhci-pci: asmedia: Add a firmware loader for ASM2214a chips
    - Revert "nvmem: core: Print error on wrong bits DT property"
    - nvmem: allow bit offset > 8
    - nvmem: round up to word_size
    - WIP: phy: apple: Add Apple Type-C PHY
    - usb: typec: tipd: Clear interrupts first
    - phy: apple: Add DP TX phy driver
    - phy: apple: atc: Split atcphy_dp_configure_lane()
    - phy: apple: atc: Reorder ACIOPHY_CROSSBAR and ACIOPHY_MISC ops
    - phy: apple: atc: Support DisplayPort only operation
    - phy: apple: atc: Support 'set_lanes' in DP mode
    - HACK: phy: apple: atc: Ignore fake submodes
    - phy: apple: atc: support mode switches in atcphy_dpphy_set_mode()
    - phy: apple: dptx: Add debug prints for unexpected values
    - fixup! phy: apple: atc: support mode switches in atcphy_dpphy_set_mode()
    - fixup! WIP: phy: apple: Add Apple Type-C PHY
    - fixup! WIP: phy: apple: Add Apple Type-C PHY
    - phy: apple: atc: Add missing mutex_unlock in error case
    - dt-bindings: dma: apple,sio: Add schema
    - dmaengine: apple-sio: Add Apple SIO driver
    - dmaengine: apple-sio: Fix chan freeing in error path
    - dmaengine: apple-sio: Implement runtime PM
    - fixup! dmaengine: apple-sio: Add Apple SIO driver
    - docs: rust: quick-start: add Ubuntu
    - rust: types: add examples for the `Either` type
    - rust: workqueue: remove unneeded ``#[allow(clippy::new_ret_no_self)]`
    - rust: sort global Rust flags
    - rust: types: avoid repetition in `{As,From}Bytes` impls
    - rust: enable `clippy::undocumented_unsafe_blocks` lint
    - rust: enable `clippy::unnecessary_safety_comment` lint
    - rust: enable `clippy::unnecessary_safety_doc` lint
    - rust: enable `clippy::ignored_unit_patterns` lint
    - rust: enable `rustdoc::unescaped_backticks` lint
    - rust: init: remove unneeded `#[allow(clippy::disallowed_names)]`
    - rust: sync: remove unneeded `#[allow(clippy::non_send_fields_in_send_ty)]`
    - rust: introduce `.clippy.toml`
    - rust: replace `clippy::dbg_macro` with `disallowed_macros`
    - rust: rbtree: fix `SAFETY` comments that should be `# Safety` sections
    - rust: provide proper code documentation titles
    - rust: enable Clippy's `check-private-items`
    - Documentation: rust: add coding guidelines on lints
    - rust: start using the `#[expect(...)]` attribute
    - Documentation: rust: discuss `#[expect(...)]` in the guidelines
    - rust: std_vendor: simplify `{ .. macro! .. }` with inner attributes
    - rust: enable arbitrary_self_types and remove `Receiver`
    - rust: error: make conversion functions public
    - rust: std_vendor: update dbg macro from Rust upstream
    - rust: lock: add trylock method support for lock backend
    - rust: error: optimize error type to use nonzero
    - rust: kernel: move `FromBytes` and `AsBytes` traits to a new `transmute`
      module
    - rust: alloc: add `Allocator` trait
    - rust: alloc: separate `aligned_size` from `krealloc_aligned`
    - rust: alloc: rename `KernelAllocator` to `Kmalloc`
    - rust: alloc: implement `ReallocFunc`
    - rust: alloc: make `allocator` module public
    - rust: alloc: implement `Allocator` for `Kmalloc`
    - rust: alloc: add module `allocator_test`
    - rust: alloc: implement `Vmalloc` allocator
    - rust: alloc: implement `KVmalloc` allocator
    - rust: alloc: add __GFP_NOWARN to `Flags`
    - rust: alloc: implement kernel `Box`
    - rust: treewide: switch to our kernel `Box` type
    - rust: alloc: remove extension of std's `Box`
    - rust: alloc: add `Box` to prelude
    - rust: alloc: introduce `ArrayLayout`
    - rust: alloc: implement kernel `Vec` type
    - rust: alloc: implement `IntoIterator` for `Vec`
    - rust: alloc: implement `collect` for `IntoIter`
    - rust: treewide: switch to the kernel `Vec` type
    - rust: alloc: remove `VecExt` extension
    - rust: alloc: add `Vec` to prelude
    - rust: error: use `core::alloc::LayoutError`
    - rust: error: check for config `test` in `Error::name`
    - rust: alloc: implement `contains` for `Flags`
    - rust: alloc: implement `Cmalloc` in module allocator_test
    - rust: str: test: replace `alloc::format`
    - rust: alloc: update module comment of alloc.rs
    - kbuild: rust: remove the `alloc` crate and `GlobalAlloc`
    - MAINTAINERS: add entry for the Rust `alloc` module
    - drm/panic: avoid reimplementing Iterator::find
    - drm/panic: remove unnecessary borrow in alignment_pattern
    - drm/panic: prefer eliding lifetimes
    - drm/panic: remove redundant field when assigning value
    - drm/panic: correctly indent continuation of line in list item
    - drm/panic: allow verbose boolean for clarity
    - drm/panic: allow verbose version check
    - rust: exports: improve grammar in commentary
    - rust: helpers: remove unnecessary header includes
    - rust: page: add Rust version of PAGE_ALIGN
    - rust: kernel: fix THIS_MODULE header path in ThisModule doc comment
    - rust: macros: fix documentation of the paste! macro
    - rust: init: introduce `Opaque::try_ffi_init`
    - rust: introduce `InPlaceModule`
    - rust: pass module name to `Module::init`
    - rust: implement generic driver registration
    - rust: implement `IdArray`, `IdTable` and `RawDeviceId`
    - rust: add rcu abstraction
    - rust: add `Revocable` type
    - rust: add `dev_*` print macros.
    - rust: add `io::Io` base type
    - rust: add devres abstraction
    - rust: pci: add basic PCI device / driver abstractions
    - rust: pci: implement I/O mappable `pci::Bar`
    - samples: rust: add Rust PCI sample driver
    - rust: of: add `of::DeviceId` abstraction
    - rust: platform: add basic platform device / driver abstractions
    - samples: rust: add Rust platform sample driver
    - rust: drm: ioctl: Add DRM ioctl abstraction
    - rust: Add a Sealed trait
    - rust: drm: add driver abstractions
    - rust: drm: add device abstraction
    - rust: drm: add DRM driver registration
    - rust: drm: file: Add File abstraction
    - rust: drm: gem: Add GEM object abstraction
    - rust: pci: device: s/from_raw/get_device/
    - rust: platform: device: s/from_raw/get_device/
    - rust: allocator: Disable clippy::undocumented_unsafe_blocks lint
    - rust: alloc: kbox: Add CoerceUnsized trait
    - rust: alloc: Vec: Implement .clear()/.truncate()
    - rust: alloc: vec: Add TryFrom trait
    - rust: alloc: vec: Import .drain() / Drain from rust library
    - rust: str: allow dereferencing BStr in a const ctx
    - rust: helpers: Fix spinlock helper for various spinlock modes
    - rust: Enable type_alias_impl_trait
    - rust: kernel: lock: Add Lock::pin_init()
    - rust: init: Implement Zeroable::zeroed()
    - rust: init: Support type paths in pin_init!() and friends
    - rust: types: Add Opaque::zeroed()
    - rust: Use absolute paths to build Rust objects
    - rust: kernel: Add simple siphash abstraction
    - rust: sync: Add dummy LockClassKey implementation for !CONFIG_LOCKDEP
    - rust: sync: Replace static LockClassKey refs with a pointer wrapper
    - fixup! rust: sync: Replace static LockClassKey refs with a pointer wrapper
    - rust: sync: Implement dynamic lockdep class creation
    - fixup! rust: sync: Implement dynamic lockdep class creation
    - rust: sync: Classless Lock::new() and pin_init()
    - fixup! rust: sync: Classless Lock::new() and pin_init()
    - rust: init: Update documentation for new mutex init style
    - rust: sync: Add LockdepMap abstraction
    - WIP: rust: kernel: sync: lockdep.rs Box/Vec fixes
    - rust: sync: arc: Add lockdep integration
    - fixup! rust: sync: arc: Add lockdep integration
    - rust: time: New module for timekeeping functions
    - rust: xarray: Add an abstraction for XArray
    - rust: io_pgtable: Add io_pgtable abstraction
    - fixup! rust: io_pgtable: Add io_pgtable abstraction
    - rust: soc: apple: rtkit: Add Apple RTKit abstraction
    - fixup! rust: soc: apple: rtkit: Add Apple RTKit abstraction
    - *RFL import: kernel::types::Bool
    - *RFL import: kernel::io_buffer
    - fixup! *RFL import: kernel::io_buffer
    - rust: io_buffer: Disable clippy::undocumented_unsafe_blocks lint
    - *RFL import: kernel::user_ptr
    - fixup! *RFL import: kernel::user_ptr
    - rust: user_ptr: Disable clippy::undocumented_unsafe_blocks lint
    - MISSING SIGNOFFS: rust: Add PAGE_SIZE constant to kernel crate
    - *RFL import: kernel::module_param
    - fixup! *RFL import: kernel::module_param
    - rust: module_param: Tolerate a trailing newline when parsing
    - rust: module_param: Disable clippy::undocumented_unsafe_blocks lint
    - *RFL import: kernel::delay
    - rust: of: Add OF node abstraction
    - fixup! rust: of: Add OF node abstraction
    - rust: Fix x86 build
    - rust: of: Add parse_phandle_by_name()
    - HACK: rust: of: add as_raw()
    - *RFL import: kernel::io_mem
    - rust: platform: add `ioremap_resource` and `get_resource` methods
    - fixup! rust: platform: add `ioremap_resource` and `get_resource` methods
    - rust: kernel: platform: Add Device.set_dma_masks()
    - fixup! rust: kernel: platform: Add Device.set_dma_masks()
    - rust: Add ioremap_np support to io_mem & friends
    - rust: platform: Add platform::Device::get_device()
    - *RFL import: macros::module params functionality & deps
    - Revert "rust: remove `params` from `module` macro example"
    - rust: macros: module: Functionally revert commit 7044dcff8301
    - rust: block: rnull: Adapt to asahi's rust base branch
    - *RFL import: Rest of kernel::error::code::*
    - rust: bindings: Add resource_size wrapper
    - rust: Allow feature allocator_api
    - rust: Add missing impl_trait_in_assoc_type feature
    - rust: bindgen: Exclude list functions with unsupported ABIs
    - *RFL import: kernel::KParamGuard & friends
    - rust: init: Add default() utility function
    - rust: init: Disable clippy::undocumented_unsafe_blocks lint
    - rust: init: macros: Disable clippy::undocumented_unsafe_blocks lint
    - rust: print: Disable clippy::undocumented_unsafe_blocks lint
    - kernel: str: Add/fix SAFETY comments
    - rust: kernel: workqueue: Disable clippy::undocumented_unsafe_blocks lint
    - rust: Enable clippy::undocumented_unsafe_blocks lint
    - rust: Add time_namespace helpers
    - rust: add unstable feature associated_type_defaults
    - rust: alloc: Fix `ArrayLayout` allocations
    - WIP: drm/apple: Add DCP display driver
    - drm: apple: Relicense DCP driver as dual MIT / GPL v2.0
    - drm/apple: Start coprocessor on probe
    - HACK: drm/apple: avoid DCP swaps without attached surfaces
    - drm/apple: Use a device tree defined clock for dcpep_cb_get_frequency
    - drm/apple: Fix rt_bandwidth for t600x
    - drm/apple: Add nop sr_set_uint_prop callback for t600x-dcp
    - drm/apple: Reference only swapped out framebuffers
    - drm/apple: Use "apple,asc-dram-mask" for rtkit iovas
    - drm/apple: Implement suspend/resume for DCP
    - drm/apple: dcp: fix TRAMPOLINE_IN macro
    - drm/apple: Switch to nonblocking commit handling
    - drm/apple: Log callbacks with their tag as debug output
    - drm/apple: Add DCP interface definitions used on t600x
    - drm/apple: Clear used callback/cookie on dcp_ack
    - drm/apple: Add t600x support
    - drm/apple: toggle power only when active state changes
    - drm/apple: Add somewhat useful debug prints
    - drm/apple: Add less tons of questionable debug prints
    - drm/apple: implement read_edt_data
    - drm/apple: clear callback's output data
    - drm/apple: Support memory unmapping/freeing
    - WIP: drm/apple: Change the way to clear unused surfaces
    - drm/apple: laod piodma dev via explicit phandle
    - drm/apple: Fix kzalloc in dcp_flush()
    - drm/apple: Allow modesets even when disconnected
    - drm/apple: Mark the connecter on init only with modes as connected
    - drm/apple: make note about drm.mode_config.max_width/height
    - drm/apple: Split dcpep/iomfb out of dcp.c
    - WIP: add header test target copied from i915
    - gpu: drm: apple: Use connector types from devicetree
    - drm: apple: Fix connector state on devices with integrated display
    - drm: apple: Replace atomic refcount with kref
    - gpu: drm: apple: Start using tracepoints
    - gpu: drm: apple: Unbreak multiple DCP plane <-> crtc matching
    - gpu: drm: apple: Add support for DRM_FORMAT_XRGB2101010
    - gpu: drm: apple: Add apple_drm_gem_dumb_create()
    - gpu: drm: apple: Reject modes without valid color mode
    - gpu: drm: apple: Convert 2 non-assert WARN()s to dev_err()
    - gpu: drm: apple: Send an disconnected hotplug event on ASC crash
    - gpu: drm: apple: Add dcp_crtc_atomic_check
    - gpu: drm: apple: Fix DCP run time PM
    - gpu: drm: apple: Fix DCP initialisation
    - gpu: drm: apple: Specify correct number of DCP*s for drm_vblank_init
    - gpu: drm: apple: Remove other framebuffers before DRM setup
    - gpu: drm: apple: Support opaque pixel formats
    - gpu: drm: apple: Provide notch-less modes
    - gpu: drm: apple: Fix shutdown of partially probed dcp
    - gpu: drm: apple: Set maximal framebuffer size correctly
    - gpu: drm: apple: Prevent NULL pointer in dcp_hotplug
    - gpu: drm: apple: Update date last update
    - gpu: drm: apple: iomfb: Use FIELD_{GET,PREP}
    - gpu: drm: apple: iomfb: Unify call and callback channels
    - gpu: drm: apple: "match" PMU/backlight services on init
    - gpu: drm: apple: Brightness control via atomic commits
    - HACK: gpu: drm: apple: j314/j316: Ignore 120 Hz mode for integrated display
    - drm/apple: Fix suspend/resume handling
    - gpu: drm: apple: Avoid drm_fb_dma_get_gem_addr
    - drm/apple: register backlight device after IOMFB start
    - drm/apple: Add trace point for display brightness
    - drm/apple: Implement drm_crtc_helper_funcs.mode_fixup
    - drm/apple: Read display dimensions from devicetree
    - drm/apple: Wait for power on request to complete synchronously
    - drm/apple: Remove obsolete ignore_swap_complete
    - drm/asahi: Fix backlight restores on non-microLED devices
    - drm/apple: Schedule backlight update on enable_backlight_message_ap_gated
    - drm/apple: Report "PMUS.Temperature" only for mini-LED backlights
    - drm/apple: Check if DCP firmware is supported
    - drm/apple: Disable fake vblank IRQ machinery
    - gpu: drm: apple: Parse color modes completely
    - gpu: drm: apple: Skip parsing elements of virtual timing modes
    - gpu: drm: apple: Add tracing for color and timing modes
    - gpu: drm: apple: Prefer SDR color modes
    - gpu: drm: apple: Add IOMobileFramebufferAP::get_color_remap_mode
    - gpu: drm: apple: reenable support for {A,X}RGB2101010
    - gpu: drm: apple: Add show_notch module parameter
    - Revert "gpu: drm: apple: reenable support for {A,X}RGB2101010"
    - drm/apple: Enable 10-bit mode & set colorspace to native
    - gpu: drm: apple: Clear all surfaces on startup
    - drm/apple: Update swap handling
    - gpu: drm: apple: Use drm_aperture_remove_conflicting_framebuffers
    - drm/apple: Use drm_module_platform_driver
    - drm/apple: Allocate drm objects according to drm's expectations
    - gpu: drm: apple: Use components to avoid deferred probing
    - gpu: drm: apple: Wait for iomfb initialization
    - drm/apple: simplify IOMFB_THUNK_INOUT
    - drm/apple: Fix parse_string() memory leaks
    - drm/apple: Fix bad error return
    - drm/apple: Set backlight level indirectly if no mode is set
    - drm/apple: Use backlight_get_brightness()
    - drm/apple: Move panel options to its own sub-struct
    - drm/apple: Align buffers to 16K page size
    - drm/apple: purge unused dcp_update_notify_clients_dcp
    - drm/apple: Add callbacks triggered by last_client_close_dcp()
    - drm/apple: Add support for the macOS 13.2 DCP firmware
    - drm/apple: ignore surf[3] in clear swap calls
    - drm/apple: Support color transformation matrices
    - drm/apple: Drop unsupported DRM_FORMAT_ARGB2101010
    - dcp: Allow unused trampolines
    - dcp: Add get_tiling_state
    - dcp: 42-bit DMA masks
    - dcp: T602X bwreq support
    - dcp: Warn if DMA mapping fails
    - WIP: drm/apple: Port to incompatible V13.3 firmware interface
    - drm/apple: Remove simpledrm framebuffer before DRM device alloc
    - drm/apple: Mark DCP as being in the wakeup path
    - drm: apple: iomfb: Increase modeset timeout to 2.5 seconds
    - drm: apple: Only match backlight service on DCP with panel
    - drm: apple: iomfb: limit backlight updates to integrated panels
    - drm: apple: backlight: avoid updating the brightness with a commit
    - drm/apple: Get rid of the piodma dummy driver
    - drm/apple: Use iommu domain for piodma maps
    - drm: apple: Align PIODMA buffers to SZ_16K
    - drm: apple: Add D129 allocate_bandwidth iomfb callback
    - drm: apple: Update supported firmware versions to 12.3 and 13.5
    - drm: apple: dcp: Port over to DEFINE_SIMPLE_DEV_PM_OPS
    - drm: apple: dcp: Remove cargo-culted devm_of_platform_populate
    - drm: apple: iomfb: implement abort_swaps_dcp
    - drm: apple: iomfb: Increase modeset tiemout to 8.5 seconds
    - drm: apple: Remove explicit asc-dram-mask handling
    - mux: apple DP xbar: Add Apple silicon DisplayPort crossbar
    - mux: apple dp crossbar: Support t8112 varient
    - mux: apple dp crossbar: FIFO_RD_UNK_EN seems to use 2 bits per dispext*
    - mux: apple dp crossbar: Read UNK_TUNABLE before and after writing it
    - mux: apple dp crossbar: Support t602x DP cross bar variant
    - gpu: drm: apple: Add utility functions for matching on dict keys
    - gpu: drm: apple: Add 'parse_blob'
    - gpu: drm: apple: Add sound mode parsing
    - drm: apple: DCP AFK/EPIC support
    - drm: apple: afk: Use linear array of services
    - drm: apple: Add DPTX support
    - drm: apple: Move offsets for rt_bandwidth callback to DT
    - drm: apple: iomfb: Do not match/create PMU service for dcpext
    - drm: apple: afk: Adapt to macOS 13.3 firmware
    - drm: apple: dptx: Port APCALL to macOS 13.3 firmware
    - drm: apple: dptx: port interface to macOS 13.5 firmware
    - drm: apple: dptx: Add set_active_lanes APCALL
    - drm: apple: dptx: Add DPTX_APCALL_ACTIVATE
    - drm: apple: dptx: Adapt dptxport_connect() to observed behavior
    - drm: apple: afk: Clear commands before sending them
    - drm: apple: Fix missing unlock path in dcp_dptx_connect
    - drm: apple: dptxep: Fix reply size check
    - drm: apple: dptxep: Implement drive settings stuff
    - drm/apple: Add missing sound Kconfig dependencies
    - drm: apple: HACK: Do not delete piodma platform device
    - drm: apple: afk: Update read pointer before processing message
    - drm: apple: Implement D592 callback
    - drm: apple: Keep information at which swap_id fb are still referenced
    - Revert "drm: apple: iomfb: Do not match/create PMU service for dcpext"
    - drm: apple: dptx: Implement APCALL_DEACTIVATE and reset the phy
    - drm: apple: Disconnect dptx When the CRTC is powered down
    - drm: apple: dptx: Wait for completion of dptx_connect.
    - drm: apple: HPD: Only act on connect IRQs
    - drm: apple: iomfb: Improve hotplug related logging
    - drm: apple: Extract modeset crtc's atomic_flush()
    - drm: apple: dptx: Log connect/disconnect calls
    - drm: apple: Move modeset into drm_crtc's atomic_enable
    - drm: apple: Fix DPTX hotplug handling
    - drm: apple: iomfb: Use drm_kms_helper_connector_hotplug_event
    - drm : apple: iomfb: Handle OOB ASYNC/CB context
    - drm: apple: iomfb: Extend hotplug/mode parsing logging
    - drm: apple: Adjust startup sequence and timing for dptx
    - drm: apple: dcp: Fix resume with DPTX based display outputs
    - drm: apple: Be less noisy about teardown notifies without service
    - drm: apple: dptx: Wait for link config on connect
    - drm: apple: Prefer RGB SDR modes
    - drm: apple: iomfb: Always parse DisplayAttributes
    - drm: apple: parser: constify parser data
    - drm: apple: epic: Pass full notfiy/report payload to handler
    - drm: apple: epic: systemep: Parse "mNits" log events
    - drm: apple: mark local functions static
    - drm/apple: Add missing RTKit Kconfig dependency
    - drm/apple: spelling fixes
    - drm: apple: backlight: force backlight update after resume
    - drm: apple: Fix/remove log messages
    - drm: apple: dptx: Debounce HPD by simple msleep()
    - drm: apple: Add Kconfig option for audio
    - drm: apple: iomfb: export property dicts in connector debugfs
    - gpu: drm: apple: Expose injecting of EPIC calls via debugfs
    - gpu: drm: apple: Set up client of AV endpoint
    - drm: apple: av: Support macOS 12.3 and 13.5 firmware APIs
    - drm: apple: av: Do not open AV service from afk receive handler
    - gpu: drm: apple: Add DCP audio driver
    - drm: apple: dptx: Remove DPTX disconnect/connect on init
    - drm: apple: audio: init AV endpoint later
    - drm: apple: av: Use a workqueue
    - drm: apple: audio: move the audio driver into the DCP module
    - drm: apple: audio: Make the DP/HDMI audio driver a full driver
    - drm: apple: audio: Avoid probe errors
    - drm/apple: fix double words in comments
    - drm: apple: backlight: release lock in error path
    - drm: apple: Switch back to drm_atomic_helper_commit_tail_rpm()
    - drm: apple: Fix broken MemDescRelay::release_descriptor callback number
    - drm: apple: Reduce log spam about busy command channel
    - drm: apple: av: Warn only once about failed calls
    - drm: apple: disable HDMI audio by default
    - drm: apple: Override drm_vblank's page flip event handling [HACK]
    - drm/apple: Explicitly stop AFK endpoints on shutdown
    - drm/apple: audio: Create a device link to the DMA device
    - drm/apple: audio: Defer DMA channel acquisition to device open
    - drm/apple: audio: Fix hotplug notifications
    - drm: apple: Add oob hotplug event
    - drm: apple: dptx: Fix get_drive_settings retcode
    - drm: apple: dptxport: get_max_lane_count: Retrieve lane count from phy
    - drm/apple: Fix missing mode init (feel free to squash)
    - drm: apple: iomfb: Align buffer size on unmap/free as well
    - Revert "drm: apple: HACK: Do not delete piodma platform device"
    - drm: apple: afk: Optionally match against EPICName
    - drm: apple: Add dcpav-service-ep
    - drm: apple: iomfb: Provide the EDID as connector property
    - ALSA: Introduce 'snd_interval_rate_bits'
    - fixup! mux: apple dp crossbar: Support t602x DP cross bar variant
    - fixup! mux: apple dp crossbar: Support t602x DP cross bar variant
    - fixup! mux: apple dp crossbar: Support t602x DP cross bar variant
    - fixup! mux: apple dp crossbar: Support t602x DP cross bar variant
    - drm: apple: Enable EDID support by default
    - fixup! drm/apple: audio: Create a device link to the DMA device
    - drm: apple: audio: Implement runtime PM support
    - fixup! mux: apple dp crossbar: Support t602x DP cross bar variant
    - iommu/io-pgtable: Add Apple UAT variant format
    - iommu/io-pgtable: Hack in FW-RW/GPU-RO mode into UAT io_pgtable
    - rust: io_pgtable: Add the Apple UAT format abstraction
    - fixup! rust: io_pgtable: Add the Apple UAT format abstraction
    - rust: dma_fence: Add DMA Fence abstraction
    - fixup! rust: dma_fence: Add DMA Fence abstraction
    - rust: helpers: Add bindings/wrappers for dma_resv
    - drm/gem-shmem: Export VM ops functions
    - rust: drm: gem: shmem: Add DRM shmem helper abstraction
    - fixup! rust: drm: gem: shmem: Add DRM shmem helper abstraction
    - rust: drm: device: Convert Device to AlwaysRefCounted
    - fixup! rust: drm: device: Convert Device to AlwaysRefCounted
    - rust: drm: gem: Allow pinning GEM object driver data
    - rust: drm: mm: Add DRM MM Range Allocator abstraction
    - fixup! rust: drm: mm: Add DRM MM Range Allocator abstraction
    - rust: drm: syncobj: Add DRM Sync Object abstraction
    - drm/scheduler: Fix UAF in drm_sched_fence_get_timeline_name
    - rust: drm: sched: Add GPU scheduler abstraction
    - fixup! rust: drm: sched: Add GPU scheduler abstraction
    - drm/gem: Add a flag to control whether objects can be exported
    - rust: drm: gem: Add set_exportable() method
    - drm/shmem-helper: Add lockdep asserts to vmap/vunmap
    - drm/scheduler: Clean up jobs when the scheduler is torn down.
    - rust: drm: sched: Use &mut for ArmedJob.fences()
    - drm/gpuvm: Add drm_gpuvm_bo_unmap()
    - rust: drm: Add GPUVM Manager abstraction
    - fixup! rust: drm: Add GPUVM Manager abstraction
    - HACK: rust: drm: device: Add device initialization without data
    - HACK: rust: drm: device: Add pointless device() method
    - rust: drm: gem: shmem: Add share_dma_resv() function
    - rust: macros: Add versions macro
    - drm/asahi: Add the Asahi driver UAPI
    - fixup! drm/asahi: Add the Asahi driver UAPI
    - rust: bindings: Bind the Asahi DRM UAPI
    - drm/asahi: Add the Asahi driver for Apple AGX GPUs
    - fixup! drm/asahi: Add the Asahi driver for Apple AGX GPUs
    - DO NOT MERGE: drm/asahi: Add an experimental UAPI extension
    - drm/asahi: render: Implement unknown value UAPI extension
    - drm/asahi: hw,initdata: Initdata fixes for G14S
    - drm/asahi: hw: Drop max_dies
    - fixup! drm/asahi: hw: Drop max_dies
    - drm/asahi: initdata: Fix ver_info for G13 V13.5
    - drm/asahi: fw/channels: Identify subpipe (?) field in tvb ack
    - drm/asahi: fw/channels: Document more message types a bit
    - drm/asahi: initdata: Fix 13.5 field position for G13X
    - drm/asahi: initdata: Document more stuff
    - drm/asahi: fw/microseq: Document bits of has_attachments
    - drm/asahi: hw/t600x: Expand some mappings
    - drm/asahi: hw/t8112: Make last IOMapping read-only
    - drm/asahi: render: Correct some values for G14
    - drm/asahi: initdata: Initialize GpuStatsFrag properly
    - drm/asahi: slotalloc: Allow initializing empty slots
    - drm/asahi: fw.channels: Add static assertions for message sizes
    - drm/asahi: hw.t602x: Fixes for t6022
    - drm/asahi: regs: Fix cluster count for G14D
    - drm/asahi: Enable probing for t6022
    - drm/asahi: Increase recursion limit
    - drm/asahi: initdata: Fixes for G14D
    - drm/asahi: initdata,hw: Identify & set idle_off_standby_timer
    - drm/asahi: initdata: Fudge t3 calculation a bit
    - drm/asahi: gpu,hw: Fix array IOMappings
    - drm/asahi: hw/t602x: Increase meta/preempt sizes for G14D
    - drm/asahi: Expose firmware version to userspace
    - fixup! drm/asahi: Expose firmware version to userspace
    - drm/asahi: alloc: Support tagging array allocs
    - drm/asahi: alloc: Use tag as the guard marker
    - fixup! drm/asahi: alloc: Use tag as the guard marker
    - drm/asahi: buffer: Add tags to all the buffers
    - drm/asahi: initdata: Tag more arrays
    - drm/asahi: queue/compute: Tag preempt buf
    - drm/asahi: render: Tag AuxFB
    - drm/asahi: workqueue: Tag GPU buf
    - drm/asahi: buffer,render: Identify and provide layer meta buf
    - drm/asahi: compute: Implement bindless samplers
    - drm/asahi: render: Implement bindless samplers
    - drm/asahi: fw,queue: Implement helper programs
    - drm/asahi: render: Identify and set Z/S strides for layered rendering
    - drm/asahi: queue: Quieten some debugs
    - drm/asahi: Add verbose UAPI error reporting
    - drm/asahi: file: Remove sync limit
    - drm/asahi: render: Remove sync TVB growth support
    - drm/asahi: buffer: Complain more loudly about sync requests
    - drm/asahi: Identify & add render VS spills flag
    - drm/asahi: Identify and allocate clustered layering metadata buf
    - drm/asahi: Fix Clippy complaints
    - drm/asahi: render: Fix layered rendering on G14X
    - drm/asahi: render, buffer: Fix layered rendering on G13X (again)
    - drm/asahi: initdata: New init chain API for rebase
    - fixup! drm/asahi: initdata: New init chain API for rebase
    - drm/asahi: workqueue: Work around ICE in Rust 1.74
    - drm/asahi: queue: Alocate the NotifierList as shared
    - drm/asahi: compute: Allow no preemption flag
    - drm/asahi: Identify and implement helper config register
    - drm/asahi: Check command structure sizes
    - drm/asahi: alloc: Do not allocate memory to free memory
    - fixup! drm/asahi: alloc: Do not allocate memory to free memory
    - drm/asahi: microseq: Fix warnings
    - drm/asahi: Don't lock up when unmapping PTEs fails
    - fixup! drm/asahi: Don't lock up when unmapping PTEs fails
    - drm/asahi: Convert to GPUVM and implement more VM_BIND ops
    - fixup! drm/asahi: Convert to GPUVM and implement more VM_BIND ops
    - drm/asahi: Refactor address types
    - drm/asahi: util: Add RangeExt helpers for Range<T>
    - drm/asahi: mmu: Convert to using Range
    - drm/asahi: Move the unknown dummy page to the top of the address space
    - drm/asahi: Convert more ranges to Range<>
    - fixup! drm/asahi: Convert more ranges to Range<>
    - drm/asahi: mmu: Fix lockdep issues with GpuVm
    - drm/asahi: Implement GEM objects sharing a single DMA resv
    - drm/asahi: queue: Split into Queue and QueueInner
    - drm/asahi: workqueue: Tweak some debug logs
    - drm/asahi: run rustfmt
    - fixup! drm/asahi: run rustfmt
    - drm/asahi: file: Update to newer VM_BIND API
    - fixup! drm/asahi: file: Update to newer VM_BIND API
    - drm/asahi: Signal soft fault support to userspace
    - drm/asahi: Enable soft faults by default
    - drm/asahi: Fix u32 mult overflow on large tilebufs/TPCs
    - drm/asahi: Workqueue: Add more debug
    - drm/asahi: Fix event tracking when JobSubmission is dropped
    - drm/asahi: gpu: Show unknown field in timeouts
    - fixup! drm/asahi: gpu: Show unknown field in timeouts
    - FIXUP: drm/asahi: firmware fixes
    - drm/asahi: Handle channel errors
    - fixup! drm/asahi: Handle channel errors
    - drm/asahi: event: Initialize stamps to different values
    - drm/asahi: workqueue,queue: More debug
    - fixup! drm/asahi: workqueue,queue: More debug
    - drm/asahi: workqueue: Fix "Cannot submit, but queue is empty?" bug
    - drm/asahi: Clean up jobs in a workqueue
    - fixup! drm/asahi: Clean up jobs in a workqueue
    - drm/asahi: Add robust_isolation kernel parameter
    - FIXUP: drm/asahi: firmware fixes 2
    - drm/asahi: HACK: Disable compute preemption for now
    - drm/asahi: Align kernel range to buffer::PAGE_SIZE
    - drm/asahi: Implement missing ASAHI_BIND_OP_UNBIND
    - drm/asahi: Implement ASAHI_GET_TIME
    - drm/asahi: Modify debug dev printk macros to avoid adding ".as_ref()"
    - drm/asahi: gpu: Force Box move with manual Box<T>::into_inner()
    - drm/asahi: gpu: Get resources directly through DRM pricate data
    - drm/asahi: mmu: Move closer to rust of integration
    - drm/asahi: regs: Get device ref from platform dev
    - drm/asahi: driver: Port to new device/driver registration
    - drm/asahi: gpu: Collect garbage for private/gpuro together
    - drm/asahi: alloc: Be more verbose about failures
    - drm/asahi: gpu: Add a max object count garbage limit
    - prctl: Introduce PR_{SET,GET}_MEM_MODEL
    - arm64: Implement PR_{GET,SET}_MEM_MODEL for always-TSO CPUs
    - arm64: Introduce scaffolding to add ACTLR_EL1 to thread state
    - arm64: Implement Apple IMPDEF TSO memory model control
    - KVM: arm64: Expose TSO capability to guests and context switch
    - fixup! arm64: Implement Apple IMPDEF TSO memory model control
    - arm64: cpufeature: Unify SCOPE_LOCAL_CPU early & late behavior
    - fixup! arm64: Implement Apple IMPDEF TSO memory model control
    - fixup! arm64: Implement PR_{GET,SET}_MEM_MODEL for always-TSO CPUs
    - fixup! KVM: arm64: Expose TSO capability to guests and context switch
    - gpu: drm: adp: Add Apple Display Pipe driver
    - gpu: drm: adp: Add a backlight driver for the Summit LCD
    - MAINTAINERS: Add entries for touchbar display driver
    - gpu: drm: adp: Refuse X* as client in open()
    - gpu: drm: adp: base the max framebuffer width and height on screen size
    - dt-bindings: input: touchscreen: Add Z2 controller bindings.
    - input: apple_z2: Add a driver for Apple Z2 touchscreens
    - MAINTAINERS: Add entries for Apple Z2 touchscreen driver
    - gpu: drm: adp: Use 16-bit writes for brightness
    - gpu: drm: adp: Allow max brightness to be set via device tree
    - fixup! gpu: drm: adp: Add Apple Display Pipe driver
    - fixup! input: apple_z2: Add a driver for Apple Z2 touchscreens
    - media: apple: Add Apple ISP driver
    - media: apple: isp: IMX558 initial support
    - media: apple: isp: Use preallocated heap
    - media: apple: isp: Fixup shared region arg
    - media: apple: isp: Enable t6000
    - media: apple: isp: Split gpio/mbox MMIO range
    - media: apple: isp: Drop the DART mirroring stuff
    - media: apple: isp: Do not defer on failure to initialize DART
    - media: apple: WIP: t6000 hax
    - media: apple: isp: Set platform_id in bootargs
    - media: apple: isp: Better document info struct fields
    - media: apple: isp: Don't use define for bootargs size
    - media: apple: isp: wmb() before GPIO write
    - media: apple: isp: s/asc/coproc/
    - media: apple: isp: rm unused bootargs members
    - media: apple: isp: rm old isp_resv struct
    - media: apple: isp: misc isp-fw.c improvements
    - media: apple: isp: alloc static surfaces only once
    - media: apple: isp: fix copyright
    - media: apple: isp: Support >32bit VAs for t602x
    - media: apple: isp: t602x hw config
    - media: apple: isp: Working t602x and multiple formats and more fixes
    - media: apple: isp: Always enable singleplane API, make multiple a module
      param
    - media: apple: isp: Switch to threaded IRQs
    - media: apple: isp: Remove ioread/iowrite and stop doing raw address
      translation
    - media: apple: isp: Propagate EINTR from firmware loads
    - media: apple: isp: Implement posted commands
    - media: apple: isp: Add STOP and POWER_DOWN commands
    - media: apple: isp: Maybe fix some DMA ordering issues
    - media: apple: isp: Make channel sends not interruptible
    - media: apple: isp: Use a second region for MBOX_IRQ_{DOORBELL,ACK}
    - media: apple: isp: t8112 HW config
    - media: apple: isp: Limit maximal number of buffers
    - media: apple: isp: t8112 fixes...
    - media: apple: isp: Add flicker_sensor_set cmd
    - media: apple: isp: Minor changes to cam flow
    - media: apple: isp: Make sub-pmdomain handling explicit
    - media: apple: isp: Zero out pages allocated to ISP
    - media: apple: isp: Use cached IOMMU mappings
    - media: apple: isp: Rework meta surface handling & buffer return
    - media: apple: isp: Clear IRQs when resetting coproc
    - media: apple: isp: Add a missing read barrier (possibly?)
    - media: apple: isp: VMap only what is necessary, remove redundant logging
      state bit
    - media: apple: isp: Only reset coproc when necessary, fix minor race
    - media: apple: isp: Option to use CMD_STOP (ifdeffed out)
    - media: apple: isp: Use a more user-friendly device name
    - media: apple: isp: Parse firmware version from device tree
    - media: apple: isp: Show camera presets even for unsupported sensors
    - media: apple: isp: Enable IMX364 sensor
    - media: apple: isp: implement ENUM_FRAMEINTERVALS trivially
    - media: apple: isp: Use a mutex instead of a spinlock for channels
    - media: apple: isp: Support system sleep
    - fixup! media: apple: isp: Working t602x and multiple formats and more fixes
    - fixup! media: apple: isp: Working t602x and multiple formats and more fixes
    - Revert "Add 'asahi' localversion to 05-asahi.localversion"
    - Asahi patchset asahi-6.12.1-2

 -- John Cabaj <john.cabaj@canonical.com>  Mon, 02 Dec 2024 16:12:00 -0600

linux-asahi-arm (6.12.0-1000.0) plucky; urgency=medium

  * Empty entry

 -- John Cabaj <john.cabaj@canonical.com>  Mon, 02 Dec 2024 14:13:22 -0600
